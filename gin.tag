<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>tracktion_AbletonLink.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__AbletonLink_8h.html</filename>
    <class kind="class">tracktion_engine::AbletonLink</class>
    <class kind="struct">tracktion_engine::AbletonLink::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ActiveNoteList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__ActiveNoteList_8h.html</filename>
    <class kind="struct">tracktion_engine::ActiveNoteList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AirWindows.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/airwindows/</path>
    <filename>tracktion__AirWindows_8h.html</filename>
    <class kind="class">tracktion_engine::AirWindowsCallback</class>
    <class kind="class">tracktion_engine::AirWindowsPlugin</class>
    <namespace>tracktion_engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>tracktion__AirWindows_8h.html</anchorfile>
      <anchor>a4eb7742fcf649047c78ea5229fe97e4e</anchor>
      <arglist>(className, pluginName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad1a4019b7d3e3c0a61eb54540cc2585a</anchor>
      <arglist>(AirWindowsADClip7, &quot;ADClip 7&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af0219a3bd1fd01ebad5c0bd39e316a3e</anchor>
      <arglist>(AirWindowsADT, &quot;ADT&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb9012ae7574d02676cd049b76349bed</anchor>
      <arglist>(AirWindowsAQuickVoiceClip, &quot;A Quick Voice Clip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a701fefd7269cbd60985548aed96fa2c5</anchor>
      <arglist>(AirWindowsAcceleration, &quot;Acceleration&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a012f20690dd855ea0935bce48ceb820a</anchor>
      <arglist>(AirWindowsAir, &quot;Air&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5a8f3ad8616c21d9b067920a4f4eb7ab</anchor>
      <arglist>(AirWindowsAtmosphereBuss, &quot;Atmosphere Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3c520830da760540fef03be0d7f7ec4f</anchor>
      <arglist>(AirWindowsAtmosphereChannel, &quot;Atmosphere Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9315c1d01a70fe1a287b3a8f1e8293e</anchor>
      <arglist>(AirWindowsAura, &quot;Aura&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aba37134f6f63b66d915741fa1825cba7</anchor>
      <arglist>(AirWindowsAverage, &quot;Average&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1e94b93dbb2cd5b9ddb14e10ab4623f1</anchor>
      <arglist>(AirWindowsBassDrive, &quot;Bass Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af2e984837655a86b31572262e678928c</anchor>
      <arglist>(AirWindowsBassKit, &quot;Bass Kit&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a04739ce328285829acf2c9e9a6150c8a</anchor>
      <arglist>(AirWindowsBiquad, &quot;Biquad&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24053541bce6c8633a76009859f5c0c9</anchor>
      <arglist>(AirWindowsBiquad2, &quot;Biquad 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab6c55b39411d4d62dcb6c5876922fd5a</anchor>
      <arglist>(AirWindowsBitGlitter, &quot;Bit Glitter&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7e66f8684f57a5eade3d30a71b7d9292</anchor>
      <arglist>(AirWindowsBitShiftGain, &quot;Bit Shift Gain&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0023ac9bb0de3bd0387caaee4456c797</anchor>
      <arglist>(AirWindowsBite, &quot;Bite&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5dbe84395ced54b75259b23837286213</anchor>
      <arglist>(AirWindowsBlockParty, &quot;Block Party&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a32af09593c6b98e61b44c3a22ebd2d52</anchor>
      <arglist>(AirWindowsBrassRider, &quot;Brass Rider&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acfc58cf49bf6d430650d0b156f1ed71f</anchor>
      <arglist>(AirWindowsBuildATPDF, &quot;Build ATPDF&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1f14e34b29a0bb16d0e3e626eec234ae</anchor>
      <arglist>(AirWindowsBussColors4, &quot;Buss Colors 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae3b254c59475122dc840323d869894fc</anchor>
      <arglist>(AirWindowsButterComp, &quot;Butter Comp&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e614fb9d46cb17e6ca361cd1340ddb9</anchor>
      <arglist>(AirWindowsButterComp2, &quot;Butter Comp 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6de046a614a0befd7163c145457389ba</anchor>
      <arglist>(AirWindowsC5RawBuss, &quot;C5 Raw Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27f513294231f46ea257cbf388398204</anchor>
      <arglist>(AirWindowsC5RawChannel, &quot;C5 Raw Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a254e2a955f56c5870291f945d4f89839</anchor>
      <arglist>(AirWindowsCStrip, &quot;C Strip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af925fd720b6e2a94add2ebcee1c56e4b</anchor>
      <arglist>(AirWindowsCapacitor, &quot;Capacitor&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab4bcfed2e3017e0a1ddf280e464632a1</anchor>
      <arglist>(AirWindowsChannel4, &quot;Channel 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a676c840fa5f2941d337472c49f55e5b8</anchor>
      <arglist>(AirWindowsChannel5, &quot;Channel 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac822681a6475cc422b3e188eaaae278f</anchor>
      <arglist>(AirWindowsChannel6, &quot;Channel 6&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a65d52e25b98869c19809fcce771a391b</anchor>
      <arglist>(AirWindowsChannel7, &quot;Channel 7&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a93d8363cb99267414abf1e61c1ee1d2c</anchor>
      <arglist>(AirWindowsChorus, &quot;Chorus&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adeb559a31d09465eba7dd12b0aac92c9</anchor>
      <arglist>(AirWindowsChorusEnsemble, &quot;Chorus Ensemble&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7444c2e5f5c6bf5d286412f4222ce6d5</anchor>
      <arglist>(AirWindowsClipOnly, &quot;Clip Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab5b6a8b0a65094ab60eb6e2ffec301e4</anchor>
      <arglist>(AirWindowsCoils, &quot;Coils&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27a6090cbf7345945e281c14770f9cd5</anchor>
      <arglist>(AirWindowsCojones, &quot;Cojones&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>add68bed41847f14eae49b0209f1fbce7</anchor>
      <arglist>(AirWindowsCompresaturator, &quot;Compresaturator&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e00baa3a83118a765aa2511e4ea611d</anchor>
      <arglist>(AirWindowsConsole4Buss, &quot;Console 4 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24f70698c45da420f7a1ff2ff0de0237</anchor>
      <arglist>(AirWindowsConsole4Channel, &quot;Console 4 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1e5ae287e3cfe3e90d5499d5f929896f</anchor>
      <arglist>(AirWindowsConsole5Buss, &quot;Console 5 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41e2d37829ea7935dcb8ee9cc55d0e7c</anchor>
      <arglist>(AirWindowsConsole5Channel, &quot;Console 5 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8c3045783a0de2caf4120b1a146072ac</anchor>
      <arglist>(AirWindowsConsole5DarkCh, &quot;Console 5 Dark Ch&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0db2a41a8844252fd3bf91c7dae49577</anchor>
      <arglist>(AirWindowsConsole6Buss, &quot;Console 6 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a99e376c16262fcadebfba02b45563a0e</anchor>
      <arglist>(AirWindowsConsole6Channel, &quot;Console 6 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aee141eff4e6ac17367c1fb4ee97c2123</anchor>
      <arglist>(AirWindowsCrunchyGrooveWear, &quot;Crunchy Groove Wear&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abe69e29be0c73818241b311bf679fc8c</anchor>
      <arglist>(AirWindowsCrystal, &quot;Crystal&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeabbd1c61c7538fa2b35c37a38a881f9</anchor>
      <arglist>(AirWindowsDCVoltage, &quot;DC Voltage&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afdc54f20b92c2567001fb27de6ab85e4</anchor>
      <arglist>(AirWindowsDeBess, &quot;De Bess&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac89f4e396be441a462f665132d0b0791</anchor>
      <arglist>(AirWindowsDeEss, &quot;De Ess&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3df44dde517d1d7b24fb2a51f013b091</anchor>
      <arglist>(AirWindowsDeHiss, &quot;De Hiss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab90aca1f9c0b848181b12ce5aa4f2bf9</anchor>
      <arglist>(AirWindowsDeRez, &quot;De Rez&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9cd69b5846de80fd269876bfbae2918b</anchor>
      <arglist>(AirWindowsDeRez2, &quot;De Rez 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac6bfbc956fab1bc4022c42c29bf29605</anchor>
      <arglist>(AirWindowsDeckwrecka, &quot;Deckwrecka&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41be53a354f6bac9848ad93dcc0a7840</anchor>
      <arglist>(AirWindowsDensity, &quot;Density&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a416e1f8425b04aaae636cb9197af01a4</anchor>
      <arglist>(AirWindowsDesk, &quot;Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad3fc9dc9226c6f92b18f53eeca360859</anchor>
      <arglist>(AirWindowsDesk4, &quot;Desk 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8e7c043f8306222c91a4305b8127c687</anchor>
      <arglist>(AirWindowsDistance, &quot;Distance&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad50ff3917774838469eb9085852b6025</anchor>
      <arglist>(AirWindowsDistance2, &quot;Distance 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a87ed4b693abe1685e2cc91ed329da74b</anchor>
      <arglist>(AirWindowsDitherFloat, &quot;Dither Float&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a927cd7071ff91064ccad1eaffc125b41</anchor>
      <arglist>(AirWindowsDitherMeDiskers, &quot;Dither Me Diskers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab5d90640c3102013a8fda0afe3b5742</anchor>
      <arglist>(AirWindowsDitherMeTimbers, &quot;Dither Me Timbers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad273a60e1f4b687b25e75bd54449e7ab</anchor>
      <arglist>(AirWindowsDitherbox, &quot;Ditherbox&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad78d8e810c6f19f1bd345cb6cb79e091</anchor>
      <arglist>(AirWindowsDoublePaul, &quot;Double Paul&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab83368b2a143e913431e18ee77b45a6</anchor>
      <arglist>(AirWindowsDrive, &quot;Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0f0d268deb4442f01809c9e6760b1121</anchor>
      <arglist>(AirWindowsDrumSlam, &quot;Drum Slam&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a82350bb54f4192c1fb3d69f56f7c20ae</anchor>
      <arglist>(AirWindowsDubCenter, &quot;Dub Center&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1c42bd4ae52acb1be5702fcf472c7eb5</anchor>
      <arglist>(AirWindowsDubSub, &quot;Dub Sub&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a84a13b90ae9d41d248057aa6cab5cb40</anchor>
      <arglist>(AirWindowsDustBunny, &quot;Dust Bunny&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a879d5f5de94daf0339c8caab17253e3a</anchor>
      <arglist>(AirWindowsDyno, &quot;Dyno&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb381ceffd831fbbca4b635d30eac594</anchor>
      <arglist>(AirWindowsEQ, &quot;EQ&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac4f714f1598999d6aad0fd7417de4540</anchor>
      <arglist>(AirWindowsEdIsDim, &quot;Ed Is Dim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a53cc1f62512d3c9a5460d1f471e013</anchor>
      <arglist>(AirWindowsElectroHat, &quot;Electro Hat&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ada5755c75aa586aaba8d323bc806be</anchor>
      <arglist>(AirWindowsEnergy, &quot;Energy&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1ee4ecdab3d170be598cc850699900a</anchor>
      <arglist>(AirWindowsEnsemble, &quot;Ensemble&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9511c2f38737447b3b88ad9e7016eca4</anchor>
      <arglist>(AirWindowsEveryTrim, &quot;Every Trim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ce6ebb7ac290ed1ec9e526ce73ae889</anchor>
      <arglist>(AirWindowsFacet, &quot;Facet&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1376c7c5d59c1cb326c268f044b8ed02</anchor>
      <arglist>(AirWindowsFathomFive, &quot;Fathom Five&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab9c21fdab88918393594f941cc626ada</anchor>
      <arglist>(AirWindowsFloor, &quot;Floor&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a35176fb5e072fcd8a8103f3fd16bef79</anchor>
      <arglist>(AirWindowsFocus, &quot;Focus&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aecfe732d5685ce453a930b54f8a66846</anchor>
      <arglist>(AirWindowsFracture, &quot;Fracture&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af27b9adf41c57963b73d2d2d912eaafd</anchor>
      <arglist>(AirWindowsFromTape, &quot;From Tape&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a53959dc0379a06d5067a0b5602b191d6</anchor>
      <arglist>(AirWindowsGatelope, &quot;Gatelope&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa102a80a2fc5c719e8a8ebd9f37ee339</anchor>
      <arglist>(AirWindowsGolem, &quot;Golem&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abfb2834333db34dc0b3331b410815dd7</anchor>
      <arglist>(AirWindowsGringer, &quot;Gringer&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab9ce5e03b3e4d4e2869e4afc4b8a9bc</anchor>
      <arglist>(AirWindowsGrooveWear, &quot;Groove Wear&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9f96548243d3c4d879b68f3b0924e889</anchor>
      <arglist>(AirWindowsGuitarConditioner, &quot;Guitar Conditioner&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad768456e5a132b7fff4c6b4270371750</anchor>
      <arglist>(AirWindowsHardVacuum, &quot;Hard Vacuum&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1a2592ab74d74473f57498c08f3e612</anchor>
      <arglist>(AirWindowsHermeTrim, &quot;Herme Trim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a261f85a75acdc636cf84fac377a048e8</anchor>
      <arglist>(AirWindowsHermepass, &quot;Hermepass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae1113904548a7a2e87e5cbdd11f8ff82</anchor>
      <arglist>(AirWindowsHighGlossDither, &quot;High Gloss Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a190fffb7c5a8f6ae6c07d0beff868e88</anchor>
      <arglist>(AirWindowsHighImpact, &quot;High Impact&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab7892e0c7b6f93fba9ab3c73cbbf8438</anchor>
      <arglist>(AirWindowsHighpass, &quot;Highpass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a753cf48c731f548cc993ffcfa305878c</anchor>
      <arglist>(AirWindowsHighpass2, &quot;Highpass 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb3a977e2a73b9158f456682846d9082</anchor>
      <arglist>(AirWindowsHolt, &quot;Holt&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a42059b4ae4a3c516c7c99fc8c1d84f99</anchor>
      <arglist>(AirWindowsHombre, &quot;Hombre&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9a3fadd7c6d50668f6299447c4fcfef4</anchor>
      <arglist>(AirWindowsInterstage, &quot;Interstage&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2a64203cf43c965a6b850ad252862ef8</anchor>
      <arglist>(AirWindowsIronOxide5, &quot;Iron Oxide 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5b1f119f1d62f7214111a5a1f3dd9227</anchor>
      <arglist>(AirWindowsIronOxideClassic, &quot;Iron Oxide Classic&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7f55220784a5088c8822f92f37394223</anchor>
      <arglist>(AirWindowsLeftoMono, &quot;Lefto Mono&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0a46e654ea2a6cdb85295a9e8f9b35e3</anchor>
      <arglist>(AirWindowsLogical4, &quot;Logical 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a21001ccd4f6c277f64a3342c5cef2511</anchor>
      <arglist>(AirWindowsLoud, &quot;Loud&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad6961460104579d04f685d163fe50825</anchor>
      <arglist>(AirWindowsLowpass, &quot;Lowpass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac25072732b637316dd75eaa370bc7bfd</anchor>
      <arglist>(AirWindowsLowpass2, &quot;Lowpass 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae5e6c988bdb85a594b086e0bdf3e872e</anchor>
      <arglist>(AirWindowsMV, &quot;MV&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa2ea9859ec6b144351cd8b193004e4c7</anchor>
      <arglist>(AirWindowsMelt, &quot;Melt&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a46c9cb53ce43842d48a8bd855def540e</anchor>
      <arglist>(AirWindowsMidSide, &quot;Mid Side&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a968a589e9ecb38b9a1fdbaced8e5c1b0</anchor>
      <arglist>(AirWindowsMoNoam, &quot;Mo Noam&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a70b89ead318e60fd731a7103d9094012</anchor>
      <arglist>(AirWindowsMojo, &quot;Mojo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e7d70d20838917ce9c5153c2a692af2</anchor>
      <arglist>(AirWindowsMonitoring, &quot;Monitoring&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acdcabbdaae3eaf9297e75d10ee112db1</anchor>
      <arglist>(AirWindowsNCSeventeen, &quot;NC-17&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7f5c4b7b9552bbaba6a94670b91d833a</anchor>
      <arglist>(AirWindowsNaturalizeDither, &quot;Naturalize Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a7cdaae0742122cbd3c10596a2ffaa6</anchor>
      <arglist>(AirWindowsNodeDither, &quot;Node Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa4f16dae2488602a716a2062497b9197</anchor>
      <arglist>(AirWindowsNoise, &quot;Noise&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acddc17e5781504b676f8e7afab778fe7</anchor>
      <arglist>(AirWindowsNonlinearSpace, &quot;Nonlinear Space&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aebb0b084b5075c2377f277398872786c</anchor>
      <arglist>(AirWindowsNotJustAnotherCD, &quot;Not Just Another CD&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad9be4f8e2cecf6a0b67a10a36c9b7107</anchor>
      <arglist>(AirWindowsNotJustAnotherDither, &quot;Not Just Another Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1be3d6b5e26cbe2c809a02de70fc27a7</anchor>
      <arglist>(AirWindowsOneCornerClip, &quot;One Corner Clip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85e17e20f3d3139a15be0783019324a1</anchor>
      <arglist>(AirWindowsPDBuss, &quot;PD Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeafa39f71736b786d05a1045e78de5d5</anchor>
      <arglist>(AirWindowsPDChannel, &quot;PD Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a58520b2f2ad7ef06715bcf9128c1179e</anchor>
      <arglist>(AirWindowsPafnuty, &quot;Pafnuty&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a494f9b8b11a66e9adf83f0c300f3261a</anchor>
      <arglist>(AirWindowsPaulDither, &quot;Paul Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5a7a6d474af6b31a9a7df9e3d6cb8aed</anchor>
      <arglist>(AirWindowsPeaksOnly, &quot;Peaks Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a377f294c486a55679d06334a8096dedc</anchor>
      <arglist>(AirWindowsPhaseNudge, &quot;Phase Nudge&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fa13e1af113acf6947eb2c6e89130b0</anchor>
      <arglist>(AirWindowsPocketVerbs, &quot;Pocket Verbs&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ded2cf30c59e99791a46f8edfce7f6e</anchor>
      <arglist>(AirWindowsPodcast, &quot;Podcast&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0060d9bcfdc2fb8dda8b961843add07b</anchor>
      <arglist>(AirWindowsPodcastDeluxe, &quot;Podcast Deluxe&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4095a87e28c2180d0675d118dbc15aac</anchor>
      <arglist>(AirWindowsPoint, &quot;Point&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85b37c4b9e7a2461c0ee8fb52940b4a9</anchor>
      <arglist>(AirWindowsPop, &quot;Pop&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24e0fc13493a55d8786ffb77ecf512e7</anchor>
      <arglist>(AirWindowsPowerSag, &quot;Power Sag&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a80f325fb7529029fd68dadd481ae4978</anchor>
      <arglist>(AirWindowsPowerSag2, &quot;Power Sag 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1dd3517e94b95a6cf08eeb0b30c405a</anchor>
      <arglist>(AirWindowsPressure4, &quot;Pressure 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aad0b6c4cf0b5a6f32822e980be2dde50</anchor>
      <arglist>(AirWindowsPurestAir, &quot;Purest Air&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7c16bf2d33d4673d51b864d4a927547b</anchor>
      <arglist>(AirWindowsPurestConsoleBuss, &quot;Purest Console Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e1ece3001d95873e1f175da4184a040</anchor>
      <arglist>(AirWindowsPurestConsoleChannel, &quot;Purest Console Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa8b0c58fd7ee4f3021084a8132352ea4</anchor>
      <arglist>(AirWindowsPurestDrive, &quot;Purest Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27193ee39b861bd3f9d9dc6f1a93a50a</anchor>
      <arglist>(AirWindowsPurestEcho, &quot;Purest Echo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a49aa72993698293ca72898d13e3c37e8</anchor>
      <arglist>(AirWindowsPurestGain, &quot;Purest Gain&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a562e298876ef2f519d5029bf681ce8b3</anchor>
      <arglist>(AirWindowsPurestSquish, &quot;Purest Squish&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aaed04ade4915ee832d761b8a0a0775df</anchor>
      <arglist>(AirWindowsPurestWarm, &quot;Purest Warm&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a833de75faac4bbf0885ecca77d279ba1</anchor>
      <arglist>(AirWindowsPyewacket, &quot;Pyewacket&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8a42aad9581b00710c9af1fab28bc6cb</anchor>
      <arglist>(AirWindowsRawGlitters, &quot;Raw Glitters&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a057ddb7a3b0b4f9636092641d0259bbc</anchor>
      <arglist>(AirWindowsRawTimbers, &quot;Raw Timbers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a29e0505b4ea905f3e19d2ebd1aaad25c</anchor>
      <arglist>(AirWindowsRecurve, &quot;Recurve&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a64723d7d5e0a44872b50ff953dcbfa37</anchor>
      <arglist>(AirWindowsRemap, &quot;Remap&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab4badd1d33ec00e3fbf0e57f103239c9</anchor>
      <arglist>(AirWindowsResEQ, &quot;ResEQ&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a667903b206834a9d2d0414682e8fedc1</anchor>
      <arglist>(AirWindowsRighteous4, &quot;Righteous 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a60511e14dea1117bb0c8c10548eae331</anchor>
      <arglist>(AirWindowsRightoMono, &quot;Righto Mono&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a653d2a1e0f10b9542e13a887e178d864</anchor>
      <arglist>(AirWindowsSideDull, &quot;Side Dull&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3beae870d6105a33db4914ddbf2d8f22</anchor>
      <arglist>(AirWindowsSidepass, &quot;Sidepass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6982c9ea08bc76c23a7c623e22e23152</anchor>
      <arglist>(AirWindowsSingleEndedTriode, &quot;Single Ended Triode&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a509f8356f8c9baee41402265627e46cc</anchor>
      <arglist>(AirWindowsSlew, &quot;Slew&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab85e16d2abc2853dfa506e743b8ce597</anchor>
      <arglist>(AirWindowsSlew2, &quot;Slew 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afa2673c0a2d3a0e00cd41630051eaeb3</anchor>
      <arglist>(AirWindowsSlewOnly, &quot;Slew Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9ee54af712ada7eb491acd0f8f902d5</anchor>
      <arglist>(AirWindowsSmooth, &quot;Smooth&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae28a73b6437ab99ec9babf7867d7df72</anchor>
      <arglist>(AirWindowsSoftGate, &quot;Soft Gate&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad95bc0225a13e03a3246e1908b6901e8</anchor>
      <arglist>(AirWindowsSpatializeDither, &quot;Spatialize Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9cca3b9ebdeda2fcecb4cee1f48f00c0</anchor>
      <arglist>(AirWindowsSpiral, &quot;Spiral&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9a81513e3811d1fc9ee898a1e68a173</anchor>
      <arglist>(AirWindowsSpiral2, &quot;Spiral 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a42dec9905b4c83f901fec73397d68767</anchor>
      <arglist>(AirWindowsStarChild, &quot;Star Child&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5d5d0e578f94ab19d7a9abbd11a9432b</anchor>
      <arglist>(AirWindowsStereoFX, &quot;Stereo FX&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a99d9882db673a2c1c9f977dd1fc802e6</anchor>
      <arglist>(AirWindowsStudioTan, &quot;Studio Tan&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0eecd2103eea85727d7434accd8c5a0c</anchor>
      <arglist>(AirWindowsSubsOnly, &quot;Subs Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeb350c17aba0feaeed4ad4b08b852f3f</anchor>
      <arglist>(AirWindowsSurge, &quot;Surge&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd6bde2bb23212f6a46899cf650b1585</anchor>
      <arglist>(AirWindowsSurgeTide, &quot;Surge Tide&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ab2e296ed291c251c39c8efc835181a</anchor>
      <arglist>(AirWindowsSwell, &quot;Swell&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a92f3cbcda9139d271fa970fae375c601</anchor>
      <arglist>(AirWindowsTPDFDither, &quot;TPDF Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a652f3ef2628744da30ee7ef16e62d26f</anchor>
      <arglist>(AirWindowsTapeDelay, &quot;Tape Delay&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a25b07d696fb3b12516c2126664d9aaee</anchor>
      <arglist>(AirWindowsTapeDither, &quot;Tape Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ebc260a1597ca861d6b06ade351c3d2</anchor>
      <arglist>(AirWindowsTapeDust, &quot;Tape Dust&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4b6d1843492d4f1f1f8cffaca3dca925</anchor>
      <arglist>(AirWindowsTapeFat, &quot;Tape Fat&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad2b3b3e07570d6b764356dc663c34475</anchor>
      <arglist>(AirWindowsThunder, &quot;Thunder&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a31b1a5bf858b21ce72a60e9f7b4c7d86</anchor>
      <arglist>(AirWindowsToTape5, &quot;To Tape 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a693acadcb0bd3e2e21fdd9972ed78c7d</anchor>
      <arglist>(AirWindowsToVinyl4, &quot;To Vinyl 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa2f9c46b23129653b65f14cf5a7f45a6</anchor>
      <arglist>(AirWindowsToneSlant, &quot;Tone Slant&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a34ebd2055683a27d6c4b670eb2bbb134</anchor>
      <arglist>(AirWindowsTransDesk, &quot;Trans Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a18167e34c01645fe20b3fe3ac2cc1879</anchor>
      <arglist>(AirWindowsTremolo, &quot;Tremolo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7987ca0b8df1912075cf60e176cd8398</anchor>
      <arglist>(AirWindowsTubeDesk, &quot;Tube Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd0cefcca29ba74b846a4ba8abbcd53e</anchor>
      <arglist>(AirWindowsUnBox, &quot;Un Box&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a11f6d531f6a06e490349a58f81174f21</anchor>
      <arglist>(AirWindowsVariMu, &quot;Vari Mu&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abbf56dc4e0b411cb43f1c520876e8621</anchor>
      <arglist>(AirWindowsVibrato, &quot;Vibrato&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9473fe942249e82e76ed22c286983893</anchor>
      <arglist>(AirWindowsVinylDither, &quot;Vinyl Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a61e67dd5696218e64c3692f937e546ac</anchor>
      <arglist>(AirWindowsVoiceOfTheStarship, &quot;Voice Of The Starship&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad92ecbe431e93147e8837e1b3b3bce22</anchor>
      <arglist>(AirWindowsVoiceTrick, &quot;Voice Trick&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa278417101fa6892169a9e45ff51aa7f</anchor>
      <arglist>(AirWindowsWider, &quot;Wider&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1d1fc108e711957e34a15657a958eb8</anchor>
      <arglist>(AirWindowscurve, &quot;curve&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a22cc3f9d3d5d83267b4b3ea8f4a5afb0</anchor>
      <arglist>(AirWindowsuLawDecode, &quot;u Law Decode&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2adc1072c617f36b322aea1b7f7d9d0d</anchor>
      <arglist>(AirWindowsuLawEncode, &quot;u Law Encode&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AlphaTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__AlphaTrack_8h.html</filename>
    <class kind="class">tracktion_engine::AlphaTrackControlSurface</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AppFunctions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AppFunctions_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::AppFunctions</namespace>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab8c2b7adbf3615848453ca8a57b3e779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7461e01845c2c4a60c340d68d2973c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8e21d638dc4730ab7bb1183ef728a8ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa243d06fc4a176ed0a357db32291b7a2</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPaste</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6ed0e376c47e7c2001cb406582d97db8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0627ed317829f0448430df39d6f788f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac450dca2bf2e2a8723a42eda1f2bc98e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGapFromSelected</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1dd7b4762808dfd4132c675b5ed3d2ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGap</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab6aed13711244d4782513784e3f35811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToStart</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1363143b0b7b37d262b2b1000d126ec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToEnd</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac73a600025a6647990af9c8d4022a2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae21cb759b384ba7d540ae5c4e3a974dc</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9f23a08dbc698125c665beb8392b4788</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a72362b3125d26a477f04a2e95b997972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a38ac4277ac57eeb9ae1fc24f1d8f3bd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startStopPlay</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a929561f878669bc7306ca5fbc0d5b944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aeb4e13e3d84d47004cc5325e0067f243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a399c608715c078c58fbd60d6181fbcb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleLoop</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2071a06436eaf792c82b162b527dd72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>togglePunch</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3dd7cf6c8d299f34caf3108f73e7497c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSnap</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4a8c81bc6f286320e32cfd4613d43c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleClick</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a07d95c05cac12d26a709b7f2023e5283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleMidiChase</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a93d3f930c33324e268df9001ba8d36bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3a7b8f49ad71b7d77036116df8345708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa00324d87303a7565088c4d44fbe5531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeUp</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a37e792fbc3be6ef115dea80eed8c0ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeDown</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a08d2b99486eb2174d365309f642a1335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a76688ebf56db79ad0560da4ad7bb6b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2f4c3524ece172711933e9a65964619a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac5577778cf5a1a1cd958d616ce376c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a364524070f57766a482a8f3e4c8b21b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksUp</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ef42c45f58339e10881e3ab4d3ffc6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksDown</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a561d25f1d617b7b1c0dab7789d454cbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae9d9ee4fd893d0aec69bbaafa8e25ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksRight</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>adfcdeb63794d70ef8d719f5f80727e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleEndToEnd</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a08c9363a534305c0b624a5a9d6245f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEdit</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a69bea45c2b90ce45bcc2808aa5e2e5be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditAs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9e36ed21d7fbcf8b3c289224dc47dc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>armOrDisarmAllInputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aded83e7bb70d40146862c61b6b73f27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a284aa0d55a584233eb7993bedecb9eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad024adb2e317d03595b62dd3a49bb924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaa84ae335f5229b0812094a635e8973b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>abdad282d9bb311d5cdc995d064bcdf17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a432de53e33095c95886b18e9bd91eef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af6462b701880351906ded20f35d72bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitAll</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a55457a6b823fca3efd22e476b4d0d3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToSelection</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0b986e3078c7625dc13ef0e2444aa304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToNextMarker</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>acfdc658c820df13a5641082e0a7bded9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToPrevMarker</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2a21d4db5c390f592c3f6c9ee960e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad9aa132b5bb2fca8533a83a24656a8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0f7feec0d1bc5c1027248ea25d8f9fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleScroll</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5299bc81ba6a7ab32b03b6f7f50fd390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScrolling</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a35fa0e799a499684532f926aa0a4e1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndDiscard</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a785124e0eb7d8878043fbea27a2f1f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndRestart</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab60a69d58e7d178cd64a44e5ce5ae956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTempoChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae6cc772f8222b1f6063d37cb05d1d9d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPitchChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5d9673c2c0a8df1d55a6344a63cf86e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTimeSigChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1eb6590ebea4925a7586f3e5f8406eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChord</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>afd20b0125505fd2feb4a116504817395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideVideo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a84f565b649f8f5b47019b819a2eb236d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMixer</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2ac9582916a04d79d5b53407686b464</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a287af2650b0442b677735e4c2b5f363d</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2f4cd63dfdd53ebaa56a7f9facefc85b</anchor>
      <arglist>(bool zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBrowser</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a69a3319bc6754b9fb978cc8af2a33771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideActions</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af2dd5a9f56049c862f6ce28832e19586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performUserAction</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a011a171565e7cbf194b61bc41cd4079a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideAllPanes</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a48de0ff8907ffd1bebed45cd262979f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af61613f4d3266bdfe81ec8b834455166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationReadMode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae6342d84820ae34982a84bbc967b42d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationWriteMode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ac19a9735510fa9464daf75219148df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBigMeters</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7ee64233139ee153df53375367b79e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideInputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a45898d5731d359fb0988db089c996375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideOutputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a837716ab7934dd04e3286efd1aaf10f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showProjectScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a535183d98b49666f0c0347040effb42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSettingsScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aee35b96828ebe8da38bc6c24871f954e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showEditScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a634660b556fc94b4200fde79fea5cd67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOverloads</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a165f60ab1c5991a5eec1d31fa6510135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPeaks</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3062751be4bdd33ce43fc8e600010610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTrackFreeze</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>adcc143e17ea322df071590a63913e800</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ARAWrapperFunctions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__ARAWrapperFunctions_8h.html</filename>
    <class kind="struct">ArchivingFunctions</class>
    <class kind="struct">EditProxyFunctions</class>
    <class kind="struct">ModelUpdateFunctions</class>
    <class kind="struct">MusicalContextFunctions</class>
  </compound>
  <compound kind="file">
    <name>tracktion_ARAWrapperInterfaces.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__ARAWrapperInterfaces_8h.html</filename>
    <class kind="class">ARADocument</class>
    <class kind="struct">ARADocumentCreatorCallback</class>
    <class kind="class">MusicalContextWrapper</class>
    <class kind="class">NodeReader</class>
    <class kind="class">AudioSourceWrapper</class>
    <class kind="class">AudioModificationWrapper</class>
    <class kind="class">RegionSequenceWrapper</class>
    <class kind="class">PlaybackRegionWrapper</class>
    <class kind="class">PlaybackRegionAndSource</class>
  </compound>
  <compound kind="file">
    <name>tracktion_ArchiveFile.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ArchiveFile_8h.html</filename>
    <class kind="class">tracktion_engine::TracktionArchiveFile</class>
    <class kind="struct">tracktion_engine::TracktionArchiveFile::IndexEntry</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ArrangerClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ArrangerClip_8h.html</filename>
    <class kind="class">tracktion_engine::ArrangerClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ArrangerTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ArrangerTrack_8h.html</filename>
    <class kind="class">tracktion_engine::ArrangerTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AsyncFunctionUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AsyncFunctionUtils_8h.html</filename>
    <class kind="struct">tracktion_engine::AsyncCaller</class>
    <class kind="struct">tracktion_engine::AsyncFunctionCaller</class>
    <class kind="class">tracktion_engine::LambdaTimer</class>
    <class kind="class">tracktion_engine::MessageThreadCallback</class>
    <class kind="struct">tracktion_engine::BlockingFunction</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>callBlocking</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a36fa404fa7ceb671453f5e6b45f2703e</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioBufferPool.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__AudioBufferPool_8h.html</filename>
    <class kind="class">tracktion_graph::AudioBufferPool</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioBufferStack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__AudioBufferStack_8h.html</filename>
    <class kind="class">tracktion_graph::AudioBufferStack</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioClipBase.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__AudioClipBase_8h.html</filename>
    <class kind="class">tracktion_engine::AudioClipBase</class>
    <class kind="struct">tracktion_engine::AudioClipBase::ProxyRenderingInfo</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioClipBase::FadeBehaviour &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioClipBase::AutoPitchMode &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFadeCurve.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioFadeCurve_8h.html</filename>
    <class kind="struct">tracktion_engine::AudioFadeCurve</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Linear</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Convex</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Concave</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::SCurve</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::CrossfadeLevels</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioFadeCurve::Type &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/audio_files/tracktion_AudioFifo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__engine_2audio__files_2tracktion__AudioFifo_8h.html</filename>
    <class kind="class">tracktion_engine::AudioFifo</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/utilities/tracktion_AudioFifo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__graph_2utilities_2tracktion__AudioFifo_8h.html</filename>
    <class kind="class">tracktion_graph::AudioFifo</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFile.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFile_8h.html</filename>
    <class kind="struct">tracktion_engine::AudioFileInfo</class>
    <class kind="class">tracktion_engine::AudioFile</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileCache.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileCache_8h.html</filename>
    <class kind="class">tracktion_engine::AudioFileCache</class>
    <class kind="class">tracktion_engine::AudioFileCache::Reader</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileManager_8h.html</filename>
    <class kind="class">tracktion_engine::AudioFileManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileUtils_8h.html</filename>
    <class kind="struct">tracktion_engine::AudioFileUtils</class>
    <class kind="class">tracktion_engine::AudioFileUtils::EnvelopeFollower</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileWriter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileWriter_8h.html</filename>
    <class kind="class">tracktion_engine::AudioFileWriter</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFormatManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFormatManager_8h.html</filename>
    <class kind="class">tracktion_engine::AudioFileFormatManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__AudioNode_8h.html</filename>
    <includes id="tracktion__PlayHead_8h" name="tracktion_PlayHead.h" local="yes" imported="no">tracktion_PlayHead.h</includes>
    <class kind="struct">tracktion_engine::AudioNodeProperties</class>
    <class kind="struct">tracktion_engine::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion_engine::CreateAudioNodeParams</class>
    <class kind="struct">tracktion_engine::AudioRenderContext</class>
    <class kind="class">tracktion_engine::AudioNode</class>
    <class kind="class">tracktion_engine::SingleInputAudioNode</class>
    <class kind="struct">tracktion_engine::MuteAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioProxyGenerator.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioProxyGenerator_8h.html</filename>
    <class kind="class">tracktion_engine::AudioProxyGenerator</class>
    <class kind="struct">tracktion_engine::AudioProxyGenerator::GeneratorJob</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioScratchBuffer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioScratchBuffer_8h.html</filename>
    <class kind="class">tracktion_engine::AudioScratchBuffer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioSegmentList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__AudioSegmentList_8h.html</filename>
    <class kind="class">tracktion_engine::AudioSegmentList</class>
    <class kind="struct">tracktion_engine::AudioSegmentList::Segment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__AudioTrack_8h.html</filename>
    <class kind="class">tracktion_engine::AudioTrack</class>
    <class kind="struct">tracktion_engine::AudioTrack::FreezePointRemovalInhibitor</class>
    <class kind="struct">tracktion_engine::AudioTrack::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioUtilities_8h.html</filename>
    <class kind="class">tracktion_engine::AudioMidiFifo</class>
    <class kind="class">tracktion_engine::AudioBufferSnapshot</class>
    <namespace>tracktion_engine</namespace>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SampleCount</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af6e78e734757e52f0c102915ff0e31af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::Range&lt; SampleCount &gt;</type>
      <name>SampleRange</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7ea280cde41080ecb2a991c485b516a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawDefault</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caac3b3ee588b7aca7018001352dd62dd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawLinear</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa53ea4741bc00eabe00cbabf82ed11c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw2point5dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa77e3ee143e29fa13dfcd9b377ef865f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw3dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa052bb90f622c73ae79755b370e1fe1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw4point5dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa1bcdec0af35c06ae926519471764ac88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw6dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caacff9d2cd6c027f7aa876c6112e885ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae1c423cc7ccdaad85c712081b25010d1</anchor>
      <arglist>(float db) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToDb</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a143c735ba0228cfe2fd5719290734cf3</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>gainToDbString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a697c9f3496d855c11f21fb5694196ded</anchor>
      <arglist>(float gain, float infLevel=-96.0f, int decPlaces=2)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToDb</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e9d27f3d341b5ef346c33920cce824c</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae0532a08faabf915b9aa91e8b6a3e351</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPanString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af126f65cc0aa991767873d3ca14b9b1a</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSemitonesAsString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac40ece8c1b582c521912469986e6aacd</anchor>
      <arglist>(double semitones)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>midiNoteToFrequency</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a50517dc5925211490cb5adb46af52f2a</anchor>
      <arglist>(FloatType midiNote)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>frequencyToMidiNote</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab2c07208710726b179bdb696c42e9430</anchor>
      <arglist>(FloatType freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitiseValues</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9a79566f4e48fc7737a428cdd98dbf88</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, float maxAbsValue, float minAbsThreshold=1.0f/262144.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a538d145931f667bfbde58da8ea90cf72</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFP</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9ecd185ea918b28b304832e50a8667da</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFloatingPointDenormaliseOccurred</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae9b1b8dfcfda921ac33e963c4187f3bd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroDenormalisedValuesIfNeeded</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae75c6e02b4f6be441df79fd91c7cda6b</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioDataAlmostSilent</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae8ce2422e3357ed0fa6653040d6718d3</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAudioDataMagnitude</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1aa6718203370f54431e5d2e1844f51</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertIntsToFloats</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e0fc8f0e12774f82c5019a49bcfbcbd</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatsToInts</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad22234a677ce3422674e80642749abb9</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yieldGUIThread</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ead844eb8c187a5d115c11788ecc5ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af4e496a2205420f7f6e648dfd6c18a50</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getDefaultPanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0138d2a30c34c0bf44692f5651957d4b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a820a37dab131e7130ee9b5182b9422df</anchor>
      <arglist>(PanLaw)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPanLawChoices</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a56d64c056664de878302dd6bb5f4bd9b</anchor>
      <arglist>(bool includeDefault) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>decibelsToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a58308d33d186486cd47cb0a300076105</anchor>
      <arglist>(float dB) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToDB</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3beff862ead2138b97f8eeb294d7615c</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab9a9695293210668a57d88ba57c31344</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3d22fb5177e06244d6ab9ef59d6fed38</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGainsFromVolumeFaderPositionAndPan</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a70006fc24f494e9a22ce619a4099b02a</anchor>
      <arglist>(float volSliderPos, float pan, PanLaw lawToUse, float &amp;leftGain, float &amp;rightGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannels</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac45ec036579fdbc82aca62e64195200d</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startChannel, int endChannel=-1, int startSample=0, int endSample=-1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableEditItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableEditItem_8h.html</filename>
    <class kind="class">tracktion_engine::AutomatableEditItem</class>
    <class kind="struct">tracktion_engine::AutomatableEditItem::ParameterListChangeListener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableParameter_8h.html</filename>
    <class kind="class">tracktion_engine::AutomatableParameter</class>
    <class kind="struct">tracktion_engine::AutomatableParameter::ModifierSource</class>
    <class kind="struct">tracktion_engine::AutomatableParameter::ModifierAssignment</class>
    <class kind="struct">tracktion_engine::AutomatableParameter::Listener</class>
    <class kind="class">tracktion_engine::AutomationDragDropTarget</class>
    <class kind="class">tracktion_engine::ParameterisableDragDropSource</class>
    <class kind="struct">tracktion_engine::AutomationIterator</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adda4384b57ce315f1ea0988f45bacb43</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierType * &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa851f05562d4dd8233c0129d6922edb0</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParameter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a47f3f5e0016ed1e31b7092f74326ecae</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsForSource</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0ad3afe1679b36c30be67c62739d739a</anchor>
      <arglist>(Edit &amp;edit, const ModifierSourceType &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierSource *</type>
      <name>getSourceForAssignment</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ff95a135ac99b3125d82fd0da04b18e</anchor>
      <arglist>(const AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getAllParametersBeingModifiedBy</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a15b394752734cdc911dc3fee440a1c96</anchor>
      <arglist>(Edit &amp;, AutomatableParameter::ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getParameter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a21aea0d368133be8e80537c3029f1f14</anchor>
      <arglist>(AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae178fff17ebb08839f891aabb46675fc</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBoolParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8d9684c9b1f5dff29d24ef094c93bb69</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getTypedParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1ff3e509fb281eb1b6870e11b0a5f1d</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableParameterTree.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableParameterTree_8h.html</filename>
    <class kind="class">tracktion_engine::AutomatableParameterTree</class>
    <class kind="struct">tracktion_engine::AutomatableParameterTree::TreeNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationCurve.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomationCurve_8h.html</filename>
    <class kind="class">tracktion_engine::AutomationCurve</class>
    <class kind="struct">tracktion_engine::AutomationCurve::AutomationPoint</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>int</type>
      <name>simplify</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adbd7afa493000198de35c53a092969dd</anchor>
      <arglist>(AutomationCurve &amp;, int strength, EditTimeRange range)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationRecordManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomationRecordManager_8h.html</filename>
    <class kind="class">tracktion_engine::AutomationRecordManager</class>
    <class kind="struct">tracktion_engine::AutomationRecordManager::AutomationParamData::Change</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__AutomationTrack_8h.html</filename>
    <class kind="class">tracktion_engine::AutomationTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxReturn.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__AuxReturn_8h.html</filename>
    <class kind="class">tracktion_engine::AuxReturnPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxSend.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__AuxSend_8h.html</filename>
    <class kind="class">tracktion_engine::AuxSendPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxSendNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__AuxSendNode_8h.html</filename>
    <class kind="class">tracktion_engine::AuxSendNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BackgroundJobs.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__BackgroundJobs_8h.html</filename>
    <class kind="class">tracktion_engine::ThreadPoolJobWithProgress</class>
    <class kind="class">tracktion_engine::BackgroundJobManager</class>
    <class kind="struct">tracktion_engine::BackgroundJobManager::JobInfo</class>
    <class kind="class">tracktion_engine::BackgroundJobManager::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BeatDetect.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__BeatDetect_8h.html</filename>
    <class kind="struct">tracktion_engine::BeatDetect</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Benchmark.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Benchmark_8h.html</filename>
    <includes id="tracktion__PerformanceMeasurement_8h" name="tracktion_PerformanceMeasurement.h" local="yes" imported="no">../../tracktion_graph/utilities/tracktion_PerformanceMeasurement.h</includes>
    <class kind="struct">tracktion_engine::BenchmarkDescription</class>
    <class kind="struct">tracktion_engine::BenchmarkResult</class>
    <class kind="class">tracktion_engine::Benchmark</class>
    <class kind="class">tracktion_engine::BenchmarkList</class>
    <class kind="struct">tracktion_engine::ScopedBenchmark</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>BenchmarkDescription</type>
      <name>createBenchmarkDescription</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af5016b50a11a4abfddbc7af1e38e6b96</anchor>
      <arglist>(std::string category, std::string name, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>BenchmarkResult</type>
      <name>createBenchmarkResult</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad6ccf735e781f881a9b99d92f562c5a9</anchor>
      <arglist>(BenchmarkDescription description, const tracktion_graph::PerformanceMeasurement::Statistics &amp;stats)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_BenchmarkUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__BenchmarkUtilities_8h.html</filename>
    <includes id="tracktion__EditNodeBuilder_8h" name="tracktion_EditNodeBuilder.h" local="yes" imported="no">tracktion_EditNodeBuilder.h</includes>
    <includes id="tracktion__Benchmark_8h" name="tracktion_Benchmark.h" local="yes" imported="no">../../utilities/tracktion_Benchmark.h</includes>
    <class kind="struct">tracktion_engine::benchmark_utilities::BenchmarkOptions</class>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::benchmark_utilities</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MultiThreaded</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a9e1f609633d3a31cb10d2da031eda07b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a9e1f609633d3a31cb10d2da031eda07ba7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a9e1f609633d3a31cb10d2da031eda07baa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFree</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1e76217117ac020df92f9e10f26fae40</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a1e76217117ac020df92f9e10f26fae40a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a1e76217117ac020df92f9e10f26fae40aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PoolMemoryAllocations</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a516991ef908c48542b44f860913ac712</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a516991ef908c48542b44f860913ac712a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a516991ef908c48542b44f860913ac712aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aac90b0fc08be7e11e796786e6b5b84ec</anchor>
      <arglist>(const BenchmarkOptions &amp;opts)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNode</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a8e45f554b0542c7a0889ad49e51e4aee</anchor>
      <arglist>(Edit &amp;edit, ProcessState &amp;processState, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareRenderAndDestroy</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>ac4c432535481e420e46cc12b86124f61</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, juce::String description, tracktion_graph::test_utilities::TestProcess&lt; NodePlayerType &gt; &amp;testContext, tracktion_graph::PlayHeadState &amp;playHeadState, MultiThreaded isMultiThreaded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a2332c73042ad7aa49efabb8053d510e4</anchor>
      <arglist>(juce::UnitTest &amp;ut, BenchmarkOptions opts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>ad2fd83dfc4859d85a9a07f6766a4a8a0</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, Edit &amp;edit, tracktion_graph::test_utilities::TestSetup ts, MultiThreaded isMultiThreaded, LockFree isLockFree, tracktion_graph::ThreadPoolStrategy poolType)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditfromArchiveData</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aaf4565bda7d5749b1e9e8ac5abf10dd4</anchor>
      <arglist>(Engine &amp;engine, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromValueTree</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aff4bc630924efb5ad474df35229bb513</anchor>
      <arglist>(Engine &amp;engine, const juce::ValueTree &amp;editState)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditFromZipData</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aa3bd8b4937ddf91f1de58b7045133479</anchor>
      <arglist>(Engine &amp;engine, const void *data, size_t numBytes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_BinaryData.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__BinaryData_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::TracktionBinaryData</namespace>
    <member kind="function">
      <type>const char *</type>
      <name>getNamedResource</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a48ac0559210ca50b35c1d5bab75c0cce</anchor>
      <arglist>(const char *resourceNameUTF8, int &amp;dataSizeInBytes) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>patchnames_zip</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a21add71f33114105b52c97ad6442b6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>patchnames_zipSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a4719ab312311970245916468d60d211f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>bigclick_wav</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a4f4cd8014941348555eca49d647516a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>bigclick_wavSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a6cc0974d13b6504e994a203c431b2029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>littleclick_wav</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a12c1d424facc52eef91c8960c345c32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>littleclick_wavSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>aa16e77bb7cca75ac20a1ae656a2f1c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_xml</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a2bc4f474a4f4eb90af23b6603fc71867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_xmlSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>acd572f9eadedf913805c56474b560b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_2_xml</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a89426c808396997d714a72176d26d0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_2_xmlSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a9f5b0a9152fc894907cdb4bdc0d13865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>namedResourceList</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a47004962c065153b20c8b30d05a23c42</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>namedResourceListSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a900418240ce8edcc5548f834f772a123</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_BreakpointOscillatorModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__BreakpointOscillatorModifier_8h.html</filename>
    <class kind="class">tracktion_engine::BreakpointOscillatorModifier</class>
    <class kind="struct">tracktion_engine::BreakpointOscillatorModifier::Assignment</class>
    <class kind="struct">tracktion_engine::BreakpointOscillatorModifier::Stage</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ChordClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ChordClip_8h.html</filename>
    <class kind="class">tracktion_engine::ChordClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ChordTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ChordTrack_8h.html</filename>
    <class kind="class">tracktion_engine::ChordTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Chorus.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Chorus_8h.html</filename>
    <class kind="class">tracktion_engine::ChorusPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClickNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ClickNode_8h.html</filename>
    <class kind="class">tracktion_engine::ClickGenerator</class>
    <class kind="class">tracktion_engine::ClickNode</class>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::Click</namespace>
    <member kind="function">
      <type>int</type>
      <name>getMidiClickNote</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>aa08ad8ecaab6f6ac6bf17508e2f3155c</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickWaveFile</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a21323165061c32f21f6c6264d1853d88</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiClickNote</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a0a2a772bfc04e53637f97b98a1f52edd</anchor>
      <arglist>(Engine &amp;, bool big, int noteNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickWaveFile</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a7da757e9b543e59ae87e6a7dd4e42b35</anchor>
      <arglist>(Engine &amp;, bool big, const juce::String &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Clip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__Clip_8h.html</filename>
    <class kind="struct">tracktion_engine::ClipLevel</class>
    <class kind="struct">tracktion_engine::LiveClipLevel</class>
    <class kind="class">tracktion_engine::Clip</class>
    <class kind="struct">tracktion_engine::Clip::Listener</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Clip::SyncType &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::ClipConstants</namespace>
    <namespace>juce</namespace>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMin</name>
      <anchorfile>namespacetracktion__engine_1_1ClipConstants.html</anchorfile>
      <anchor>a3e034df4438ba08025e95d43a0bac193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMax</name>
      <anchorfile>namespacetracktion__engine_1_1ClipConstants.html</anchorfile>
      <anchor>ad386b81827c66f2b15a03a6a936cb026</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Clipboard.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__Clipboard_8h.html</filename>
    <class kind="class">tracktion_engine::Clipboard</class>
    <class kind="struct">tracktion_engine::Clipboard::ContentType</class>
    <class kind="struct">tracktion_engine::Clipboard::ContentType::EditPastingOptions</class>
    <class kind="struct">tracktion_engine::Clipboard::ProjectItems</class>
    <class kind="struct">tracktion_engine::Clipboard::ProjectItems::ItemInfo</class>
    <class kind="struct">tracktion_engine::Clipboard::Clips</class>
    <class kind="struct">tracktion_engine::Clipboard::Clips::ClipInfo</class>
    <class kind="struct">tracktion_engine::Clipboard::Clips::AutomationCurveSection</class>
    <class kind="struct">tracktion_engine::Clipboard::Tracks</class>
    <class kind="struct">tracktion_engine::Clipboard::TempoChanges</class>
    <class kind="struct">tracktion_engine::Clipboard::TempoChanges::TempoChange</class>
    <class kind="struct">tracktion_engine::Clipboard::AutomationPoints</class>
    <class kind="struct">tracktion_engine::Clipboard::MIDIEvents</class>
    <class kind="struct">tracktion_engine::Clipboard::Pitches</class>
    <class kind="struct">tracktion_engine::Clipboard::TimeSigs</class>
    <class kind="struct">tracktion_engine::Clipboard::Plugins</class>
    <class kind="struct">tracktion_engine::Clipboard::Takes</class>
    <class kind="struct">tracktion_engine::Clipboard::Modifiers</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipEffects.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ClipEffects_8h.html</filename>
    <class kind="class">tracktion_engine::ClipEffect</class>
    <class kind="class">tracktion_engine::ClipEffects</class>
    <class kind="struct">tracktion_engine::ClipEffects::Listener</class>
    <class kind="struct">tracktion_engine::ClipEffects::RenderInhibitor</class>
    <class kind="struct">tracktion_engine::ScopedPluginUnloadInhibitor</class>
    <class kind="struct">tracktion_engine::VolumeEffect</class>
    <class kind="struct">tracktion_engine::FadeInOutEffect</class>
    <class kind="struct">tracktion_engine::StepVolumeEffect</class>
    <class kind="struct">tracktion_engine::StepVolumeEffect::Pattern</class>
    <class kind="struct">tracktion_engine::PitchShiftEffect</class>
    <class kind="struct">tracktion_engine::WarpTimeEffect</class>
    <class kind="struct">tracktion_engine::PluginEffect</class>
    <class kind="struct">tracktion_engine::NormaliseEffect</class>
    <class kind="struct">tracktion_engine::MakeMonoEffect</class>
    <class kind="struct">tracktion_engine::ReverseEffect</class>
    <class kind="struct">tracktion_engine::InvertEffect</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ClipTrack_8h.html</filename>
    <class kind="class">tracktion_engine::ClipTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CollectionClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__CollectionClip_8h.html</filename>
    <class kind="class">tracktion_engine::CollectionClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CombiningAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__CombiningAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion_engine::CombiningAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CombiningNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__CombiningNode_8h.html</filename>
    <class kind="class">tracktion_engine::CombiningNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CompManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__CompManager_8h.html</filename>
    <class kind="class">tracktion_engine::CompManager</class>
    <class kind="class">tracktion_engine::CompFactory</class>
    <class kind="class">tracktion_engine::WaveCompManager</class>
    <class kind="class">tracktion_engine::MidiCompManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Compressor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Compressor_8h.html</filename>
    <class kind="class">tracktion_engine::CompressorPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ConstrainedCachedValue.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ConstrainedCachedValue_8h.html</filename>
    <class kind="class">tracktion_engine::ConstrainedCachedValue</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ControlSurface.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ControlSurface_8h.html</filename>
    <class kind="struct">tracktion_engine::ParameterSetting</class>
    <class kind="struct">tracktion_engine::MarkerSetting</class>
    <class kind="class">tracktion_engine::ControlSurface</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CpuMeasurement.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CpuMeasurement_8h.html</filename>
    <class kind="struct">tracktion_engine::ScopedCpuMeter</class>
    <class kind="struct">tracktion_engine::StopwatchTimer</class>
    <namespace>tracktion_engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SCOPED_REALTIME_CHECK</name>
      <anchorfile>tracktion__CpuMeasurement_8h.html</anchorfile>
      <anchor>aeb53df2190d8c1f9f9a32f6c1f654a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOPED_REALTIME_CHECK_LONGER</name>
      <anchorfile>tracktion__CpuMeasurement_8h.html</anchorfile>
      <anchor>a8176a32faa2afe139512c07a8dd19b43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_CrashTracer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CrashTracer_8h.html</filename>
    <class kind="struct">tracktion_engine::CrashStackTracer</class>
    <class kind="struct">tracktion_engine::DeadMansPedalMessage</class>
    <namespace>tracktion_engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CRASH_TRACER</name>
      <anchorfile>tracktion__CrashTracer_8h.html</anchorfile>
      <anchor>aa3c9c9aaf3db474439041b1ac5babb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRASH_TRACER_PLUGIN</name>
      <anchorfile>tracktion__CrashTracer_8h.html</anchorfile>
      <anchor>a8fa50910309f1ebb6a0dc72340bcb54c</anchor>
      <arglist>(p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_CurveEditor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CurveEditor_8h.html</filename>
    <class kind="struct">tracktion_engine::TransparentToMouseInTrackItemComp</class>
    <class kind="struct">tracktion_engine::CurvePoint</class>
    <class kind="class">tracktion_engine::CurveEditorPoint</class>
    <class kind="class">tracktion_engine::CurveEditor</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CustomControlSurface.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__CustomControlSurface_8h.html</filename>
    <class kind="class">tracktion_engine::CustomControlSurface</class>
    <class kind="struct">tracktion_engine::CustomControlSurface::MappingSet</class>
    <class kind="struct">tracktion_engine::CustomControlSurface::Mapping</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Delay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Delay_8h.html</filename>
    <class kind="struct">tracktion_engine::DelayBufferBase</class>
    <class kind="class">tracktion_engine::DelayPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_DeviceManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__DeviceManager_8h.html</filename>
    <class kind="class">tracktion_engine::DeviceManager</class>
    <class kind="struct">tracktion_engine::DeviceManager::CPUUsageListener</class>
    <class kind="struct">tracktion_engine::DeviceManager::ContextDeviceListRebuilder</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Ditherer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Ditherer_8h.html</filename>
    <class kind="struct">tracktion_engine::Ditherer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Edit.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__Edit_8h.html</filename>
    <class kind="class">tracktion_engine::Edit</class>
    <class kind="struct">tracktion_engine::Edit::LoadContext</class>
    <class kind="struct">tracktion_engine::Edit::Options</class>
    <class kind="struct">tracktion_engine::Edit::ScopedRenderStatus</class>
    <class kind="struct">tracktion_engine::Edit::UndoTransactionInhibitor</class>
    <class kind="struct">tracktion_engine::Edit::GlobalMacros</class>
    <class kind="struct">tracktion_engine::Edit::Metadata</class>
    <class kind="struct">tracktion_engine::Edit::LoadFinishedCallback</class>
    <class kind="struct">tracktion_engine::Edit::WastedMidiMessagesListener</class>
    <class kind="struct">tracktion_engine::EditDeleter</class>
    <class kind="struct">tracktion_engine::ActiveEdits</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__EditClip_8h.html</filename>
    <class kind="class">tracktion_engine::EditClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditClipRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__EditClipRenderJob_8h.html</filename>
    <class kind="class">tracktion_engine::EditRenderJob</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditFileOperations.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditFileOperations_8h.html</filename>
    <class kind="class">tracktion_engine::EditFileOperations</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3f693a481bd0c76efaef9918f318a86c</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a57bb0d4a9fa1223d3c5bd184d08a5214</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromProjectManager</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5942543dc42901e4ebf512d0a928ef68</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>add7837b714ace371f92271e9e260dc07</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2acb0714054805da01e82681b8ce804a</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae829e0bdd800bba532ba110250ba8ed5</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41b3c93e6fdada6b4a73f2d70a9b70e0</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditInputDevices.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__EditInputDevices_8h.html</filename>
    <class kind="class">tracktion_engine::EditInputDevices</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditInsertPoint.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditInsertPoint_8h.html</filename>
    <class kind="class">tracktion_engine::EditInsertPoint</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditItem_8h.html</filename>
    <class kind="struct">tracktion_engine::EditItemID</class>
    <class kind="class">tracktion_engine::EditItem</class>
    <class kind="struct">tracktion_engine::EditItemCache</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::EditItemID &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditNodeBuilder.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__EditNodeBuilder_8h.html</filename>
    <class kind="struct">tracktion_engine::CreateNodeParams</class>
    <class kind="struct">tracktion_engine::EditNodeBuilder</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac6e65fdde0ac537152023a63b570c5ca</anchor>
      <arglist>(EditPlaybackContext &amp;, std::atomic&lt; double &gt; &amp;audibleTimeToUpdate, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa96aea0640e39d77eedec89fe6519dd9</anchor>
      <arglist>(Edit &amp;, const CreateNodeParams &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditPlaybackContext.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__EditPlaybackContext_8h.html</filename>
    <class kind="class">tracktion_engine::EditPlaybackContext</class>
    <class kind="struct">tracktion_engine::EditPlaybackContext::ScopedDeviceListReleaser</class>
    <class kind="struct">tracktion_engine::EditPlaybackContext::RealtimePriorityDisabler</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditSnapshot.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditSnapshot_8h.html</filename>
    <class kind="class">tracktion_engine::EditSnapshot</class>
    <class kind="struct">tracktion_engine::EditSnapshot::Marker</class>
    <class kind="struct">tracktion_engine::EditSnapshot::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditTimeRange.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__EditTimeRange_8h.html</filename>
    <class kind="struct">tracktion_engine::EditTimeRange</class>
    <class kind="struct">tracktion_engine::ClipPosition</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditUtilities_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CloseGap</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a16c1e3b7c9024479b819754ccca67617</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a16c1e3b7c9024479b819754ccca67617a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a16c1e3b7c9024479b819754ccca67617aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MoveClipAction</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acd25807c96b4f856485e08678a4725fb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba689bf948adf5d301d601b677fe1d95a9">moveToEndOfLast</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fbad98c519c261eac28a987e2cd523d2efb">moveToStartOfNext</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba6c946346c9811d724e9aabb70d992aac">moveStartToCursor</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba76fc3972a4183c47e5f8cebdc5371526">moveEndToCursor</enumvalue>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFileFromProjectManager</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a201d51dad3a8a5fc6001bd4eab159cd4</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>referencesProjectItem</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad58248d85c9cbf4edaadfa446e137232</anchor>
      <arglist>(Edit &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aded9016c1e855cf3b433d415a91c091b</anchor>
      <arglist>(Edit &amp;, EditTimeRange timeRangeToInsert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEditFromBeatRange</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4fd8bbb659561b7b0e9721cff256c738</anchor>
      <arglist>(Edit &amp;, juce::Range&lt; double &gt; beatRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a04f8888ce9f6913699a26f4a15763e82</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTopLevelTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a674eb24c20bec405b0dd5ffbdfacb2a1</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackType * &gt;</type>
      <name>getTracksOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a37b29ab862276f4d614c9b1ccaf7b049</anchor>
      <arglist>(const Edit &amp;, bool recursive)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAudioTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1b39d27168c744769f2d02b915fdb4dc</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipTrack * &gt;</type>
      <name>getClipTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adab91a0ea0b6248a5c31edf35610571a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a35ab08dd7c4adeaf859822a0debdedce</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af69e9acaf974750bf4dbc190bc1fb12d</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findTracksForIDs</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0f93e4e56a96b4f3a9eb78c3ce8ae34d</anchor>
      <arglist>(const Edit &amp;, const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a702ee37377fa4873a23c34a799e7d22f</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getFirstAudioTrack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a96f274ba7fbe7325dacd85c18c0a5b28</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findAllTracksContainingSelectedItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adf7cd95c6d7256605d1bef41892f4824</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>findFirstClipTrackFromSelection</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9c77bcf35161a773416cf1103b7714b0</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsTrack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab3c522db2cc41e383e1e30bd41108036</anchor>
      <arglist>(const Edit &amp;, const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getTrackOutput</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7033a1faea6142e518c41bd22bb5f008</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>toBitSet</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad3809a51a3d9acf54db53ecd8b50a2c7</anchor>
      <arglist>(const juce::Array&lt; Track * &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>toTrackArray</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab0bb7f50e26236388eb6e3d20031dea1</anchor>
      <arglist>(Edit &amp;, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a36a43a86cc2163099817239083d31a91</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5f5a31d85366304b18e8dba7fa149d66</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af026eaa414d01c232126e5a9660ca318</anchor>
      <arglist>(const Edit &amp;, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>duplicateClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aee5976171d65806059b5f5b72b442142</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTrackItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6ee10fe6f1ee97b1e7262fd526d6a335</anchor>
      <arglist>(const Edit &amp;, std::function&lt; bool(TrackItem &amp;)&gt;)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getTimeRangeForSelectedItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a265a532d87e3c0b50ff1f42a7c10e2e1</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ef3ea472870a7582131ea2342772007</anchor>
      <arglist>(Edit &amp;, EditTimeRange rangeToDelete, bool onlySelectedTracks, CloseGap, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6f48b51569119e3f9c08c1c812651347</anchor>
      <arglist>(Clip &amp;, EditTimeRange rangeToDelete)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfSelectedClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5d3451d88b981e83401afff10f680673</anchor>
      <arglist>(SelectionManager &amp;, EditTimeRange rangeToDelete, CloseGap, bool moveAllSubsequentClipsOnTrack)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>splitClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a771010933d121c8104ecf3eb0dad4199</anchor>
      <arglist>(const SelectableList &amp;clips, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSelectedClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7014d899eb008d11d8f788355926d765</anchor>
      <arglist>(const SelectableList &amp;, Edit &amp;, MoveClipAction mode, bool alsoMoveAutomation)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>getClipSelectionWithCollectionClipContents</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1fbb7899ea7b5ac9b0720504303d44df</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>getAllClipEffects</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aebcd977354b0044d278b7b6bf1644630</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>findNoteForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab06afe5c8c12e06674689b9328f6d0c1</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>mergeMidiClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9c0d9c51fe09f53456b7eddebbca9b9b</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a310594e88e7f82014b58a55b441d074e</anchor>
      <arglist>(const Edit &amp;, bool includeMasterVolume)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a53da2b27ef4d50daa4dc9ab7426c87b9</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingPlugin</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6a1f7e916f2402cfb7c05565a03a41ad</anchor>
      <arglist>(const Edit &amp;, const Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyPluginsMissing</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a896b6c807f0762c9b60b66d5ab6aa91b</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; RackInstance * &gt;</type>
      <name>getRackInstancesInEditForType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2b31433906d1db535c89642733f3ccb8</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmuteAllPlugins</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9380a7766bcc02c44b426cdec3922a25</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa12269863fd0fb62e5a916cf070b8e54</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomation</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae8300c8e382149ab28c3dc95e22125ce</anchor>
      <arglist>(const SelectableList &amp;selectedClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter::ModifierSource * &gt;</type>
      <name>getAllModifierSources</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a064c3b7d6b18491d387115889567916b</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getAllModifiers</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6b9276e52d1bf4d75ab261c1acef2d55</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType::Ptr</type>
      <name>findModifierTypeForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a23dd12c98f230adfbee935cb0da4f464</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad993f96fec112ba4e60909cfe34afc55</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a08c4d4f51efbf2fe73bd55e676734af5</anchor>
      <arglist>(const RackType &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingModifier</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a91d0ead7bbf6d5f15b1314ce3d18bf</anchor>
      <arglist>(const Edit &amp;, const Modifier::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterList * &gt;</type>
      <name>getAllMacroParameterLists</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85cb0f773d4760ce522a1334330975d6</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterElement * &gt;</type>
      <name>getAllMacroParameterElements</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a51effcef8fc664123a228207e61c269d</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Engine.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Engine_8h.html</filename>
    <class kind="class">tracktion_engine::Engine</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::PropertiesFile *</type>
      <name>getApplicationSettings</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3f5f5c62e1a76f90a34824b155b07431</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EngineBehaviour.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__EngineBehaviour_8h.html</filename>
    <class kind="struct">tracktion_engine::EditLimits</class>
    <class kind="class">tracktion_engine::EngineBehaviour</class>
    <class kind="struct">tracktion_engine::EngineBehaviour::LevelMeterSettings</class>
    <class kind="struct">tracktion_engine::EngineBehaviour::ControlSurfaces</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Envelope.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Envelope_8h.html</filename>
    <class kind="class">tracktion_engine::ExpEnvelope</class>
    <class kind="struct">tracktion_engine::ExpEnvelope::Parameters</class>
    <class kind="class">tracktion_engine::LinEnvelope</class>
    <class kind="struct">tracktion_engine::LinEnvelope::Parameters</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EnvelopeFollowerModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__EnvelopeFollowerModifier_8h.html</filename>
    <class kind="class">tracktion_engine::EnvelopeFollowerModifier</class>
    <class kind="struct">tracktion_engine::EnvelopeFollowerModifier::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Equaliser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Equaliser_8h.html</filename>
    <class kind="class">tracktion_engine::EqualiserPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Exportable.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__Exportable_8h.html</filename>
    <class kind="class">tracktion_engine::Exportable</class>
    <class kind="struct">tracktion_engine::Exportable::ReferencedItem</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExportJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ExportJob_8h.html</filename>
    <class kind="class">tracktion_engine::ExportJob</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalAutomatableParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalAutomatableParameter_8h.html</filename>
    <class kind="class">tracktion_engine::ExternalAutomatableParameter</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalController.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ExternalController_8h.html</filename>
    <class kind="class">tracktion_engine::ExternalController</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalControllerManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ExternalControllerManager_8h.html</filename>
    <class kind="class">tracktion_engine::ExternalControllerManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPlayheadSynchroniser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ExternalPlayheadSynchroniser_8h.html</filename>
    <class kind="class">tracktion_engine::ExternalPlayheadSynchroniser</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getCurrentPositionInfo</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a22d08eb9a1ef454631e2c7b7b819013b</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchroniseEditPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a78f5d36619a5ede7eb7b3ae2ed24c91f</anchor>
      <arglist>(Edit &amp;, const juce::AudioPlayHead::CurrentPositionInfo &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::ExternalPlugin</class>
    <class kind="struct">tracktion_engine::PluginWetDryAutomatableParam</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::String</type>
      <name>createIdentifierString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af125d311021702fca985886c5e30ec8a</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPluginBlacklist.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalPluginBlacklist_8h.html</filename>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FadeInOutAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__FadeInOutAudioNode_8h.html</filename>
    <class kind="class">tracktion_engine::FadeInOutAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FadeInOutNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__FadeInOutNode_8h.html</filename>
    <class kind="class">tracktion_engine::FadeInOutNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FileUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__FileUtilities_8h.html</filename>
    <class kind="struct">tracktion_engine::ScopedDirectoryDeleter</class>
    <class kind="struct">tracktion_engine::FileDragList</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isMidiFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4cc7d9f59ec1e6d864ccbc3509dc3055</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionEditFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac528f3b11631a4520d55bd58563f44a9</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionArchiveFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a97f32b983a6517f2484c72bd62248d0d</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionProjectFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a81be78e519f29dfda99415910aeeb319</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionPresetFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a88e9a898fdf6fbaf4a5f8f8cef6795d2</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getNonExistentSiblingWithIncrementedNumberSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9bc5e7b6eea256c056a9aac4eef652fc</anchor>
      <arglist>(const juce::File &amp;, bool addHashSymbol)</arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>projectFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6c51c15f862c97bd71e62f8d415ad729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>editFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4f66cc093fc405207b012d3621944316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>legacyEditFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3437c7eecf9987c3e1f9fa9faa9b2849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>archiveFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af8546479c4b95ebc374d45a3dd97d253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af85c3c2369fa3b3bce6b35a032ce1d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fcf8fd5039990f8e507091f22ad9890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a08535eb30f0e3fde7d80d4985d45f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fdd3fccbea05237183536945d6e4cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab3c09093e9404a4ba516e4f8998234b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customControllerFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aae85e5c6c68b1037a8095d50b5da4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetWildcard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fbc317ee6d66d147b71fdfc018256d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3055a80f3662ed562787da646ff0a009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>presetFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac7d20c8b49acbd3addbc606482fb9141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>rackFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5978a61767c22cf27a05508a2c2fe64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>scriptFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acaa32ee11ba121ef7c8f35150d411a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1958484f78b8f13461a9c8053479b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a34e51d83e1d049e828d1f2595e297b76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_FloatAudioFileFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__FloatAudioFileFormat_8h.html</filename>
    <class kind="class">tracktion_engine::FloatAudioFormat</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FolderTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__FolderTrack_8h.html</filename>
    <class kind="class">tracktion_engine::FolderTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FourOscPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__FourOscPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::ValueSmoother</class>
    <class kind="class">tracktion_engine::SimpleLFO</class>
    <class kind="struct">tracktion_engine::SimpleLFO::Parameters</class>
    <class kind="class">tracktion_engine::FourOscPlugin</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::OscParams</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::LFOParams</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::MODEnvParams</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::ModAssign</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FreezePoint.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__FreezePoint_8h.html</filename>
    <class kind="class">tracktion_engine::FreezePointPlugin</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackUnsoloer</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackSoloIsolator</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedPluginDisabler</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackFreezer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_GlueCode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__GlueCode_8h.html</filename>
    <namespace>tracktion_graph</namespace>
    <member kind="function">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>toAudioBuffer</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab71a7d0b07097dacbf48f51f35ab7f4f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>af5275a8f2c1c841e673e4fa90eebb246</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyBy</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a1eea41247582004c7fe8968402572d97</anchor>
      <arglist>(BufferViewType &amp;view, juce::SmoothedValue&lt; SampleType, SmoothingType &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>frameRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a0a906c43b10f8d4281761df063bbd4d4</anchor>
      <arglist>(choc::buffer::FrameCount start, choc::buffer::FrameCount length)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelRange</type>
      <name>channelRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a4af9987141067c848f11ed0f494ec353</anchor>
      <arglist>(choc::buffer::ChannelCount start, choc::buffer::ChannelCount length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckView</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a78cac2100462a011bb2e728d52c95380</anchor>
      <arglist>(const choc::buffer::BufferView&lt; SampleType, LayoutType &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_ConnectedNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__graph__ConnectedNode_8h.html</filename>
    <includes id="tracktion__graph__LatencyNode_8h" name="tracktion_graph_LatencyNode.h" local="yes" imported="no">tracktion_graph_LatencyNode.h</includes>
    <class kind="struct">tracktion_graph::ChannelConnection</class>
    <class kind="class">tracktion_graph::ConnectedNode</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_LatencyNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__graph__LatencyNode_8h.html</filename>
    <class kind="class">tracktion_graph::LatencyNode</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_LatencyProcessor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__graph__LatencyProcessor_8h.html</filename>
    <class kind="struct">tracktion_graph::LatencyProcessor</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_LockFreeMultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__LockFreeMultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion_graph::LockFreeMultiThreadedNodePlayer</class>
    <class kind="struct">tracktion_graph::LockFreeMultiThreadedNodePlayer::ThreadPool</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_MultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__MultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion_graph::MultiThreadedNodePlayer</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_Node.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__Node_8h.html</filename>
    <class kind="struct">tracktion_graph::NodeBuffer</class>
    <class kind="struct">tracktion_graph::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion_graph::NodeProperties</class>
    <class kind="struct">tracktion_graph::NodeOptimisations</class>
    <class kind="class">tracktion_graph::Node</class>
    <class kind="struct">tracktion_graph::Node::AudioAndMidiBuffer</class>
    <class kind="struct">tracktion_graph::Node::ProcessContext</class>
    <class kind="struct">tracktion_graph::detail::VisitNodesWithRecord</class>
    <class kind="struct">tracktion_graph::detail::VisitNodesWithRecordBFS</class>
    <namespace>tracktion_graph</namespace>
    <namespace>tracktion_graph::detail</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ClearBuffers</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a8f75f3ff4488c522b757e48e94f129b3</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a8f75f3ff4488c522b757e48e94f129b3a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a8f75f3ff4488c522b757e48e94f129b3aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AllocateAudioBuffer</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a7b0f2f3ab8bb6d8f8de4c151e4edc7e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a7b0f2f3ab8bb6d8f8de4c151e4edc7e7a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a7b0f2f3ab8bb6d8f8de4c151e4edc7e7aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VertexOrdering</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a184300edcc70de77310266edbee53aa4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4ac9a7dcee6c8867427cad06075090ea8c">preordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4aa594bbe6c0bebbd5e0ac45a054a7ea19">postordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4aae32c07adc26714e62b0e2cd5f77f72d">reversePreordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4afe1fe1181a7b661c316a10925c500c9e">reversePostordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4a867d33f817886982c81cc3934e489e24">bfsPreordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4a25f364f7adcbbf7a7cc5874f97ae1f12">bfsReversePreordering</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>makeNode</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a70160bf762a45db8470e801a964254df</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a628d15d4a6b61b204cf1103799d923c5</anchor>
      <arglist>(Node &amp;, Visitor &amp;&amp;, bool preordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodesBFS</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a8e0b66cc695290098bf9125f159de667</anchor>
      <arglist>(Node &amp;node, Visitor &amp;&amp;visitor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_NodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__NodePlayer_8h.html</filename>
    <class kind="class">tracktion_graph::NodePlayer</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_NodePlayerThreadPools.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__NodePlayerThreadPools_8h.html</filename>
    <namespace>tracktion_graph</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPoolStrategy</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a10337f019803d1cc6738fe931011dfef</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa1c6ad0e53f832c22dd2da6ab1b03c14d">conditionVariable</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa9bfda1f9ada0dd18d1aacb35e1ac4e1e">realTime</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefaf7befc67e4b1ddf3a03d496537760671">hybrid</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfeface1bc7755b9332cfacdf8ee58ef2e3c1">semaphore</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa86073a83d32632d6993e1dd75ff62947">lightweightSemaphore</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa8af14eb3725884652791f95d6016b355">lightweightSemHybrid</enumvalue>
    </member>
    <member kind="function">
      <type>LockFreeMultiThreadedNodePlayer::ThreadPoolCreator</type>
      <name>getPoolCreatorFunction</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ae63400db226e032c326cf5910a2996ea</anchor>
      <arglist>(ThreadPoolStrategy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_NodePlayerUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/players/</path>
    <filename>tracktion__graph__NodePlayerUtilities_8h.html</filename>
    <namespace>tracktion_graph</namespace>
    <namespace>tracktion_graph::node_player_utils</namespace>
    <member kind="function">
      <type>void</type>
      <name>reserveAudioBufferPool</name>
      <anchorfile>namespacetracktion__graph_1_1node__player__utils.html</anchorfile>
      <anchor>a8aa91d85f0fb1987c75b618423d6a738</anchor>
      <arglist>(Node *rootNode, const std::vector&lt; Node * &gt; &amp;allNodes, AudioBufferPool &amp;audioBufferPool, size_t numThreads, int blockSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_PlayHead.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__PlayHead_8h.html</filename>
    <class kind="struct">tracktion_graph::SplitTimelineRange</class>
    <class kind="class">tracktion_graph::PlayHead</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_PlayHeadState.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__PlayHeadState_8h.html</filename>
    <class kind="class">tracktion_graph::PlayHeadState</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_SimpleNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/players/</path>
    <filename>tracktion__graph__SimpleNodePlayer_8h.html</filename>
    <class kind="class">tracktion_graph::SimpleNodePlayer</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_SummingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__graph__SummingNode_8h.html</filename>
    <class kind="class">tracktion_graph::SummingNode</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_TestConfig.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/</path>
    <filename>tracktion__graph__TestConfig_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_PLAYHEAD</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gacabe18ee431d873a112a29f59da11b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_PLAYHEADSTATE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaf959ccae3ea17be5b66c7d2190bbd5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_NODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gab5b0aa341cd192ca4261cd9955b448a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_NODEVISITING</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gadd94939092c9411e2eb6429b95d66d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_SAMPLECONVERSION</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga97a819995616a87a71b042e33f7fac20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_CONNECTEDNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gacb5b94db2339b78e1337cab190df173c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_AUDIOBUFFERPOOL</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaca23f64f4f8e5ff3c8968d3c06ca8de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_SEMAPHORE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga5d0f38ee8a621419762a0151efa61c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_ALLOCATION</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaf7a354e7136789903f00bb8ecec56e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_WAVENODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga0de2a4536c0c9621921e352c83e476f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_MIDINODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga6de34a9ad8790d362f3a9836a8e3c018</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_RACKNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga077dcb24ba220e4ffb76794baf1abe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_EDITNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gae3e5970d378b2f2f040f436880b586c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_TestNodes.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__TestNodes_8h.html</filename>
    <class kind="class">tracktion_graph::MidiNode</class>
    <class kind="class">tracktion_graph::SinNode</class>
    <class kind="class">tracktion_graph::SilentNode</class>
    <class kind="class">tracktion_graph::BasicSummingNode</class>
    <class kind="class">tracktion_graph::FunctionNode</class>
    <class kind="class">tracktion_graph::GainNode</class>
    <class kind="class">tracktion_graph::SendNode</class>
    <class kind="class">tracktion_graph::ReturnNode</class>
    <class kind="class">tracktion_graph::ChannelRemappingNode</class>
    <class kind="class">tracktion_graph::SinkNode</class>
    <class kind="class">tracktion_graph::ForwardingNode</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_TestUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__TestUtilities_8h.html</filename>
    <class kind="struct">tracktion_graph::test_utilities::SineOscillator</class>
    <class kind="struct">tracktion_graph::test_utilities::TestSetup</class>
    <class kind="struct">tracktion_graph::test_utilities::TestContext</class>
    <class kind="struct">tracktion_graph::test_utilities::TestProcess</class>
    <namespace>tracktion_graph</namespace>
    <namespace>tracktion_graph::test_utilities</namespace>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>aed97ccb88dfa8204a9ec8d765489d02b</anchor>
      <arglist>(ThreadPoolStrategy type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ThreadPoolStrategy &gt;</type>
      <name>getThreadPoolStrategies</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>a8864a4a7318e010378fc7efa8a91f098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGraph</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>a35253f1f5d0c08e738f7afa29aca8cad</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createGraphDescription</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>aff2181079e49f8b2c8de5c9ca1d28147</anchor>
      <arglist>(Node &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSinFile</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>ab3a3074138a390667b2e8434b6a98c25</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph_Utility.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph__Utility_8h.html</filename>
    <namespace>tracktion_graph</namespace>
    <member kind="function">
      <type>void</type>
      <name>hash_combine</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a3341633309cf681a469c4e0a125ee616</anchor>
      <arglist>(size_t &amp;seed, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>hash_range</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab222ac4a9ddafa244c8756eee180d43f</anchor>
      <arglist>(It first, It last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hash_range</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a132ffd98f6fad38b25e0deea64ff0c88</anchor>
      <arglist>(std::size_t &amp;seed, It first, It last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>hash</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>acdbd470502b43f0bd3994eb4d5e4031a</anchor>
      <arglist>(size_t seed, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a5ee639a5e7d4339dc212105eb1099654</anchor>
      <arglist>(IntType samplePosition, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>afa4aa243e49c9113a21f00ebae9886d4</anchor>
      <arglist>(double timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; double &gt;</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab0aa1737af5c1896d9b40bf9168d6767</anchor>
      <arglist>(juce::Range&lt; IntType &gt; sampleRange, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a262237c25a6e015c4cdb265039319c91</anchor>
      <arglist>(juce::Range&lt; double &gt; timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a2790080555ade150fcfc142b83824bdc</anchor>
      <arglist>(RangeType timeInSeconds, double sampleRate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_GrooveTemplate.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__GrooveTemplate_8h.html</filename>
    <class kind="class">tracktion_engine::GrooveTemplate</class>
    <class kind="class">tracktion_engine::GrooveTemplateManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_HostedAudioDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__HostedAudioDevice_8h.html</filename>
    <class kind="class">tracktion_engine::HostedAudioDeviceInterface</class>
    <class kind="struct">tracktion_engine::HostedAudioDeviceInterface::Parameters</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_HostedMidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__HostedMidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion_engine::HostedMidiInputDeviceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_IconProG2.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__IconProG2_8h.html</filename>
    <class kind="class">tracktion_engine::IconProG2</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Identifiers.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Identifiers_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::IDs</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_ID</name>
      <anchorfile>tracktion__Identifiers_8h.html</anchorfile>
      <anchor>abf02e2884272a18da07d3d127f259c9a</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ImpulseResponsePlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__ImpulseResponsePlugin_8h.html</filename>
    <class kind="class">tracktion_engine::ImpulseResponsePlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__InputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::InputDevice</class>
    <class kind="class">tracktion_engine::InputDeviceInstance</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::InputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::WaveInputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::MidiInputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::VirtualMidiInputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::InputDeviceDestinationList</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::Consumer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InsertPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__InsertPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::InsertPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InsertReturnNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__InsertReturnNode_8h.html</filename>
    <class kind="class">tracktion_engine::InsertReturnNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InsertSendNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__InsertSendNode_8h.html</filename>
    <class kind="class">tracktion_engine::InsertSendReturnDependencyNode</class>
    <class kind="class">tracktion_engine::InsertSendNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LAMEManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__LAMEManager_8h.html</filename>
    <class kind="class">tracktion_engine::LAMEManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LatencyPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__LatencyPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::LatencyPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasurer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__LevelMeasurer_8h.html</filename>
    <class kind="struct">tracktion_engine::DbTimePair</class>
    <class kind="class">tracktion_engine::LevelMeasurer</class>
    <class kind="struct">tracktion_engine::LevelMeasurer::Client</class>
    <class kind="class">tracktion_engine::SharedLevelMeasurer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasurerProcessingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LevelMeasurerProcessingNode_8h.html</filename>
    <class kind="class">tracktion_engine::LevelMeasurerProcessingNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasuringNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LevelMeasuringNode_8h.html</filename>
    <class kind="class">tracktion_engine::LevelMeasuringNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__LevelMeter_8h.html</filename>
    <class kind="class">tracktion_engine::LevelMeterPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LFOModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__LFOModifier_8h.html</filename>
    <class kind="class">tracktion_engine::LFOModifier</class>
    <class kind="struct">tracktion_engine::LFOModifier::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LiveMidiInjectingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LiveMidiInjectingNode_8h.html</filename>
    <class kind="class">tracktion_engine::LiveMidiInjectingNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LiveMidiOutputNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LiveMidiOutputNode_8h.html</filename>
    <class kind="class">tracktion_engine::LiveMidiOutputNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LoopInfo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__LoopInfo_8h.html</filename>
    <class kind="class">tracktion_engine::LoopInfo</class>
    <class kind="struct">tracktion_engine::LoopInfo::LoopPoint</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LowPass.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__LowPass_8h.html</filename>
    <class kind="class">tracktion_engine::LowPassPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieC4.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieC4_8h.html</filename>
    <class kind="class">tracktion_engine::MackieC4</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieMCU.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieMCU_8h.html</filename>
    <class kind="class">tracktion_engine::MackieMCU</class>
    <class kind="struct">tracktion_engine::MackieMCU::CpuMeterTimer</class>
    <class kind="struct">tracktion_engine::MackieMCU::AuxTimer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieXT.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieXT_8h.html</filename>
    <class kind="class">tracktion_engine::MackieXT</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MacroParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__MacroParameter_8h.html</filename>
    <class kind="class">tracktion_engine::MacroParameter</class>
    <class kind="struct">tracktion_engine::MacroParameter::Assignment</class>
    <class kind="class">tracktion_engine::MacroParameterList</class>
    <class kind="class">tracktion_engine::MacroParameterElement</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>MacroParameter::Ptr</type>
      <name>getMacroParameterForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a612b719ecf107aedd3d17e56a651549e</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getOwnerPlugin</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd04601f5ef5adc173288bd0cb827b1b</anchor>
      <arglist>(MacroParameterList *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__MarkerClip_8h.html</filename>
    <class kind="class">tracktion_engine::MarkerClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__MarkerManager_8h.html</filename>
    <class kind="class">tracktion_engine::MarkerManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__MarkerTrack_8h.html</filename>
    <class kind="class">tracktion_engine::MarkerTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MasterTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__MasterTrack_8h.html</filename>
    <class kind="class">tracktion_engine::MasterTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneFileReader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__MelodyneFileReader_8h.html</filename>
    <class kind="class">tracktion_engine::MelodyneFileReader</class>
    <class kind="struct">tracktion_engine::ARADocumentHolder</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneInstanceFactory.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__MelodyneInstanceFactory_8h.html</filename>
    <class kind="struct">MelodyneInstance</class>
    <class kind="struct">MelodyneInstanceFactory</class>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MelodyneNode_8h.html</filename>
    <class kind="class">tracktion_engine::MelodyneNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiChannel.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiChannel_8h.html</filename>
    <class kind="struct">tracktion_engine::MidiChannel</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__MidiClip_8h.html</filename>
    <class kind="class">tracktion_engine::MidiClip</class>
    <class kind="struct">tracktion_engine::MidiClip::ScopedEventsList</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::MidiClip::LoopedSequenceType &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiControllerEvent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiControllerEvent_8h.html</filename>
    <class kind="class">tracktion_engine::MidiControllerEvent</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiExpression.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiExpression_8h.html</filename>
    <class kind="struct">tracktion_engine::MidiExpression</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__MidiInputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::MidiInputDevice</class>
    <class kind="struct">tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher</class>
    <class kind="struct">tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion_engine::MidiInputDeviceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiLearn.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__MidiLearn_8h.html</filename>
    <class kind="class">tracktion_engine::MidiLearnState</class>
    <class kind="struct">tracktion_engine::MidiLearnState::ScopedChangeCaller</class>
    <class kind="struct">tracktion_engine::MidiLearnState::Listener</class>
    <class kind="class">tracktion_engine::MidiAssignable</class>
    <class kind="struct">tracktion_engine::MidiAssignable::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiList_8h.html</filename>
    <class kind="class">tracktion_engine::MidiList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiMessageArray.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__MidiMessageArray_8h.html</filename>
    <class kind="struct">tracktion_engine::MidiMessageArray</class>
    <class kind="struct">tracktion_engine::MidiMessageArray::MidiMessageWithSource</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__MidiModifier_8h.html</filename>
    <class kind="class">tracktion_engine::MidiModifierPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiNode_8h.html</filename>
    <class kind="class">tracktion_engine::MidiNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNote.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiNote_8h.html</filename>
    <class kind="class">tracktion_engine::MidiNote</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNoteDispatcher.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__MidiNoteDispatcher_8h.html</filename>
    <class kind="class">tracktion_engine::MidiNoteDispatcher</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiOutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__MidiOutputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::MidiOutputDevice</class>
    <class kind="class">tracktion_engine::SoftwareMidiOutputDevice</class>
    <class kind="class">tracktion_engine::MidiOutputDeviceInstance</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiOutputDeviceInstanceInjectingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiOutputDeviceInstanceInjectingNode_8h.html</filename>
    <class kind="class">tracktion_engine::MidiOutputDeviceInstanceInjectingNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiPatchBay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__MidiPatchBay_8h.html</filename>
    <class kind="class">tracktion_engine::MidiPatchBayPlugin</class>
    <class kind="struct">tracktion_engine::MidiPatchBayPlugin::Mappings</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiProgramManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiProgramManager_8h.html</filename>
    <class kind="class">tracktion_engine::MidiProgramManager</class>
    <class kind="struct">tracktion_engine::MidiProgramManager::MidiBank</class>
    <class kind="struct">tracktion_engine::MidiProgramManager::MidiProgramSet</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiSysexEvent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiSysexEvent_8h.html</filename>
    <class kind="class">tracktion_engine::MidiSysexEvent</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MIDITrackerModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__MIDITrackerModifier_8h.html</filename>
    <class kind="class">tracktion_engine::MIDITrackerModifier</class>
    <class kind="struct">tracktion_engine::MIDITrackerModifier::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MiscUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__MiscUtilities_8h.html</filename>
    <class kind="class">tracktion_engine::ScopedWaitCursor</class>
    <namespace>tracktion_engine</namespace>
    <member kind="typedef">
      <type>int64_t</type>
      <name>HashCode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adb3c6f33fbcba4c6e5d7cfd390aecbec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSortedListToMenu</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abb2bc1f74eb33833d289e3ba3b61ea96</anchor>
      <arglist>(juce::PopupMenu &amp;m, juce::StringArray names, int startID)</arglist>
    </member>
    <member kind="function">
      <type>juce::AffineTransform</type>
      <name>getScaleAroundCentre</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6cf0952ed85db2d3062d27a3e904dbc5</anchor>
      <arglist>(juce::Rectangle&lt; float &gt; r, float numPixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfFirstFoundInSecond</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a25a34ee6a35670221d531aa7c66cb052</anchor>
      <arglist>(const juce::StringArray &amp;array1, const juce::StringArray &amp;array2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allFirstFoundInSecond</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa07fe8dc182b19bf4574c37ee4d3fab1</anchor>
      <arglist>(const juce::StringArray &amp;array1, const juce::StringArray &amp;array2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveXMLAttributeToStart</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a811ce76a66e23b5e61d770bcb0b43113</anchor>
      <arglist>(juce::XmlElement &amp;xml, juce::StringRef att)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeIf</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3b57ac300e0cf11039dc6c8b76669aaf</anchor>
      <arglist>(Vector &amp;v, Predicate &amp;&amp;pred)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>almostEqual</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af2dfc2c9e980592af894b374f7a1b546</anchor>
      <arglist>(FloatingPointType firstValue, FloatingPointType secondValue, FloatingPointType precision=(FloatingPointType) 0.00001)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Modifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__Modifier_8h.html</filename>
    <class kind="struct">tracktion_engine::ModifierTimer</class>
    <class kind="struct">tracktion_engine::Modifier</class>
    <class kind="class">tracktion_engine::ModifierList</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierType &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a98e603ac34b5295a1f841caafbc75ff0</anchor>
      <arglist>(const ModifierList &amp;ml)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e7932644221356e289f5830bfa8e929</anchor>
      <arglist>(ModifierList &amp;, EditItemID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierCommon.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__ModifierCommon_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::ModifierCommon</namespace>
    <member kind="enumeration">
      <type></type>
      <name>RateType</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hertz</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a618bfd594a87f2fa1109a53c8b7886cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourBars</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a85305dcb4f218d8074da1b028470d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>twoBars</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a7ad1aaca9d27d66353e3de3dd7202419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bar</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a52baa52c043175aa3657c084803ef596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a4d9ba3fef19fdbac70d0eae576422078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>half</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a9eb3cc23e9fec87ec91b316bb0e95a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a4f3001df62e2ce487cd3153831d8c1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a8dddc724e0647a7280c2751c6621a2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarter</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac16bd3eb7df019855c4fd5ea4bf63d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813af3acf74a5e005e20fb2f08b81f5e94f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813afd2f0e8f38c51aad55f2f3557f868c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813af42e9ddc7023f04c26500420fe3fc6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813abf9f8e73a5f0be892665d3ec988b4460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a97137788488f8cf1d580082658e2a136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813aba89df4dcd02c4db4c41d4c0ec5089fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813aff6a301581de9392e977200b12846871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ad155c663939f85b756817def30d33b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecond</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a0399f392921d23ae740e63d37c58e708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac38f7a0955738c9c96f4ff849678d073</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a5aff7e8a52e6ff49bb6e9d30c21d996e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac99cf90e80a4bb5e3fd26b15ab0633ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ae0a5823c4aa0ed05a55d9de38c10ae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>free</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3a768f178f25812a4295abc3ed875b5746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transport</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3ad6a8e179c28466b8ed5c12fc4518a76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>note</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3aea446b706c051f0b96df073e964befc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRateTypeChoices</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>af7fa20670b2c1d731f2c542f7aee6dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBarFraction</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a322c7488feeb733dc6d82f9c87bc81ba</anchor>
      <arglist>(RateType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSyncTypeChoices</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a678174eace66c33c6129f095f6758f2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierInternal.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__ModifierInternal_8h.html</filename>
    <class kind="struct">tracktion_engine::Ramp</class>
    <class kind="struct">tracktion_engine::DiscreteLabelledParameter</class>
    <class kind="struct">tracktion_engine::SuffixedParameter</class>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::PredefinedWavetable</namespace>
    <namespace>tracktion_engine::modifier</namespace>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getEnabledNames</name>
      <anchorfile>namespacetracktion__engine_1_1modifier.html</anchorfile>
      <anchor>a399368eca27461bd32302c89897c222f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ModifierNode_8h.html</filename>
    <class kind="class">tracktion_engine::ModifierNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_modules.dox</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/</path>
    <filename>tracktion__modules_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_MouseHoverDetector.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__MouseHoverDetector_8h.html</filename>
    <class kind="class">tracktion_engine::MouseHoverDetector</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MPEStartTrimmer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__MPEStartTrimmer_8h.html</filename>
    <class kind="struct">tracktion_engine::MPEStartTrimmer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion_engine::MultiThreadedNodePlayer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Musicality.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__Musicality_8h.html</filename>
    <class kind="class">tracktion_engine::Chord</class>
    <class kind="class">tracktion_engine::Scale</class>
    <class kind="class">tracktion_engine::PatternGenerator</class>
    <class kind="struct">tracktion_engine::PatternGenerator::ProgressionItem</class>
    <class kind="struct">tracktion_engine::KeyResult</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Chord::ChordType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Scale::ScaleType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::PatternGenerator::Mode &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
    <member kind="function">
      <type>juce::Array&lt; KeyResult &gt;</type>
      <name>determineKeyOfNotes</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abe0e1401ed2f8667c2e6988872e7752e</anchor>
      <arglist>(const juce::Array&lt; MidiNote * &gt; &amp;notes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_NodeRenderContext.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__NodeRenderContext_8h.html</filename>
    <class kind="class">tracktion_engine::NodeRenderContext</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_NovationAutomap.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__NovationAutomap_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_NovationRemoteSl.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__NovationRemoteSl_8h.html</filename>
    <class kind="class">tracktion_engine::NovationRemoteSl</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_OldEditConversion.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__OldEditConversion_8h.html</filename>
    <class kind="struct">tracktion_engine::OldEditConversion</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae829e0bdd800bba532ba110250ba8ed5</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41b3c93e6fdada6b4a73f2d70a9b70e0</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Oscillators.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Oscillators_8h.html</filename>
    <class kind="class">tracktion_engine::BandlimitedWaveLookupTables</class>
    <class kind="class">tracktion_engine::Oscillator</class>
    <class kind="class">tracktion_engine::MultiVoiceOscillator</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_OutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__OutputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::OutputDevice</class>
    <class kind="class">tracktion_engine::OutputDeviceInstance</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ParameterChangeHandler.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__ParameterChangeHandler_8h.html</filename>
    <class kind="class">tracktion_engine::ParameterChangeHandler</class>
    <class kind="struct">tracktion_engine::ParameterChangeHandler::Disabler</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ParameterControlMappings.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__ParameterControlMappings_8h.html</filename>
    <class kind="class">tracktion_engine::ParameterControlMappings</class>
    <class kind="struct">tracktion_engine::ParameterControlMappings::Mapping</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PatchBay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__PatchBay_8h.html</filename>
    <class kind="class">tracktion_engine::PatchBayPlugin</class>
    <class kind="struct">tracktion_engine::PatchBayPlugin::Wire</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PerformanceMeasurement.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__PerformanceMeasurement_8h.html</filename>
    <class kind="struct">tracktion_graph::ScopedSignpost</class>
    <class kind="class">tracktion_graph::PerformanceMeasurement</class>
    <class kind="struct">tracktion_graph::PerformanceMeasurement::Statistics</class>
    <class kind="class">tracktion_graph::ScopedPerformanceMeasurement</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Phaser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Phaser_8h.html</filename>
    <class kind="class">tracktion_engine::PhaserPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PhysicalMidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__PhysicalMidiInputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::PhysicalMidiInputDevice</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Pitch.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Pitch_8h.html</filename>
    <class kind="struct">tracktion_engine::Pitch</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchSequence.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__PitchSequence_8h.html</filename>
    <class kind="class">tracktion_engine::PitchSequence</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__PitchSetting_8h.html</filename>
    <class kind="class">tracktion_engine::PitchSetting</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8d25b5c44c43a506ae054ed0b792f0b8</anchor>
      <arglist>(const PitchSetting &amp;p1, const PitchSetting &amp;p2) noexcept</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchShift.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__PitchShift_8h.html</filename>
    <class kind="class">tracktion_engine::PitchShiftPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PlayHead.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__PlayHead_8h.html</filename>
    <class kind="class">tracktion_engine::PlayHead</class>
    <class kind="struct">tracktion_engine::PlayHead::EditTimeWindow</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PlayHeadPositionNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__PlayHeadPositionNode_8h.html</filename>
    <class kind="class">tracktion_engine::PlayHeadPositionNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Plugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__Plugin_8h.html</filename>
    <class kind="struct">tracktion_engine::PluginCreationInfo</class>
    <class kind="struct">tracktion_engine::PluginInitialisationInfo</class>
    <class kind="struct">tracktion_engine::PluginRenderContext</class>
    <class kind="class">tracktion_engine::Plugin</class>
    <class kind="struct">tracktion_engine::Plugin::Wire</class>
    <class kind="struct">tracktion_engine::Plugin::WindowState</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__PluginAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion_engine::PluginAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginComponent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__PluginComponent_8h.html</filename>
    <class kind="struct">tracktion_engine::PluginComponent</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginList_8h.html</filename>
    <class kind="class">tracktion_engine::PluginList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginManager_8h.html</filename>
    <class kind="class">tracktion_engine::PluginManager</class>
    <class kind="struct">tracktion_engine::PluginManager::BuiltInType</class>
    <class kind="struct">tracktion_engine::PluginManager::BuiltInTypeBase</class>
    <class kind="class">tracktion_engine::PluginCache</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__PluginNode_8h.html</filename>
    <class kind="class">tracktion_engine::PluginNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginWindowState.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginWindowState_8h.html</filename>
    <class kind="struct">tracktion_engine::PluginWindowState</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Project.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__Project_8h.html</filename>
    <class kind="class">tracktion_engine::Project</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectItem_8h.html</filename>
    <class kind="class">tracktion_engine::ProjectItem</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectItemID.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectItemID_8h.html</filename>
    <class kind="class">tracktion_engine::ProjectItemID</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::ProjectItemID &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectManager_8h.html</filename>
    <class kind="class">tracktion_engine::ProjectManager</class>
    <class kind="struct">tracktion_engine::ProjectManager::TempProject</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectSearchIndex.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectSearchIndex_8h.html</filename>
    <class kind="class">tracktion_engine::ProjectSearchIndex</class>
    <class kind="class">tracktion_engine::SearchOperation</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>SearchOperation *</type>
      <name>createSearchForKeywords</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ec6bb41c93ced265b8b232149d08eff</anchor>
      <arglist>(const juce::String &amp;keywords)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_PropertyStorage.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__PropertyStorage_8h.html</filename>
    <class kind="class">tracktion_engine::PropertyStorage</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_QuantisationType.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__QuantisationType_8h.html</filename>
    <class kind="class">tracktion_engine::QuantisationType</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackInstance.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__RackInstance_8h.html</filename>
    <class kind="class">tracktion_engine::RackInstance</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackInstanceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackInstanceNode_8h.html</filename>
    <class kind="class">tracktion_engine::RackInstanceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackNode_8h.html</filename>
    <class kind="struct">tracktion_engine::InputProvider</class>
    <class kind="class">tracktion_engine::RackNodePlayer</class>
    <namespace>tracktion_engine</namespace>
    <namespace>tracktion_engine::RackNodeBuilder</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Algorithm</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>ae02e342ca0780f356dbc00753b33c460</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1RackNodeBuilder.html" anchor="ae02e342ca0780f356dbc00753b33c460a56345a2ea3e821c40921950a7912e781">remappingNode</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1RackNodeBuilder.html" anchor="ae02e342ca0780f356dbc00753b33c460a202794f32e79bb82cb46fca36b6c8900">connectedNode</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a150b225d887609ddc8021f7508777ff9</anchor>
      <arglist>(Algorithm, tracktion_engine::RackType &amp;, double sampleRate, int blockSize, std::shared_ptr&lt; InputProvider &gt;, tracktion_graph::PlayHeadState *playHeadState=nullptr, bool isRendering=true)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a4f382f04480493b5441075570b83cf01</anchor>
      <arglist>(Algorithm, tracktion_engine::RackType &amp;, double sampleRate, int blockSize, std::unique_ptr&lt; tracktion_graph::Node &gt;, tracktion_graph::PlayHeadState &amp;, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_RackReturnNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackReturnNode_8h.html</filename>
    <class kind="class">tracktion_engine::RackReturnNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackType.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__RackType_8h.html</filename>
    <class kind="struct">tracktion_engine::RackConnection</class>
    <class kind="class">tracktion_engine::RackType</class>
    <class kind="struct">tracktion_engine::RackType::WindowState</class>
    <class kind="class">tracktion_engine::RackTypeList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RandomModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__RandomModifier_8h.html</filename>
    <class kind="class">tracktion_engine::RandomModifier</class>
    <class kind="struct">tracktion_engine::RandomModifier::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RealTimeSpinLock.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__RealTimeSpinLock_8h.html</filename>
    <class kind="class">tracktion_graph::RealTimeSpinLock</class>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RecordingThumbnailManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__RecordingThumbnailManager_8h.html</filename>
    <class kind="class">tracktion_engine::RecordingThumbnailManager</class>
    <class kind="struct">tracktion_engine::RecordingThumbnailManager::Thumbnail</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReferencedMaterialList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ReferencedMaterialList_8h.html</filename>
    <class kind="class">tracktion_engine::ReferencedMaterialList</class>
    <class kind="struct">tracktion_engine::ReferencedMaterialList::IntervalList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RemoteSLCompact.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__RemoteSLCompact_8h.html</filename>
    <class kind="class">tracktion_engine::RemoteSLCompact</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Renderer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__Renderer_8h.html</filename>
    <class kind="class">tracktion_engine::Renderer</class>
    <class kind="struct">tracktion_engine::Renderer::Parameters</class>
    <class kind="class">tracktion_engine::Renderer::RenderTask</class>
    <class kind="struct">tracktion_engine::Renderer::Statistics</class>
    <class kind="struct">tracktion_engine::Renderer::RenderResult</class>
    <namespace>tracktion_graph</namespace>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RenderManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__RenderManager_8h.html</filename>
    <class kind="class">tracktion_engine::RenderManager</class>
    <class kind="class">tracktion_engine::RenderManager::Job</class>
    <class kind="struct">tracktion_engine::RenderManager::Job::Listener</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RenderOptions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__RenderOptions_8h.html</filename>
    <class kind="class">tracktion_engine::RenderOptions</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::RenderType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::TargetFileFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::AddRenderOptions &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Reverb.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Reverb_8h.html</filename>
    <class kind="class">tracktion_engine::ReverbPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReverseRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ReverseRenderJob_8h.html</filename>
    <class kind="class">tracktion_engine::ReverseRenderJob</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReWirePlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__ReWirePlugin_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_RexFileFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__RexFileFormat_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_SamplerPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__SamplerPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::SamplerPlugin</class>
    <class kind="struct">tracktion_engine::SamplerPlugin::SamplerSound</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ScopedSteadyLoad.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__ScopedSteadyLoad_8h.html</filename>
    <class kind="class">tracktion_engine::ScopedSteadyLoad</class>
    <class kind="struct">tracktion_engine::ScopedSteadyLoad::Context</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Selectable.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__Selectable_8h.html</filename>
    <class kind="class">tracktion_engine::SelectableListener</class>
    <class kind="class">tracktion_engine::Selectable</class>
    <class kind="struct">tracktion_engine::SelectableList</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectableClass.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__SelectableClass_8h.html</filename>
    <class kind="class">tracktion_engine::SelectableClass</class>
    <class kind="struct">tracktion_engine::SelectableClass::AddClipboardEntryParams</class>
    <class kind="struct">tracktion_engine::SelectableClass::SelectOtherObjectsParams</class>
    <class kind="struct">tracktion_engine::SelectableClass::ClassInstanceBase</class>
    <class kind="struct">tracktion_engine::SelectableClass::ClassInstance</class>
    <class kind="class">tracktion_engine::SelectableClassWithVolume</class>
    <class kind="class">tracktion_engine::SelectableClassWithPan</class>
    <namespace>tracktion_engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_SELECTABLE_OBJECT_AND_CLASS</name>
      <anchorfile>tracktion__SelectableClass_8h.html</anchorfile>
      <anchor>ab91a75f89b1cb9bb34425ceb6b9a0293</anchor>
      <arglist>(ObjectType, ClassType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_SELECTABLE_CLASS</name>
      <anchorfile>tracktion__SelectableClass_8h.html</anchorfile>
      <anchor>a2044e326173ac3f9eb26e625a7b612a6</anchor>
      <arglist>(ObjectType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectedMidiEvents.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__SelectedMidiEvents_8h.html</filename>
    <class kind="class">tracktion_engine::SelectedMidiEvents</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectionManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__SelectionManager_8h.html</filename>
    <class kind="class">tracktion_engine::SelectionManager</class>
    <class kind="struct">tracktion_engine::SelectionManager::ChangedSelectionDetector</class>
    <class kind="struct">tracktion_engine::SelectionManager::ScopedSelectionState</class>
    <class kind="struct">tracktion_engine::SelectionManager::Iterator</class>
    <class kind="struct">tracktion_engine::SelectionManager::ComponentWithSelectionManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Semaphore.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__Semaphore_8h.html</filename>
    <class kind="class">tracktion_graph::Semaphore</class>
    <class kind="class">tracktion_graph::LightweightSemaphore</class>
    <namespace>moodycamel</namespace>
    <namespace>moodycamel::details</namespace>
    <namespace>tracktion_graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SettingID.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__SettingID_8h.html</filename>
    <namespace>tracktion_engine</namespace>
    <member kind="enumeration">
      <type></type>
      <name>SettingID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a621c43a54efb4eb950c0b1cad5e97eac</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafedb2d84cafe20862cb4399751a8a7e3">invalid</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf4a6dd1d859d0c75be53bdd8e10903e6">addAntiDenormalNoise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabae1d66bf6e7bd077603dd923ab3ef3c">audio_device_setup</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca36ff6680f35223d9a37377f7e849d82c">audiosettings</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab570b65e1f142172d29d10553384b1ba">autoFreeze</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaabdbefcb7beb917dea85d1ce8acedb14">autoTempoMatch</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49d0b9d90b866b75dd141d2c139eeb82">autoTempoDetect</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca415ada9d2d71ce32a632151ae7131d33">automapVst</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae0caca9a9974a0eb4e76cc511f42293f">automapNative</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8abed3d089b4528c2023ebd418b934ba">automapGuids1</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacada19f4cd43cb28828063fcb18bee2a69">automapGuids2</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca146bdabbf35fb3c93ba9780757a03ef3">cacheSizeSamples</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa8360068305889e0630dbea1c25fd008">compCrossfadeMs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca64c13455dd1fe041ad15987c09caaaf9">countInMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf9ceba609737c6c58f0ee7c4179db4a1">clickTrackMidiNoteBig</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae126f9e6072e4c7b39fc46ac354a3922">clickTrackMidiNoteLittle</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae4cb99e059e6526c7dd0bc4647ca6cdc">clickTrackSampleSmall</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca07fd0fba07d9b1098131ba5689befcd0">clickTrackSampleBig</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca33317b96a63f7c2c075553f62c40c988">crossfadeBlock</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad9747e2da342bdb995f6389533ad1a3d">cpu</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5b28355506754f09c1aefddd2b83ed0b">customMidiControllers</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca732b8be068c98a77b3b321705c16c9c4">deadMansPedal</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa62e6a9b96a5a46ca1e8df8bdf61f22a">defaultMidiOutDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca015769f76c6033c69d783a89b0afedf3">defaultWaveOutDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafea66fb91cbf2d78d2bace53a399d84f">defaultMidiInDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8873e2c579f6e0cdad6bf53c14440209">defaultWaveInDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaab5dbffa8d328b4ee3c038b03db636a9">externControlIn</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca15b23b93b04ee1f66a8e853395711d8b">externControlOut</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad3b6c594a822b4858b52daef222f5921">externControlNum</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadb759e79468893b2baaf9556d47bf22d">externControlMain</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca31b14445c2b17c9d967b7319d731a1a8">externControlShowSelection</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1918ff077a302b29d9bac97cc5eb70cc">externControlSelectionColour</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf37db2cd80d1ec81f8201a888987e99e">externControlEnable</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca386ac11ab2989a84b771e586cb83ef80">externOscInputPort</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8b69d1116ebfb1e0a04d282b51214bc8">externOscOutputPort</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6c0181cbf07dc90e143aa5dabbee22d8">externOscOutputAddr</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3a2da2036002bcc377f599727cf771d5">filterControlMappingPresets</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca93f5564cc510d197a37af4fae5acd88c">filterGui</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca133823cfadbff75b8d9d7b3c4f4fdaf4">fitClipsToRegion</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6a7d0e75a9396fcc5c73218ffd2f1e6a">findExamples</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaea96cab3cbe5d21dbdc9f8834885a71e">freezePoint</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1ef2784670057be89a5320f13bfcbca4">hasEnabledMidiDefaultDevs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca13cdced4c5e7c68ee57a6667491a2fa4">glideLength</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacacb2c1d30fff1f26672afd4f682e279fe">grooveTemplates</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad4be0f64bf0d12c19719d73ee2e7dd2a">knownPluginList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8f618cf8b9d6f75493e756fe3e742d40">knownPluginList64</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0852db5a857dd043f95d3af0bb73fac9">lameEncoder</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae35835e50542993db63c630df92d181f">lastClickTrackLevel</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca69eb61fb57e7ffd44f2b08134080f334">lastEditRender</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadf6f056bd22d8a4e86d91b964bcb7163">lowLatencyBuffer</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca08742b9203bf4d5ffb9c20ee2111866f">MCUoneTouchRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca7829fddc435afb7d958bdde7713394b1">maxLatency</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3f76e19b8be570ab42fa74157fd3c8af">midiin</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2e68786ada734ce9728d1738fb0b21d4">midiout</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae492cd4c2633cc4beba787942b8d55c1">midiEditorOctaves</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa77620469659abf39ab038d1a96cfd20">midiProgramManager</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5cbf4c22d5264f26fe59bc8c4962f8b3">newMarker</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5c055d665fa2b6d747d438549bb2b336">numThreadsForPluginScanning</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaab3be0baacb19d5b398e3ad4e760e2d5">projectList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca35a2864c314e4367eb1684bfe126a967">projects</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1c2daf6d2feb296a59ff633379d58480">recentProjects</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaff8ed4f53819dcf20438b964fec10fa2">renameClipRenamesSource</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2cdbd15b771628de0256bab7909a8046">renameMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca4f0f5be4892f3fd7fe272df168c73857">renderRecentFilesList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacacd1c9a0f8b4bc4d561b5be14b040a19e">resetCursorOnStop</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6118d3bbbb834510d5533f4d2b721cf0">retrospectiveRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca51c42b14b1831fc29eec3a15c27b5f41">reWireEnabled</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0cc34e5dab44f5677beb8606ddbd364e">safeRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca4575629cfb51fb2d9487ee2d907ee1b8">sendControllerOffMessages</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab2743c7f7477f7d812ecf5ad60fddd2b">simplifyAfterRecording</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab25669aa29c4de54cf3e79e75630600e">snapCursor</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca7065a657acc31d03990ae857307cb984">tempDirectory</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf20e670bd4b44c06095587c42c059a57">trackExpansionMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca117764216c0ac64c6b8db535df3eac30">use64Bit</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa5d51cbdfb33b9d96114dd79348a8a0e">xFade</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca87154d5531917a96b35bae4993259a37">xtCount</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49b2d1e2befcd40dfea67e1daf091dc4">xtIndices</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadc17b81e0fcc4244d653e30e5552af7f">virtualmididevices</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca30c1138f8420913e5253a0fd215212f4">virtualmidiin</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae09c5665396629f42adc7c8fd637137b">useSeparateProcessForScanning</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca060c0316a269e325c58b3984fec89e7a">useRealtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacac733e4221d487351d76843e7d172fa06">wavein</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca33871eeb66dd165b9d0482fb8585ab32">waveout</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae044eeed17ec4bc3c3258fe518fa6460">windowsDoubleClick</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0a161e311b986d94825458f8e192e54b">renderFormat</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabfe9884d29a1bc6c20535b21feb81fcc">trackRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1b874b9100170a2bfc595c462997355e">trackRenderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca32dc181ee9a3989f69390fd115610849">bypassFilters</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab3d70f37909a1657efd2efeae8f95d86">markedRegion</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca82f6a120d0d01ec5ba611f8a4493d581">editClipRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca67d48752bee2d7b159258294f638226f">editClipRenderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca102baf00f489b06c966ec93503af4bdc">editClipRenderDither</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2501b72cee1761c35c2e8b90d2741be3">editClipRealtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacac064c494b752ea8be2d4289a9c9c2fdf">editClipRenderStereo</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca71ca533d7470e635df1021f64cd6bf26">editClipRenderNormalise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2e6f92476054e669cc36cb60887a82ab">editClipRenderRMS</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa9d038283f7b683fc08b5bd90c9d58c9">editClipRenderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaff89a6921c18e2d9a340be45b0c8c7e2">editClipRenderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca13e9ee05f30bd1994fa972300ba96f5a">editClipPassThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf2632d3ae14c6bc38a44a524a1c3bfde">exportFormat</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafba022231b903d6edb8fe1ee5b50c442">renderOnlySelectedClips</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6355d6a086c29f993cf48fccab4b09bd">renderOnlyMarked</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3e63b09d6c9384cf6189ae1cde6288cf">renderNormalise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca08e87b5239d6cf0be149b139f3cb1836">renderRMS</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5a4a44cc3a53ec31714031bf8801dc45">renderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49439ce96bbe5130e3c5573993eb2a3f">renderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad8de6460b5cb7402a2feef9655663462">renderTrimSilence</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabd3bdf946b94629a735ee2e5cd30e44e">renderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadc32e81c91da85b1a1e87f4206aa8993">renderStereo</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5d87425648c90ff47bb1d8b70a4c82be">renderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6a2c3de0c23697686dbcbd562dccc46e">renderDither</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad66636b253cb346dbb6240e30def3618">quality</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaebf43e996821d24d05eda0d2450c1b0c">addId3Info</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca37e2a166d3ab28426a1d1a481d356d33">realtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca01372905495e6c5db01a5baa92da0d98">passThroughFilters</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SharedLevelMeasuringNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__SharedLevelMeasuringNode_8h.html</filename>
    <class kind="class">tracktion_engine::SharedLevelMeasuringNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SmartThumbnail.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__SmartThumbnail_8h.html</filename>
    <class kind="class">tracktion_engine::SmartThumbnail</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SourceFileReference.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__SourceFileReference_8h.html</filename>
    <class kind="class">tracktion_engine::SourceFileReference</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SpeedRampAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__SpeedRampAudioNode_8h.html</filename>
    <class kind="class">tracktion_engine::SubSampleWaveAudioNode</class>
    <class kind="class">tracktion_engine::SpeedRampAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SpeedRampWaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__SpeedRampWaveNode_8h.html</filename>
    <class kind="struct">tracktion_engine::SpeedFadeDescription</class>
    <class kind="class">tracktion_engine::SpeedRampWaveNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Spline.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Spline_8h.html</filename>
    <class kind="struct">tracktion_engine::Spline</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_StepClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__StepClip_8h.html</filename>
    <class kind="class">tracktion_engine::StepClip</class>
    <class kind="struct">tracktion_engine::StepClip::Channel</class>
    <class kind="struct">tracktion_engine::StepClip::Pattern</class>
    <class kind="struct">tracktion_engine::StepClip::Pattern::CachedPattern</class>
    <class kind="struct">tracktion_engine::StepClip::PatternInstance</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_StepModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__StepModifier_8h.html</filename>
    <class kind="class">tracktion_engine::StepModifier</class>
    <class kind="struct">tracktion_engine::StepModifier::Assignment</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoDetect.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__TempoDetect_8h.html</filename>
    <class kind="class">tracktion_engine::TempoDetect</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TemporaryFileManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__TemporaryFileManager_8h.html</filename>
    <class kind="class">tracktion_engine::TemporaryFileManager</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoSequence.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TempoSequence_8h.html</filename>
    <class kind="class">tracktion_engine::TempoSequence</class>
    <class kind="struct">tracktion_engine::TempoSequence::BarsAndBeats</class>
    <class kind="struct">tracktion_engine::TempoSequence::SectionDetails</class>
    <class kind="struct">tracktion_engine::TempoSequence::TempoSections</class>
    <class kind="class">tracktion_engine::TempoSequencePosition</class>
    <class kind="struct">tracktion_engine::EditTimecodeRemapperSnapshot</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TempoSetting_8h.html</filename>
    <class kind="class">tracktion_engine::TempoSetting</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TempoTrack_8h.html</filename>
    <class kind="class">tracktion_engine::TempoTrack</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TestUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__TestUtilities_8h.html</filename>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TextPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__TextPlugin_8h.html</filename>
    <class kind="class">tracktion_engine::TextPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Threads.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__Threads_8h.html</filename>
    <namespace>tracktion_graph</namespace>
    <member kind="function">
      <type>bool</type>
      <name>setThreadPriority</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ae3b5edf1e709bed61da5f896c3898451</anchor>
      <arglist>(std::thread &amp;, int priority)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Thumbnail.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__Thumbnail_8h.html</filename>
    <class kind="class">tracktion_engine::TracktionThumbnail</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimecodeDisplayFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TimecodeDisplayFormat_8h.html</filename>
    <class kind="struct">tracktion_engine::TimecodeSnapType</class>
    <class kind="class">tracktion_engine::TimecodeDuration</class>
    <class kind="struct">tracktion_engine::TimecodeDisplayFormat</class>
    <class kind="struct">tracktion_engine::TimecodeDisplayIterator</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimecodeDisplayFormat &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TimecodeType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4f395d9883e2e8cd69c9468c77cbd4bb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba89e893579b272eb562aa17cb401ac7b7">millisecs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba77c84d786e6839a25295c0e73b3342c9">barsBeats</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bbaa2dc2407a46ee1b7331225183f4b34c0">fps24</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba745ffcdd19b34f7d8d4028a0380f7808">fps25</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba51b0fa64094004b47e32034da78f7a75">fps30</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TimedMutingAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__TimedMutingAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion_engine::TimedMutingAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimedMutingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TimedMutingNode_8h.html</filename>
    <class kind="class">tracktion_engine::TimedMutingNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeSigSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TimeSigSetting_8h.html</filename>
    <class kind="class">tracktion_engine::TimeSigSetting</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeStretch.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__TimeStretch_8h.html</filename>
    <class kind="class">tracktion_engine::TimeStretcher</class>
    <class kind="struct">tracktion_engine::TimeStretcher::ElastiqueProOptions</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimeStretcher::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimeStretcher::ElastiqueProOptions &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeStretchingWaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TimeStretchingWaveNode_8h.html</filename>
    <class kind="class">tracktion_engine::TimeStretchingWaveNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ToneGenerator.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__ToneGenerator_8h.html</filename>
    <class kind="class">tracktion_engine::ToneGeneratorPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Track.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__Track_8h.html</filename>
    <class kind="class">tracktion_engine::Track</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackCompAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__TrackCompAudioNode_8h.html</filename>
    <includes id="tracktion__TimedMutingAudioNode_8h" name="tracktion_TimedMutingAudioNode.h" local="yes" imported="no">tracktion_TimedMutingAudioNode.h</includes>
    <includes id="tracktion__FadeInOutAudioNode_8h" name="tracktion_FadeInOutAudioNode.h" local="yes" imported="no">tracktion_FadeInOutAudioNode.h</includes>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae43e0fba3266cff6627babe771df8dc9</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; EditTimeRange &gt; &amp;muteTimes, const juce::Array&lt; EditTimeRange &gt; &amp;nonMuteTimes, double crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createAudioNode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a51d1259877ffef33280720695eea7517</anchor>
      <arglist>(TrackCompManager::TrackComp &amp;trackComp, Track &amp;t, AudioNode *input)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackCompManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackCompManager_8h.html</filename>
    <class kind="class">tracktion_engine::TrackCompManager</class>
    <class kind="struct">tracktion_engine::TrackCompManager::CompSection</class>
    <class kind="struct">tracktion_engine::TrackCompManager::TrackComp</class>
    <class kind="struct">tracktion_engine::TrackCompManager::TrackComp::Section</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TrackCompManager::TrackComp::TimeFormat &gt;</class>
    <namespace>tracktion_engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackItem_8h.html</filename>
    <class kind="class">tracktion_engine::TrackItem</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackMidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackMidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion_engine::TrackMidiInputDeviceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackMutingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackMutingNode_8h.html</filename>
    <class kind="class">tracktion_engine::TrackMuteState</class>
    <class kind="class">tracktion_engine::TrackMutingNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackOutput.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackOutput_8h.html</filename>
    <class kind="class">tracktion_engine::TrackOutput</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TracktionEngineNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TracktionEngineNode_8h.html</filename>
    <class kind="struct">tracktion_engine::ProcessState</class>
    <class kind="class">tracktion_engine::TracktionEngineNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TracktionNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TracktionNodePlayer_8h.html</filename>
    <class kind="class">tracktion_engine::TracktionNodePlayer</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackUtils_8h.html</filename>
    <class kind="struct">tracktion_engine::TrackInsertPoint</class>
    <class kind="struct">tracktion_engine::TrackList</class>
    <class kind="struct">tracktion_engine::TrackSection</class>
    <class kind="struct">tracktion_engine::TrackAutomationSection</class>
    <class kind="struct">tracktion_engine::TrackAutomationSection::ActiveParameters</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>void</type>
      <name>moveAutomation</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5aa8cd25f0f5bf20949d68e146ab537e</anchor>
      <arglist>(const juce::Array&lt; TrackAutomationSection &gt; &amp;, double offset, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findIndexOfNextItemAt</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7617f7f67cc68a5311c1f4e341f4473c</anchor>
      <arglist>(const ArrayType &amp;items, double time)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>findUnionOfEditTimeRanges</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa18dbb33ea905a1cae8f222f8cf1045c</anchor>
      <arglist>(const ArrayType &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackWaveInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackWaveInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion_engine::TrackWaveInputDeviceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TransportControl.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__TransportControl_8h.html</filename>
    <class kind="class">tracktion_engine::TransportControl</class>
    <class kind="struct">tracktion_engine::TransportControl::ReallocationInhibitor</class>
    <class kind="struct">tracktion_engine::TransportControl::ScopedPlaybackRestarter</class>
    <class kind="struct">tracktion_engine::TransportControl::ScopedContextAllocator</class>
    <class kind="struct">tracktion_engine::TransportControl::Listener</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>void</type>
      <name>toStart</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a81a933955774e6d8535d4d9297791858</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toEnd</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a87656783d8e57aaf57299212edcecbe4</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a033e50a5e7ed514dc3096c64860f92f4</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa7915202ce156fd9aa7f8d5092ddfa81</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a30d9eebc4e9fc212499bf9787f3c6bed</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a64bc52bc5f057669e03b2409dfb40e35</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrub</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa540e1a553250d9b10d1e0a86120ea13</anchor>
      <arglist>(TransportControl &amp;, double unitsForwards)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContextIfNotRecording</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5633f63fe294ecb018e52318c705ff54</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Tranzport.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__Tranzport_8h.html</filename>
    <class kind="class">tracktion_engine::TranzportControlSurface</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_UIBehaviour.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__UIBehaviour_8h.html</filename>
    <class kind="class">tracktion_engine::UIBehaviour</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ValueTreeUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ValueTreeUtilities_8h.html</filename>
    <class kind="struct">juce::VariantConverter&lt; Colour &gt;</class>
    <class kind="class">tracktion_engine::ValueTreeObjectList</class>
    <class kind="struct">tracktion_engine::SortedValueTreeObjectList</class>
    <class kind="struct">tracktion_engine::ValueTreeAllEventListener</class>
    <class kind="struct">tracktion_engine::ValueTreeComparator</class>
    <class kind="class">tracktion_engine::ReferenceCountedValueTree</class>
    <namespace>juce</namespace>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>matchesAnyOf</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3403c5eb22c108deac19ee9dbe8ce88c</anchor>
      <arglist>(const Type &amp;needle, const std::initializer_list&lt; Type &gt; &amp;haystack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachItem</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8a4248d69aa8f9522309589a788c0e92</anchor>
      <arglist>(const juce::Array&lt; Type * &gt; &amp;items, const UnaryFunction &amp;fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValueTreeProperties</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6153a647eb9f98533e8d7bdac0ace58e</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;name, const juce::var &amp;value, Others &amp;&amp;... others)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createValueTree</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a15e6767b73449f729b81f97897cfadf8</anchor>
      <arglist>(const juce::Identifier &amp;name, Properties &amp;&amp;... properties)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt; &amp;</type>
      <name>removeInvalidValueTrees</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6bb76837fe34851c3737ab48cf5b7038</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;trees)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt;</type>
      <name>getTreesOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a56d2ebf2b22d1ae50762234aac31df1f</anchor>
      <arglist>(const juce::Array&lt; juce::ValueTree &gt; &amp;trees, const juce::Identifier &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChildTreesRecursive</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0db9e32e639e4331a73fc411f80214d7</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;result, const juce::ValueTree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renamePropertyRecursive</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e0ca09cf05a38c308f0c2544f8ed3a3</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;oldName, const juce::Identifier &amp;newName, juce::UndoManager *um)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_VCA.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__VCA_8h.html</filename>
    <class kind="class">tracktion_engine::VCAPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VirtualMidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__VirtualMidiInputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::VirtualMidiInputDevice</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VolumeAndPan.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__VolumeAndPan_8h.html</filename>
    <class kind="class">tracktion_engine::VolumeAndPanPlugin</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VSTXML.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__VSTXML_8h.html</filename>
    <class kind="class">tracktion_engine::VSTXML</class>
    <class kind="struct">tracktion_engine::VSTXML::Base</class>
    <class kind="struct">tracktion_engine::VSTXML::Param</class>
    <class kind="struct">tracktion_engine::VSTXML::Group</class>
    <class kind="struct">tracktion_engine::VSTXML::Range</class>
    <class kind="struct">tracktion_engine::VSTXML::Entry</class>
    <class kind="struct">tracktion_engine::VSTXML::ValueType</class>
    <class kind="struct">tracktion_engine::VSTXML::Template</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WarpTimeManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WarpTimeManager_8h.html</filename>
    <class kind="struct">tracktion_engine::WarpMarker</class>
    <class kind="class">tracktion_engine::WarpTimeManager</class>
    <class kind="class">tracktion_engine::WarpTimeFactory</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WarpTimeRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WarpTimeRenderJob_8h.html</filename>
    <class kind="class">tracktion_engine::WarpTimeRenderJob</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveAudioClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WaveAudioClip_8h.html</filename>
    <class kind="class">tracktion_engine::WaveAudioClip</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__WaveAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion_engine::WaveAudioNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveDeviceDescription.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveDeviceDescription_8h.html</filename>
    <class kind="struct">tracktion_engine::ChannelIndex</class>
    <class kind="struct">tracktion_engine::WaveDeviceDescription</class>
    <namespace>tracktion_engine</namespace>
    <member kind="function">
      <type>juce::String</type>
      <name>createDescriptionOfChannels</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa7ab31ffc0d6806ae6b966e1f28d25da</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>createChannelSet</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ada4e8ec6d3c75ae3058e88fa06f6f1af</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channelTypeFromAbbreviatedName</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a582ff235c909d633d529ffeb3597857e</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>channelSetFromSpeakerArrangmentString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a474276631b9684875b75cd10bd1a964c</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveInputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::WaveInputDevice</class>
    <class kind="class">tracktion_engine::WaveInputRecordingThread</class>
    <class kind="struct">tracktion_engine::WaveInputRecordingThread::ScopedInitialiser</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__WaveInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion_engine::WaveInputDeviceNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__WaveNode_8h.html</filename>
    <class kind="class">tracktion_engine::WaveNode</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveOutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveOutputDevice_8h.html</filename>
    <class kind="class">tracktion_engine::WaveOutputDevice</class>
    <class kind="class">tracktion_engine::WaveOutputDeviceInstance</class>
    <namespace>tracktion_engine</namespace>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AbletonLink</name>
    <filename>classtracktion__engine_1_1AbletonLink.html</filename>
    <class kind="struct">tracktion_engine::AbletonLink::Listener</class>
    <member kind="function">
      <type></type>
      <name>AbletonLink</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a9df8cbc8af1bf26bd1935e1ee33fdedd</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbletonLink</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a38fc93b969cd2a38856d3b76c16fe764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a3f969be92ef2d02d9cd7d0252b7cc3a9</anchor>
      <arglist>(bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a64729ea5e96e542d65d2ca735eb7898a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>ab2e176ec4cf41d90cd050c1e2b4ea3c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSessionTempo</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>ae6c48e4dd60593354198e282647ab33e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsUntilNextCycle</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>aa86b909910685c4dd8412b1fd0f4d49f</anchor>
      <arglist>(double quantum) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomOffset</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a97ee5a780dfcc1d3f535abba754d0d82</anchor>
      <arglist>(int offsetMs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempoConstraint</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a2ae0567948bc873966049faa7b0de56c</anchor>
      <arglist>(juce::Range&lt; double &gt; minMaxTempo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestTempoChange</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a5a0167a163dd9b72d6033b9a32470a5a</anchor>
      <arglist>(double newBpm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a6e389bb0182086ad66c984b71a52b74f</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>aca947c66f18b652aa02b2d2cdd1c1c78</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>LinkImpl</name>
      <anchorfile>classtracktion__engine_1_1AbletonLink.html</anchorfile>
      <anchor>a0559ddaa2788a44d53cbe5385afd4504</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ActiveEdits</name>
    <filename>structtracktion__engine_1_1ActiveEdits.html</filename>
    <member kind="function">
      <type>juce::Array&lt; Edit * &gt;</type>
      <name>getEdits</name>
      <anchorfile>structtracktion__engine_1_1ActiveEdits.html</anchorfile>
      <anchor>ad93ebbf80b2d2fd8d9d4952473a34a4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>structtracktion__engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>structtracktion__engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TransportControl</name>
      <anchorfile>structtracktion__engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a81763d016a7d679f30b5245d9036d631</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ActiveNoteList</name>
    <filename>structtracktion__engine_1_1ActiveNoteList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>ad716b7274d630498ee939b6dea7e5420</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNoteActive</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a8ea75a112a388390ecdf7ed23db5d16c</anchor>
      <arglist>(int channel, int note) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startNote</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>ad71f7deb2b24940276a35880af6e64f4</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNote</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a4412016f45ef1122a47ce1be51c3197d</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iterate</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a38c2024254251ff5a418f0c68b3a27e1</anchor>
      <arglist>(Visitor &amp;&amp;v) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidIndex</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a7069b1a13fc54272e48c9b3edd38203c</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::uint16</type>
      <name>activeChannels</name>
      <anchorfile>structtracktion__engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a7bc8b07eddf69fee92b9e47f096f3ef9</anchor>
      <arglist>[128]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackAutomationSection::ActiveParameters</name>
    <filename>structtracktion__engine_1_1TrackAutomationSection_1_1ActiveParameters.html</filename>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>param</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection_1_1ActiveParameters.html</anchorfile>
      <anchor>a76b01ce5bb687b3172e4e8d71290fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomationCurve</type>
      <name>curve</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection_1_1ActiveParameters.html</anchorfile>
      <anchor>a0f27cf2803a67a2ad2297d764a15ef2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectableClass::AddClipboardEntryParams</name>
    <filename>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</filename>
    <member kind="function">
      <type></type>
      <name>AddClipboardEntryParams</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>ab2d638aabf0e962457d665f85dd8fe71</anchor>
      <arglist>(Clipboard &amp;c)</arglist>
    </member>
    <member kind="variable">
      <type>SelectableList</type>
      <name>items</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>ac6965b0ac05163443117991685b44786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>ac97a803458b30fd3418f746828f8bd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>abfdd8e18515dd140dfee58a99fbbb5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Clipboard &amp;</type>
      <name>clipboard</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>ad35be641938461060b6eed012ee34bbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AirWindowsCallback</name>
    <filename>classtracktion__engine_1_1AirWindowsCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>AirWindowsCallback</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>aa94b5322ea54b2c59028c634a04e59d3</anchor>
      <arglist>(AirWindowsPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AirWindowsCallback</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>a3099a55363c21c964344b68baf778789</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>a01e6115387b920e063cb9eaaf810a637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AirWindowsPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>a7b087582784272e30325491adeab3414</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AirWindowsPlugin</name>
    <filename>classtracktion__engine_1_1AirWindowsPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>delay</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a7f4dc7db396888f2ac704acc895683dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dither</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a55ae560ea0853cac1611fd435c018150</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>distortion</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a52f0cafdd19e9e24243f6c6dc281fdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dynamics</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a354cdd7f3cd56b929a08bfb040e98c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emulation</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8acd1422e3596962b8abc0f0b930e0a6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eq</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a9368f6f0ad2a86b95a20dc44bffa03a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>filter</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a8168007de0cd6835a623637469438d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>imaging</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a0e8c4e04bbe643316ee42dcbfedd1cb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>modulation</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a77cd108dd47c3a2c6409883b4cffc240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>reverb</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a7e15c6923ebfb4d8f7f2a67b23fc84b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utility</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a3269e5e918bab127e244386e331a459e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>delay</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a7f4dc7db396888f2ac704acc895683dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dither</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a55ae560ea0853cac1611fd435c018150</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>distortion</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a52f0cafdd19e9e24243f6c6dc281fdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dynamics</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a354cdd7f3cd56b929a08bfb040e98c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emulation</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8acd1422e3596962b8abc0f0b930e0a6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eq</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a9368f6f0ad2a86b95a20dc44bffa03a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>filter</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a8168007de0cd6835a623637469438d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>imaging</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a0e8c4e04bbe643316ee42dcbfedd1cb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>modulation</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a77cd108dd47c3a2c6409883b4cffc240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>reverb</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a7e15c6923ebfb4d8f7f2a67b23fc84b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utility</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a22dc62d9680045e5f07a5e829f39ffd8a3269e5e918bab127e244386e331a459e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AirWindowsPlugin</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a83753d1ffd222e0a13430946c7c99c8c</anchor>
      <arglist>(PluginCreationInfo, std::unique_ptr&lt; AirWindowsBase &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AirWindowsPlugin</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aad90abe165b6ce72d4c3fc5f58070c31</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>getPluginCategory</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ae32d29e9368683559b9093f6034d1f0e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a2f09fb3db6c06087ed445a89f73615c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aaea996d4fed5d37e6d398a6442739182</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>affda88b33c06603e8b65c89d1158b3cb</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a9614591dd9d8518a20b0765974a7fccd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a64121f09777571a761eb6aaf3a8daf6d</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a259d2a6fabd50814ea046b74ce2e0764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ada483e84b63f267a923cac8e04c8226b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>adf76dd67be35a79c2a7b1864e8dda0be</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a61102c6411b409f5b659d817c4491dbb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aac31749975502dd597421cdd2c3fe080</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>afb8412918e86b32a6fb58b35aaf7cc7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a4ac9bc91ed93b46d143c66eabf4af4fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aeec7a9036c6665a7194cfd9c303990a6</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a130671e13262b90a2680801d511bf9bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>parameters</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ae729e58d449ef78578583ff05b7846fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a0f17bd1f75d3668397329cfd9fca2b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a8c69741b666bd5b37f9246f4fe9aa77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a89671237ac42f53a15a8c4511b92ad8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a1bc6d3c3fcff1ac07b8da9c05bb75c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setConversionRange</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a5b9af6b5917c4626e76af56d0be7ade4</anchor>
      <arglist>(int param, juce::NormalisableRange&lt; float &gt; range)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ad38e5af069339a07cd6c491fb1330ccb</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>friend</type>
      <name>AirWindowsAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a324666d6312b3d8752711811edc1d691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>friend</type>
      <name>AirWindowsCallback</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a2b8a30e275e4fbdb7feb72ae25ffec70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>lock</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ad63aa1ea65f7bb889524680d61998365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AirWindowsCallback</type>
      <name>callback</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aeecde9bd3ec082621cfe7266c88220d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AirWindowsBase &gt;</type>
      <name>impl</name>
      <anchorfile>classtracktion__engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a38891afd03d5f2fff8bea81524779416</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AlphaTrackControlSurface</name>
    <filename>classtracktion__engine_1_1AlphaTrackControlSurface.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <member kind="enumvalue">
      <name>alphaTrackF1</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2aabff1e7918cfe42bfd0192d0d268a820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF2</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ae5030dc40a312cc17b5258ba8635b443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF3</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a635fc0c30f54b291288dc1997cf428c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF4</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ac28a5e55c4a209dcfcf47dde361b20a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF5</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ab14f83aad28dde406c9211db3c5f19c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF6</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a24e3596580e365c37dc960cc28b9a444</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF7</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a91f6b0c577681b999862b7db9b2bbc2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF8</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a58e8c19c31da799d7d4179c611870b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackFoot</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a47d265727e14538c42a86cdd0e9447f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF1</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2aabff1e7918cfe42bfd0192d0d268a820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF2</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ae5030dc40a312cc17b5258ba8635b443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF3</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a635fc0c30f54b291288dc1997cf428c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF4</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ac28a5e55c4a209dcfcf47dde361b20a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF5</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2ab14f83aad28dde406c9211db3c5f19c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF6</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a24e3596580e365c37dc960cc28b9a444</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF7</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a91f6b0c577681b999862b7db9b2bbc2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF8</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a58e8c19c31da799d7d4179c611870b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackFoot</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a311d81ed9adab51c6fa4a5b9ffa3f0e2a47d265727e14538c42a86cdd0e9447f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AlphaTrackControlSurface</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a73ae875f4b1130036522ac29f5a6e230</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AlphaTrackControlSurface</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>adc3823aca8f37039c4f98f1d1579e121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>afe2504d1befc5ae9c5e7319c127535ef</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a5c6c06ab8894fed2174a2260f3ac4d39</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a00962f99e6cb95f4ba6c34a880743d1b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aaf9cc17f6d1f508877ecfc7204eb05da</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ab889022559efa957b2b3c95dd950e0f6</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>abcc4fafa032a0f7d37e39e32637c60b5</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a8b55d4ce5c9888b1e05ac71dbdf4fd3b</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>af4acacbfa3ca71e42a28ebae9bc75927</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a949e043e98fe515fb9c630cb0b3223af</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>afc17e0a957ee5c220b712a298210ac45</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a95befc9546f79f489e6da8cf3fc89c9b</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ac3aac41d34652db43dd4663125850496</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a08dd68da8353e2ce60c03d7a28d7a229</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a534b9c4331078286a4dc40b652412c9f</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ab0bd64e484b61b4f30a7ee4ce54a9527</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a50761e59dd0a7a8e44444fe9fde03a4c</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion__engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a1d9c069a6289b328dd37aa4aa295b1bf</anchor>
      <arglist>(Plugin *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ARADocument</name>
    <filename>classARADocument.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocument</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a76ae9f7b9f061aa0272bb9dd0f8a03e9</anchor>
      <arglist>(Edit &amp;sourceEdit, MelodyneInstance *validPluginWrapper, const ARAPlugInExtensionInstance &amp;, const ARADocumentControllerInstance &amp;dc, ARADocumentControllerHostInstance *dchi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ARADocument</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a27a3393488d556e3b580ed495ad89a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEdit</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aec391580c9bf5675fd88538b698b895c</anchor>
      <arglist>(bool dontCheckMusicalContext) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginEditing</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a588bdbfe82f2c60c51bec181c63fc4db</anchor>
      <arglist>(bool dontCheckMusicalContext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endEditing</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aebca067b4d36ae34e1e464baf693599e</anchor>
      <arglist>(bool dontCheckMusicalContext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a2ce6147bfbfa445cef44c9e340e990de</anchor>
      <arglist>(juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRestoringState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a8335741ce06f35a63db6180ff888b877</anchor>
      <arglist>(const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endRestoringState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a71649f72ecfbd09f1062001c1007a922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willCreatePlaybackRegionOnTrack</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a3e5d2363ef4524e00265ec3c41fd9ef2</anchor>
      <arglist>(Track *track)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willDestroyPlaybackRegionOnTrack</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a8cd9393a9d15f940d6b090e719eed48c</anchor>
      <arglist>(Track *track)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>accc6da280cdc6f60ac861200553c35f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARADocumentControllerInterface *</type>
      <name>dci</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>adc8483434966159b9e5554855f9cd701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocumentControllerRef</type>
      <name>dcRef</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>ac4ecbd3d352c0ec71c4402d9091f3981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; MusicalContextWrapper &gt;</type>
      <name>musicalContext</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a2ba4adbaf907fbf3865baba1e03105b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; Track *, std::unique_ptr&lt; RegionSequenceWrapper &gt; &gt;</type>
      <name>regionSequences</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aa880cbc473f88dd4640a7d31a6d9a366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; Track *, int &gt;</type>
      <name>regionSequencePlaybackRegionCount</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a9018a63f8df80e957a6a0709c9e3dd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::MemoryBlock &gt;</type>
      <name>lastArchiveState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a737e49adc3f68f12f06b75d918b7d7b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ARADocumentCreatorCallback</name>
    <filename>structARADocumentCreatorCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocumentCreatorCallback</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>ab2509e16a996a22f9858af996bcf685a</anchor>
      <arglist>(Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performAction</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a1ab0823a26a44a5aa4ddcd821a60f250</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ARADocumentCreatorCallback</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a308e6b78c0dea86b9228f80a9b015edc</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARADocument *</type>
      <name>perform</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>abff52e223c0cb8a9623387b7b4e84d12</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>ad5674141610c60f997a423851a478294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ARADocument &gt;</type>
      <name>result</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a9dfcd13a927dc092b1d0b12c2954c720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ARADocumentHolder</name>
    <filename>structtracktion__engine_1_1ARADocumentHolder.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocumentHolder</name>
      <anchorfile>structtracktion__engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>af5239922c634f0399f13e0efb0188f07</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ARADocumentHolder</name>
      <anchorfile>structtracktion__engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>ae22ddc30322d42c0c4f74452253d27d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>structtracktion__engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>ae2101223e78d11facd76cf230aa2074a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pimpl *</type>
      <name>getPimpl</name>
      <anchorfile>structtracktion__engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>a81a6da4964e140511c0b3fe5b00fe16d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArchivingFunctions</name>
    <filename>structArchivingFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static ARASize ARA_CALL</type>
      <name>getArchiveSize</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a2d023f993ec5668f3feed951b266151a</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveReaderHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>readBytesFromArchive</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>af37fdab382c7099f33f18a9461f07333</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveReaderHostRef ref, ARASize pos, ARASize length, ARAByte buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>writeBytesToArchive</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a3925dba173b6ad45770a1da2fd138c0e</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveWriterHostRef ref, ARASize position, ARASize length, const ARAByte buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyDocumentArchivingProgress</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a8515cc9a2fac40552094743c3f6f2680</anchor>
      <arglist>(ARAArchivingControllerHostRef, float p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyDocumentUnarchivingProgress</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a841d1b11b0e15bda5bfaa9cf1b365067</anchor>
      <arglist>(ARAArchivingControllerHostRef, float p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ArrangerClip</name>
    <filename>classtracktion__engine_1_1ArrangerClip.html</filename>
    <base>tracktion_engine::Clip</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ArrangerClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>ac6afda51c7c3f53deb8c69b7984f29dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrangerClip</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a6a71b75e14138902b51096bff315503e</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;targetTrack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrangerClip</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>aa8a8b1b86ae948fbe8da82a3ecbd9fcc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>afdb87698b92bbfa092c00d78dda2db0d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>ac0e2cd430840a06d2843b82d8bde86fc</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a11df240efa69ec5ca48a449eb60018f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a2b832d38aef2946c7a3e7b7ac1efcdb6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a17d53287d907a133786427e2f26133f6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a61384af872c5c5d8b09be1eb6591588d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ArrangerClip.html</anchorfile>
      <anchor>ac5e05619438e5177a59c382c4fb8fd44</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ArrangerTrack</name>
    <filename>classtracktion__engine_1_1ArrangerTrack.html</filename>
    <base>tracktion_engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>ArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a3fde43dbde1aab0ac1f7c4d9af39e06e</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a6a51d9c1eaefdd185abd33bd84305e78</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a9ce5a20ae3d1e86e2ed1730f5aed6f75</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a0aa68b99c419dba0ccc018de8132aaf4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>acbdbf539faa2e442776954240ded76d8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>af57ff8e5261e10756d677965686f1cec</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BreakpointOscillatorModifier::Assignment</name>
    <filename>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a7e8e7b5e358f134176391dd62a6482c1</anchor>
      <arglist>(const juce::ValueTree &amp;, const BreakpointOscillatorModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>ab2a9478a32392858b043139692282438</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; BreakpointOscillatorModifier &gt;</type>
      <name>getModifier</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a4fb8f5ca5cf1a6d70ed634fa811f2034</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>breakpointOscillatorModifierID</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a050349bbe82190b5a47c21f9375e2fe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::LFOModifier::Assignment</name>
    <filename>structtracktion__engine_1_1LFOModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a0cb384b6aa68cdce5cf636fb84f63c7d</anchor>
      <arglist>(const juce::ValueTree &amp;, const LFOModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>aa69daf51c3d96445526fbc700cef54e8</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; LFOModifier &gt;</type>
      <name>getLFOModifier</name>
      <anchorfile>structtracktion__engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>ac1a30d371a9259868bc871149e63db25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>lfoModifierID</name>
      <anchorfile>structtracktion__engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a5954b7055c0c3ef51916b27e4ee2f11e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MIDITrackerModifier::Assignment</name>
    <filename>structtracktion__engine_1_1MIDITrackerModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a847ae482a9900e0eba84c4a1c81a8cde</anchor>
      <arglist>(const juce::ValueTree &amp;, const MIDITrackerModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>af6f69b37975cdc8fed2de28fcf3c9eeb</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MIDITrackerModifier &gt;</type>
      <name>getMIDITrackerModifier</name>
      <anchorfile>structtracktion__engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a78b3ae43e8525effc85936c7e2699ca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>midiTrackerModifierID</name>
      <anchorfile>structtracktion__engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a70f84fea4a7726d23b3df3f85cceac91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EnvelopeFollowerModifier::Assignment</name>
    <filename>structtracktion__engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>aa753b4fa5af4bac029a615644b36e40a</anchor>
      <arglist>(const juce::ValueTree &amp;, const EnvelopeFollowerModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>a8bf442a775f45c6509aac242fbcbda59</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>EnvelopeFollowerModifier::Ptr</type>
      <name>getEnvelopeFollowerModifier</name>
      <anchorfile>structtracktion__engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>acdfdd9ab05dc9d5c538e0027f6ebd995</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>envelopeFollowerModifierID</name>
      <anchorfile>structtracktion__engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>a24ab000929e814c778a2a7e9c142ba59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::RandomModifier::Assignment</name>
    <filename>structtracktion__engine_1_1RandomModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>a88466dfd7d8cd808a8843e38754d9cf2</anchor>
      <arglist>(const juce::ValueTree &amp;, const RandomModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>afb3b68a6d3f69c905d95191827b2b0f6</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; RandomModifier &gt;</type>
      <name>getRandomModifier</name>
      <anchorfile>structtracktion__engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>a6ee7f4389f43fc87c8b5c941719a92c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>randomModifierID</name>
      <anchorfile>structtracktion__engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>aaa1748e05849de089cb51abf3d1417ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepModifier::Assignment</name>
    <filename>structtracktion__engine_1_1StepModifier_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a73c012973c57415866890b4306a88132</anchor>
      <arglist>(const juce::ValueTree &amp;, const StepModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a11a0d7ffa8ea075853c74566b3a40a7e</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; StepModifier &gt;</type>
      <name>getStepModifier</name>
      <anchorfile>structtracktion__engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a18b6decc81e749690a26437dd07eb6a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>stepModifierID</name>
      <anchorfile>structtracktion__engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a69b677d069b782b94bda9f5fbc3b46f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MacroParameter::Assignment</name>
    <filename>structtracktion__engine_1_1MacroParameter_1_1Assignment.html</filename>
    <base>tracktion_engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Assignment &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>ac7b11a109e8c52e1432620d77f4b6254</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>a155ca4fcc7f3dbd3ea8f576ae25eaa48</anchor>
      <arglist>(const juce::ValueTree &amp;, const MacroParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>a6db375695b80428d150f58b5ddc2c156</anchor>
      <arglist>(const AutomatableParameter::ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>macroParamID</name>
      <anchorfile>structtracktion__engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>ae052e1f11acc3cbe17a2a90615090939</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiAssignable::Assignment</name>
    <filename>structtracktion__engine_1_1MidiAssignable_1_1Assignment.html</filename>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>aa3d5fcd35f53418c90a6c3254356bcdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion__engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>a3511938257ad7e767093694f9501d628</anchor>
      <arglist>(juce::String n, CustomControlSurface::ActionID i)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>ac0d1b06094d911c8f104f4815042da6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CustomControlSurface::ActionID</type>
      <name>id</name>
      <anchorfile>structtracktion__engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>a28c24525fc2a6be87f74592ea73b607b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AsyncCaller</name>
    <filename>structtracktion__engine_1_1AsyncCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>AsyncCaller</name>
      <anchorfile>structtracktion__engine_1_1AsyncCaller.html</anchorfile>
      <anchor>a85a048a7ce5a15110da182a30af67881</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncCaller</name>
      <anchorfile>structtracktion__engine_1_1AsyncCaller.html</anchorfile>
      <anchor>a9ca481a3a8f7dc921cfd1aacd3a16bb2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFunction</name>
      <anchorfile>structtracktion__engine_1_1AsyncCaller.html</anchorfile>
      <anchor>adf0b841ac1da5c4a51395d7d53647aec</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>structtracktion__engine_1_1AsyncCaller.html</anchorfile>
      <anchor>accac15994021b67155351994cbb0a939</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>function</name>
      <anchorfile>structtracktion__engine_1_1AsyncCaller.html</anchorfile>
      <anchor>af4de0ebe75f042035091ecc158e2b0a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AsyncFunctionCaller</name>
    <filename>structtracktion__engine_1_1AsyncFunctionCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>AsyncFunctionCaller</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a72e1d0964038252b97dc388dbf5102ed</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncFunctionCaller</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a95b7826c438b39c21bd2fe002ee9a18e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFunction</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>abf3a92b57d4195ef341f6a287c06b981</anchor>
      <arglist>(int functionID, const std::function&lt; void()&gt; &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAsync</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>adc470e967cea81fd7995814cbcca7c69</anchor>
      <arglist>(int functionID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>ac1e23939f2ff06402ca911c80023ed0f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::pair&lt; bool, std::function&lt; void(void)&gt; &gt; &gt;</type>
      <name>functions</name>
      <anchorfile>structtracktion__engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>aef91c122700bcfd85e669a1b2b6d09b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::Node::AudioAndMidiBuffer</name>
    <filename>structtracktion__graph_1_1Node_1_1AudioAndMidiBuffer.html</filename>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>audio</name>
      <anchorfile>structtracktion__graph_1_1Node_1_1AudioAndMidiBuffer.html</anchorfile>
      <anchor>afe2d14708b8cd276b6ec0113d69fcf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::MidiMessageArray &amp;</type>
      <name>midi</name>
      <anchorfile>structtracktion__graph_1_1Node_1_1AudioAndMidiBuffer.html</anchorfile>
      <anchor>ad7f98a07c2cf70cee30a91a32a791742</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::AudioBufferPool</name>
    <filename>classtracktion__graph_1_1AudioBufferPool.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferPool</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a00684a36c06b35b710362807b9360a56</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioBufferPool</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>aba18e61e4d72c74f51b05d3c6b9d6389</anchor>
      <arglist>(size_t maxCapacity)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>allocate</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>adf53a873a6b2d4248170733f0dd63864</anchor>
      <arglist>(choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>release</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a448d814c612f5cafc92148ff4df0abaa</anchor>
      <arglist>(choc::buffer::ChannelArrayBuffer&lt; float &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>abcc01d118ce3881ce0ea81b5b82d21e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCapacity</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>aa1e11c1eb5b4cdd4a5cef8e1e78ee802</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCapacity</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a5660e97aea10feef4bf14d5f31b23d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a9784f02f4cc160aac5570d3de31578d6</anchor>
      <arglist>(size_t numBuffers, choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBuffers</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a409ebbd9f54e2d516c33c523539ae3bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedSize</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>abd011e966b6aa69354e957c66fb5e957</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioBufferSnapshot</name>
    <filename>classtracktion__engine_1_1AudioBufferSnapshot.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferSnapshot</name>
      <anchorfile>classtracktion__engine_1_1AudioBufferSnapshot.html</anchorfile>
      <anchor>a55ac34a86cc176f6ad80a5f8bcda035c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBufferBeenReallocated</name>
      <anchorfile>classtracktion__engine_1_1AudioBufferSnapshot.html</anchorfile>
      <anchor>abcfccb88fdfc62659cb8e5ee0599bab0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::AudioBufferStack</name>
    <filename>classtracktion__graph_1_1AudioBufferStack.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferStack</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a4a6b13001fcae55f34def546e0c69270</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>allocate</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a9d225063137fbdbfe85fd0256245ea40</anchor>
      <arglist>(choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a50ba8f6aee11905e2325b935ffac7457</anchor>
      <arglist>(choc::buffer::ChannelArrayBuffer&lt; float &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a19a30a3937e2c3fb34a4229d3a35948a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a63891af30a5eaa73a58096dc5cab9a2d</anchor>
      <arglist>(size_t numBuffers, choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBuffers</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a0b878908f9dbcd37a8a69edfe4ea0852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedSize</name>
      <anchorfile>classtracktion__graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a2d03cc4d0700cd7be509be3a5f43473b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioClipBase</name>
    <filename>classtracktion__engine_1_1AudioClipBase.html</filename>
    <base>tracktion_engine::Clip</base>
    <base>tracktion_engine::RenderManager::Job::Listener</base>
    <class kind="struct">tracktion_engine::AudioClipBase::ProxyRenderingInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>FadeBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78fd00ca9bc2d5291139eb2c7e6a2c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gainFade</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78fd00ca9bc2d5291139eb2c7e6a2c5baf7a04918139d777044b363d0d4f03b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>speedRamp</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78fd00ca9bc2d5291139eb2c7e6a2c5ba13f0777dd04846749edbf3b14e7e5764</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AutoPitchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2a43cdd5d8c05229e9022e54bddfc87035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackMono</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2aa9f73c7517c800d411d4d429c92aa455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackPoly</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2a61927a20cfb38bb45926e0bcb8d1a06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClipDirection</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aefcdf0f7f5a7488617d076e252d50977</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1AudioClipBase.html" anchor="aefcdf0f7f5a7488617d076e252d50977a2327346e833efcd6b2e7b3f0a4df8ebb">previous</enumvalue>
      <enumvalue file="classtracktion__engine_1_1AudioClipBase.html" anchor="aefcdf0f7f5a7488617d076e252d50977ad0cab90d8d20d57e2f2b9be52f7dd25d">next</enumvalue>
      <enumvalue file="classtracktion__engine_1_1AudioClipBase.html" anchor="aefcdf0f7f5a7488617d076e252d50977a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>gainFade</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78fd00ca9bc2d5291139eb2c7e6a2c5baf7a04918139d777044b363d0d4f03b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>speedRamp</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78fd00ca9bc2d5291139eb2c7e6a2c5ba13f0777dd04846749edbf3b14e7e5764</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2a43cdd5d8c05229e9022e54bddfc87035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackMono</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2aa9f73c7517c800d411d4d429c92aa455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackPoly</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac20417b07330bef03b6964ebac70ecc2a61927a20cfb38bb45926e0bcb8d1a06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioClipBase</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abd843488d0388d85c3bbefd356e39033</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, Type, ClipTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioClipBase</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af20a35adcda3452e612020c8761730c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumLength</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab3f52e261752a5268391cf9f415b9a27</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab88fee5fc8179b35f1241ecb707ea970</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a15087d207357bb93e29079757054a3cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getPlaybackFile</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acc77b644b55aa1e9f2be1d36805859e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a98a942c4418fbd0a7ec0cd6b558b2e85</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8ab498d1273420080e9d6a2dcce55b47</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AudioFileInfo</type>
      <name>getWaveInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab8875b4bdb3255e8fd9b18a67ef6ed7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsDirty</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae85faab9cb0b6c679041c98058e51fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSourceFile</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a751b4e5310c05182a85f60a38335e028</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a823440fa017a0aadb2148063d3c4f97e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af0cdac4227d3c41568940242ea3b24e0</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af43abe89e451bf53cd176badd69bbded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a562c2578def456dffd08defca0208c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getClipMessage</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a18123204b0483fc5c42f738cd1abd440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelCurrentRender</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2a2ee2fc8fb350f1f942b636047e4ad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGainDB</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aad0f1b0d989b97f470af038e67a2f4a0</anchor>
      <arglist>(float dB)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainDB</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a05f75b7fa770589581deb8e564e925b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGain</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ade6c6342138eb26b16e2d88e1c308d4c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a92e49c361923d3612e6d6f0eb0a94b60</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afceaf3bbadf3f64193ee8ab2b3529870</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5ea4d8c1441eaeb2e067ac77e80e3e35</anchor>
      <arglist>(bool shouldBeMuted) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9ba75fab6608bea1f22d6fb3a7912b93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af3655c30a3cb903568cfa80c3d5831ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftChannelActive</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aad618f82d0b3473ef44eb3606faaddbf</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeftChannelActive</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac08f8d0b71b9639aac025208ad2cb315</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightChannelActive</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad3bbec33d3feabefd186e1e72caf03ef</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRightChannelActive</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa86f029e3c2b3a33c7d428a6df46da78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>getActiveChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0c4f97f268bb79b2ce4898a59b9cdeb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFadeIn</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a84b03ca747e0ded86e1904f96b73224a</anchor>
      <arglist>(double length)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFadeIn</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a43da326f4d4a8ffed9a63f6408d9b5f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFadeOut</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaaa6af5df3a2f699969f0cf7466e3c7d</anchor>
      <arglist>(double length)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFadeOut</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a97523112eee87ba6324ecb224377b2c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeInType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8498731670ccd9a1c397138a57d59cda</anchor>
      <arglist>(AudioFadeCurve::Type)</arglist>
    </member>
    <member kind="function">
      <type>AudioFadeCurve::Type</type>
      <name>getFadeInType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6c441ededf06c34316cd8da0b4b2788f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOutType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac79f7f25df511b07f13af375842a9cd7</anchor>
      <arglist>(AudioFadeCurve::Type newType)</arglist>
    </member>
    <member kind="function">
      <type>AudioFadeCurve::Type</type>
      <name>getFadeOutType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1feeec679d4d883370937242544b62fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoCrossfade</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a067257b55ebc574f33658e98d2f20926</anchor>
      <arglist>(bool shouldAutoCrossfade)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoCrossfade</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ade28ccc6c5011bdee24e13f2ccc76dda</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutoCrossfadesAsync</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a41ad5804f875efd2f6b09e6bd62bb47f</anchor>
      <arglist>(bool updateOverlapped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEdgeFades</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9ab08bd44503cb2dcdcec0bae4428608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFadeToAutomation</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa8b5db06cd0e32f1faf00e966dae0ce0</anchor>
      <arglist>(bool fadeIn, bool removeClipFade)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeInBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0e106b12d4ecdd54a16aabe212f2ec1e</anchor>
      <arglist>(FadeBehaviour newBehaviour)</arglist>
    </member>
    <member kind="function">
      <type>FadeBehaviour</type>
      <name>getFadeInBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3f944a12a6583c4014cddcad3ed09f10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOutBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a97d0631293659d54e7b8228fa5eee77b</anchor>
      <arglist>(FadeBehaviour newBehaviour)</arglist>
    </member>
    <member kind="function">
      <type>FadeBehaviour</type>
      <name>getFadeOutBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5e2d3264eeaee0ae34bc4a1b4da27e4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1656650006886683d0b4d64f5138ff33</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa9e811b9b1d4a4da69baf8b53e68d43f</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const LoopInfo &amp;</type>
      <name>getLoopInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae2e11bd648326cf2b71dbf332317ca57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo &amp;</type>
      <name>getLoopInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a30d6abb878e001795af6ab6a11c85511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9c6216b0aaec3f1489f6177a87947af9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad560da92a6da67e3683ee44cfd6ad21b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a891d8c9db955898c3d97ed97041d8f7c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0fc23caad504dd41c0f27799a25112de</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a750aba72aa7e1d2f1cf99b2172938db4</anchor>
      <arglist>(int num) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02cefa6baa0ca04c377060ca6c9d3550</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7e15e2776035c4d5b7abdca585faa1a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af5f47e8836c1e7835209c981d109f3af</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0738e5c93e96cba2f5661cecbccd10dc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a714a97f8f58fc00364fac379ba20ab93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9f7e931da1d751946b6c024323c27822</anchor>
      <arglist>(EditTimeRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7a5b425c50e3f57258428117a81ac49a</anchor>
      <arglist>(juce::Range&lt; double &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoDetectBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aadeb64595e7905421bd290f606f49db8</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoDetectBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4ce9450a39233499acb240184842aac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatSensitivity</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0692a78ad0ca87ed2d7252f43549848a</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getBeatSensitivity</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a52009c8b3b38fa96e55f2e4e1fc39531</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af00efd08718e1b9c923597b34ec5ff1d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeedRatio</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afc2db1decf20044a33f256031451df6a</anchor>
      <arglist>(double newSpeed) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStretchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2a0e55cdcd2a05b2161de3e173d1a205</anchor>
      <arglist>(TimeStretcher::Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>TimeStretcher::Mode</type>
      <name>getTimeStretchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a21d9fb64a3a5eb1032ba154bc764a340</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeStretcher::Mode</type>
      <name>getActualTimeStretchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af64748fe4315531f4af9f5ee918f22da</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoTempo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad924321d30a20a1544b720f665e70962</anchor>
      <arglist>(bool shouldUseAutoTempo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a475d06d0967f51176f8c3681f4069a8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPitch</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a88f959ac3651bf626120c1b5137c9ba7</anchor>
      <arglist>(bool shouldUseAutoPitch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoPitch</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>adc9c8adb3309d61143ee46bb3031e38b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPitchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a005256536c0e3932773e7f2031b95704</anchor>
      <arglist>(AutoPitchMode m)</arglist>
    </member>
    <member kind="function">
      <type>AutoPitchMode</type>
      <name>getAutoPitchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a07c835bd93b646b2a51ad5b6cb0dd2ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarpTime</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>accb12426d57068ef9bef3dad503a2178</anchor>
      <arglist>(bool shouldUseWarpTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getWarpTime</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6fbd13525ad6d924c6b7cb9e85934dfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeManager &amp;</type>
      <name>getWarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad97cda9ea26b820bcc955c4128647f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranspose</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae8dc72d9a09ff1ac30ea113d264acb8c</anchor>
      <arglist>(int numSemitones)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransposeSemiTones</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>adcef6a9e7c5caf1655b0028e6727bc61</anchor>
      <arglist>(bool includeAutoPitch) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitchChange</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af77b31419747a4a9a930030952ec6ea4</anchor>
      <arglist>(float semitones)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPitchChange</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3607a14295f4f8fb7207ad0215b49529</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPitchRatio</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad90e87b6b12530e9ae31539f259deb77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsReversed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3bdd8b75be721c779371dc6a789068ab</anchor>
      <arglist>(bool shouldBeReversed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsReversed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aef008645d4a90d5c5e58e956410e3d58</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo</type>
      <name>autoDetectBeatMarkers</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a637f9afa417272c7169049000d41af3d</anchor>
      <arglist>(const LoopInfo &amp;current, bool autoBeat, float sensitivity) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performTempoDetect</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2d637b052ce48c5f8b03971bdf53f344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPitchChoices</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2a0b06e363eeb767a6990bef64b4218c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHaveEffects</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae7cec8d96bb3a67bb353b8d8aea1cfdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableEffects</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6951ea46df1de8f74cc6c7046c5b0594</anchor>
      <arglist>(bool enable, bool warn)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>effectsEnabled</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa740cb8635bc3f9b29454d9862cc2a54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEffect</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a681e03f80131dcbee512ffc42352b5de</anchor>
      <arglist>(const juce::ValueTree &amp;effectsTree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEffectsVisible</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae523d534d278010f840c2d8e5b94ad92</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEffectsVisible</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a56db3a8a48cfa76faef511115b56928e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffects *</type>
      <name>getClipEffects</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af9e8134d98cb38cacb39a35a1511e901</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSnapToOriginalBWavTime</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a638766393c2d5ac634b108c96295d045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToOriginalBWavTime</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a58a62ba403dabaa2f3346793d8001f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; ProjectItemID &gt;</type>
      <name>getTakes</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af1dde7f4fa3c42c4ad628962110fd17a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>canAddClipPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2c854f726c1e986a4892db4e54bb42c6</anchor>
      <arglist>(const Plugin::Ptr &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5fd231a10c3241037802d16dd7af31f8</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getProxyFileToCreate</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1bf481818f9a2278b683a2ceb3756df9</anchor>
      <arglist>(bool renderTimestretched)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7efbcb2e3bb0cbbb06fa4debcb45e130</anchor>
      <arglist>(bool canUseProxy) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canUseProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1ff387b65aa267daf6d269fea33cf47e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesTimeStretchedProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a18fc98efb3df10920826ec4d5d06850d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ProxyRenderingInfo &gt;</type>
      <name>createProxyRenderingInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af314fc6bac7ad1c09d991062f344c9be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getProxyHash</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a22631e95ae1a24852cc28624a4b762d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRenderingNewProxyIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa05072aad530526e425fe88aa61e5a53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesTimestretchedPreview</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6ff01519ccae8c40da11663370a523e4</anchor>
      <arglist>(bool shouldUsePreview) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesTimestretchedPreview</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae639e6b677c69a8d7c7d27013194bfcc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverseLoopPoints</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af1d212edb8777ed70641054927499b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFadeLengthsForOverrun</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6964064211aa6fb34b830689c1cb727f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioClipBase *</type>
      <name>getOverlappingClip</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7cbfc283a35c4399c4a771ffee7a6654</anchor>
      <arglist>(ClipDirection) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingMelodyne</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aba23ba024e6bc17c6444dc78009b1c1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMelodyneWindow</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acedd981d07d03d9fcc35b73ca9c25f9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideMelodyneWindow</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a08b7887e7ae59802ae4160bf6faae515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>melodyneConvertToMIDI</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aad98b7c3f2c3b1ad4b79460d250cca31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadMelodyneState</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a414e0aacc67817487a0572e7ae705015</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupARA</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2215b53e2affacaf8644c80501366683</anchor>
      <arglist>(bool dontPopupErrorMessages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5129c1ddbba0cc168b5cecce3a996dc9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a32d93c6e3b7adfe8790cc9d38b6d34f1</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a66a62fa0e7a1e8a8450737b17de605d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaf25bd201a6ea0ad95d5ab77c92f883f</anchor>
      <arglist>(ClipTrack *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aff4196dbce21f54c78b6ff88bd1367ff</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2c1d63378d7849e9a4e31ae3a17fb61b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a562f13605d0690e01ca635d64b2cb691</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2d5633572c846bb8ffa4ede94c74c0d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMark</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0e70180ce331fc4993359c9d0bad44ec</anchor>
      <arglist>(double relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMarkTo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa708fd91c74c8f611879b7c7dd470343</anchor>
      <arglist>(double relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteMark</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5e0a933adfee3e2c1a90030151761ed8</anchor>
      <arglist>(double relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7bdb033b80a2ce9c15faad47c3939118</anchor>
      <arglist>(juce::Array&lt; double &gt; &amp;rescaled, juce::Array&lt; int &gt; &amp;orig) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; double &gt;</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afc2bf2fddbcfa0308c6955ec3d60270b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3241aafc84ca410c080963582d28ac0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afa53c0c388d82f8b3c8c385e83118347</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addClipPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae2befdc6a23c76bd0af5c0a73f25434d</anchor>
      <arglist>(const Plugin::Ptr &amp;, SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa3d717074472c1e0dc69785bb4c98637</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6429b5f8db7f56ec428d27463a6b43b5</anchor>
      <arglist>(Plugin &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>PluginList *</type>
      <name>getPluginList</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aff0d3414b36b32a1074b0f6f20591dfc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getRootNoteChoices</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ade98ddc4f79a3871498b737a55a23c65</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; MelodyneFileReader &gt;</type>
      <name>melodyneProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad99634c0473d84dae2e9b2fd5429a0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeStretcher::ElastiqueProOptions &gt;</type>
      <name>elastiqueProOptions</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab6f7a007d754343c04f92d49878cb922</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLeftRightChannelActivenessFlags</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab5d1f218f9cc0f72945cfdce75a87222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createNewProxyAsync</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a620f30c600051db426ca7f6d6090c8ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a82235fb785ff807cf872c314600910e2</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9642f4a207a0975363c334efafc54086</anchor>
      <arglist>(juce::ValueTree &amp;parent, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2f77a2c2923b71259dd1f5cf939b38b8</anchor>
      <arglist>(juce::ValueTree &amp;parent, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7e241cc560f85ea383a3aa16fa1a2fd2</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a14f73dfdeb29007d2bbbdf6a0e4c3f5c</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ClipLevel &gt;</type>
      <name>level</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7a52f47e86d9b78623ca9659405b41a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>channels</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1c730dc4ed3eb1b0b60bf7891e205093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>fadeIn</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8b5557eda9175256adb29908db61afa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>fadeOut</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af1586d367b2654ee899bd455171993dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>autoFadeIn</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab189cb0e856080a75ff26d8cfb803c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>autoFadeOut</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a426d168860c3a819d384212578488d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeInType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af7e5f5d5652a91d7c493417ae1566c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeOutType</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a694af8d2e3ccbfae40435fa1dc62d291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoCrossfade</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac4e578e62e68f235bed6555ac06f4d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; FadeBehaviour &gt;</type>
      <name>fadeInBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaa6faea8d7ba353d38d64da536669c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; FadeBehaviour &gt;</type>
      <name>fadeOutBehaviour</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a135ee8f77d8b76f382db79784061d799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopStart</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a69d0abef335589817816bd61a449a621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopLength</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5da4bcb3f07b64ce7c5679979aaaec2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopStartBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7baf69b80021acd23e7f4d9fad159e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a37a3e935f35ee487be8ac698a985431a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>transpose</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4ed2367512192cc8d673e74161053ae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pitchChange</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a97fa670bd402ccbc9a0b123f88ce0da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LoopInfo</type>
      <name>loopInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa1a4f19f5ea23f836fc340160e563fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>beatSensitivity</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab21c575056c3ef8c5f15f0988327b6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeStretcher::Mode &gt;</type>
      <name>timeStretchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a408a81963eabf96db5b0d3609d1931af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoPitch</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abcd7b7856b718a32b3abe88222299f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoTempo</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a104afd97d1bd620ca87e28bed01e5665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>isReversed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a51c696e8ae8ec85b48f536766b395c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoDetectBeats</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a338f1c7e3db8db35c9677b8f773ef0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>warpTime</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abd70de14b600e08010b315ab1c981b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clipEffectsVisible</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2096be77555c4b9229ddfab0e9c34eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AutoPitchMode &gt;</type>
      <name>autoPitchMode</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a405c717dbe6e9cab46acde75539e0be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WarpTimeManager::Ptr</type>
      <name>warpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af432320997166906e6843645218aa28c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>audioSegmentList</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa06431ea800fcabc894b8f266bee6f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ClipEffects &gt;</type>
      <name>clipEffects</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0dac049b8bf22a69983b15660f7f2adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AsyncFunctionCaller</type>
      <name>asyncFunctionCaller</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a81974edb278071d6b6c97ce5641a41fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::AudioChannelSet</type>
      <name>activeChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aff892c16611f25b588b3f76750bc45e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>proxyAllowed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5543af8117cde7e42e4f8dcda23d66c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTimestretchedPreview</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5889cdbf709f9abe22f5f6929c12a003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PluginList</type>
      <name>pluginList</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a53474d3ab307107093b52a11b2faebb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lastRenderJobFailed</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2b3fd57f95fa7a23dabb367e8823b420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RenderManager::Job::Ptr</type>
      <name>renderJob</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4e7c5f13336a69c4b6b77c34eb59bdcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AudioFile</type>
      <name>lastProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a81c8dcefabbda09c01cfeccf5fc05e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>WaveCompManager</name>
      <anchorfile>classtracktion__engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a665c5653caf7bc08cf4a3e16cbc597fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve.html</filename>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Concave</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Convex</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::CrossfadeLevels</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::Linear</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve::SCurve</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>linear</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfa5ce6631315202e24a22dcc244dd7c79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>convex</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfabb10c692f9b08d652abc2c9f3d7ba25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>concave</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfaafa53db69a0e201dbc9e8c7e73b789cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sCurve</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfa18d95cd29363a2a67a21699773cf174a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>linear</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfa5ce6631315202e24a22dcc244dd7c79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>convex</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfabb10c692f9b08d652abc2c9f3d7ba25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>concave</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfaafa53db69a0e201dbc9e8c7e73b789cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sCurve</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a85055f523d4fb0f6de1de0c687eb46dfa18d95cd29363a2a67a21699773cf174a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>alphaToGain</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a69bd448a892bd2df455581a15c5dcbcf</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>alphaToGainForType</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>afc6502c91317ab4de14973fcd9b5c772</anchor>
      <arglist>(Type type, float alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renderBlock</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a9303084b7ddb2cb56b39583348ea8c67</anchor>
      <arglist>(DestSamplePointer &amp;dest, int numSamples, float startAlpha, float endAlpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renderBlockForType</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a02fa1368d5843e67f5ebeb2728b5df94</anchor>
      <arglist>(DestSamplePointer &amp;dest, int numSamples, float startAlpha, float endAlpha, Type type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyCrossfadeSection</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a3a5d244368d9c7480db14b8cbe7d1c8c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int channel, int startSample, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyCrossfadeSection</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>af4e646ad52d92016222b2b2c2028ca41</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addWithCrossfade</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a7919b3fc2f6524e81d955d887c89519b</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, const juce::AudioBuffer&lt; float &gt; &amp;src, int destChannel, int destStartIndex, int sourceChannel, int sourceStartIndex, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawFadeCurve</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>ad37cf735312f2d2bada4348b976881fb</anchor>
      <arglist>(juce::Graphics &amp;, const AudioFadeCurve::Type, float x1, float x2, float top, float bottom, juce::Rectangle&lt; int &gt; clip)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFifo</name>
    <filename>classtracktion__engine_1_1AudioFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFifo</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a0f57c0f7acdfff017c694e4a82f6aeec</anchor>
      <arglist>(int channels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>addacad5ca2d95699a609c8d384fca4ea</anchor>
      <arglist>(int numChannels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFreeSpace</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a6bac6e48482a7aa10f80a61ec64260ae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumReady</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a0b7124276b4a094c7037b5a10e5f56bc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a1105ac6c1cbd759ec253f53eb22f08a6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a1293b7894524e3cb20a1f53168ca72e7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureFreeSpace</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>adda062ba01c551a8268a53b1de1fef92</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a871b3172965d0faab9af9cb61fe31837</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>abe752280d48d3d213ae77db769e02b02</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;src, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a55ac01acd00854c2dc6ff594fa2fc474</anchor>
      <arglist>(const float *const *data, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>aefcd0e6aaedc82037ab0ffbc6b85562f</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a25b29bb792b308cd447a702cf61f89c1</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a1687b8f3264b041f79327f519669376d</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a22ef06d29054503ab2bfcc9ebd7de04d</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion__engine_1_1AudioFifo.html</anchorfile>
      <anchor>a65029b42ec2b55e82f1aaa3618ef223c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::AudioFifo</name>
    <filename>classtracktion__graph_1_1AudioFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFifo</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a0ac8067579acf4594fe8f1ff880e6a47</anchor>
      <arglist>(choc::buffer::ChannelCount numChannels, choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>ac8cb51227f0088991762df7201af9043</anchor>
      <arglist>(choc::buffer::ChannelCount numChannels, choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFreeSpace</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a7aa7c4eb64ad54d847fb4234e88d6993</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumReady</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a0aea03dc987c68ecc313a8ba386404e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelCount</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a081275aaca600c9cb55274ce5fd0e329</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a93a753f2d5524d66a25394d4177115c0</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureFreeSpace</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a3948016c1ea0c3a827d20e53c0657c6d</anchor>
      <arglist>(int numFrames)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a6e70bf3c563702fc92db4f6bb3f27173</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; block)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a855ba9959ca37d48fedb2c6dffec5881</anchor>
      <arglist>(choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a2b1a6241a2738598d411ba4a120a4b3f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readOverwriting</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a5657648c0b741caf7d5932697e139187</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSamples</name>
      <anchorfile>classtracktion__graph_1_1AudioFifo.html</anchorfile>
      <anchor>a76be18bb53b26279f141553416930686</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFile</name>
    <filename>classtracktion__engine_1_1AudioFile.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>aa36ad29d03018627b7a24b2523ff9597</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a0b62f58275c9353d221e114e62bbcc69</anchor>
      <arglist>(Engine &amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a906450492288edb9554dae0e2f25d7ab</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a758b3d0c70d0a47dc896361840fa3782</anchor>
      <arglist>(const AudioFile &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioFile &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a9359eba62debbfd6c68e03ce2787e5a4</anchor>
      <arglist>(const AudioFile &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a28d67e651f0e92a31eb7def13940fb69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a36ffc9f671ad11f6fb556802512f3c47</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a0bbb8a8167ddc18edd0cc3521d93d034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getHashString</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>ae198a8ab872d774bac33df211874b52a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a70feec737b9b504b1ac9bf329e2df64a</anchor>
      <arglist>(const AudioFile &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a2b9400cfd5d61b4b1dd0a9493f08b16e</anchor>
      <arglist>(const AudioFile &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a6491cdf1092ce63a291db9736cca99f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrash</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>add8b63d0f8c6c2693fada32431cbe62f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>aa1c39614bcc16f5d0f4688a8ca792591</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>af9362eb75f53ae0df31f921deba28a02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a06b9d0424dc2b11be738f90fd55634d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getLengthInSamples</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a5623bba504c83ef50e08a76337375878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a553037d3cbe20dca0e9c95e8f3d9d19d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a3e314f8f5c107006afe76299d827a8b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a27e3970856cfc405da077c0f2881e56c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitsPerSample</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a4989ff6f2a0e88c61f2952b400ea34cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFloatingPoint</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a17bfb4b8fe2dfd4633a8829a5b55641e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringPairArray</type>
      <name>getMetadata</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a7a7e0b10a958cba6e8e1851e072e541e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>ab5f959f3d26a2109d22cc5224130d6d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWavFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a6c298fa1ef01ef5431de3790077b2954</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAiffFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>aabed96a42ced96780f91663d15f8c0ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOggFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a71c6c90b46e99e3308a6c707b62f2f81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMp3File</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a4bdb0d05951f4de7bbb012bf335063c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFlacFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>ad59aa7d472249109fd52ff27e63c3413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRexFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a42a44de6fdef3b1cea9c807c62fec2bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>deleteFiles</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>ac1778bbe45b1a832b12ba7c5c1585df5</anchor>
      <arglist>(Engine &amp;, const juce::Array&lt; juce::File &gt; &amp;files)</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1AudioFile.html</anchorfile>
      <anchor>a0105c0075372b8917acf730f443dee37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileCache</name>
    <filename>classtracktion__engine_1_1AudioFileCache.html</filename>
    <class kind="class">tracktion_engine::AudioFileCache::Reader</class>
    <member kind="function">
      <type></type>
      <name>AudioFileCache</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a0d15990789eb32f1c8b3aa3469df8fc6</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileCache</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a63d12486790c6db25d7b79d532d996c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Reader::Ptr</type>
      <name>createReader</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a2b34cd25c36cb5383324700da353f2d9</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheSizeSamples</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a2362d3f2104cc7d532b9602fe4086f91</anchor>
      <arglist>(SampleCount samplesPerFile)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getCacheSizeSamples</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>abf706f30650c5fd52e8fe4991edd93f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getBytesInUse</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a80491963c3d4a8d7e176c268fc961c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCacheMissed</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>aee52f82dbb0f847320ce77209c101f71</anchor>
      <arglist>(bool clearMissedFlag)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>ae85679099a06dc0c1a4ad30251500b61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AudioFileManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache.html</anchorfile>
      <anchor>ad44ecfb19d676832e3346150091b1e02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileFormatManager</name>
    <filename>classtracktion__engine_1_1AudioFileFormatManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileFormatManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a15b08fd2da30707bfeea768516bbcc98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileFormatManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a67f5fd5b5b03ca68d9b56dfe94ede0a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; juce::AudioFormat * &gt; &amp;</type>
      <name>getWriteFormats</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a6d0910f9832c8b6cc40b3aa81506c68f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLameFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a26baee7514a1be27665dad05ebfe7529</anchor>
      <arglist>(std::unique_ptr&lt; juce::AudioFormat &gt; lameForArray, std::unique_ptr&lt; juce::AudioFormat &gt; lameForAccess)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ac61adf096459e14842e23cc6e8835c9b</anchor>
      <arglist>(std::function&lt; juce::AudioFormat *()&gt; formatCreator, bool isWritable, bool isMemoryMappable)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFormatFromFileName</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a98f4cb2ec488a35340901cbf954c9db2</anchor>
      <arglist>(const juce::File &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getNamedFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a6ef9063cbfb9cd87d712e46b98f76711</anchor>
      <arglist>(const juce::String &amp;formatName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canOpen</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ab98c2a48f046114a77c0364c1fa97f40</anchor>
      <arglist>(const juce::File &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getValidFileExtensions</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ae49110fb4f48137179beef463d6e8a09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getDefaultFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a3c188f0fb75a7b57f36434f63d439b8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getWavFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ad56684622c69a80ee2b21008e2f07fa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getAiffFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>aa612ee1c54c0e564fee2d0f129ef153f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFrozenFileFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a5265b415679336898ca1bae87fd4fa50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getOggFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ae7acd85cdd002900b6dc8bea0ae2131b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFlacFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a5cdae02237226d5e0669b9d8c1149d58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getNativeAudioFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a7fc0c6ef5f41fa4993ede41db32ed4c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getLameFormat</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a874ed0e0024da2fb43d7b27cba7b0b83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>readFormatManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a6cd31980361e848e395b6a99140f0fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>writeFormatManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a2bbf40c91b78fab0fefd0d409a434634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>memoryMappedFormatManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ac83fd201b879fbebb279de89867ae223</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFileInfo</name>
    <filename>structtracktion__engine_1_1AudioFileInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileInfo</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a4b91f97a9d0134865437a75b6735a65b</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFileInfo</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a27c7f6c9eef701b6e09758bccd72027b</anchor>
      <arglist>(const AudioFile &amp;, juce::AudioFormatReader *, juce::AudioFormat *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthInSeconds</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>ab16ab9f85852458c2bb7ff84b86e0497</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLongDescription</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>af01f261d265629b325ec00af2c157002</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFileInfo</type>
      <name>parse</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a4523ebc177889c22516f56de115831d8</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a7f8252a625f25672d20e89743b752fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasParsedOk</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a6b9ff6bf7a2efffb67f299abe594f9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashCode</type>
      <name>hashCode</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a471ed939e11853dc51220380a6b8a666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormat *</type>
      <name>format</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a123fa404540414afbbb2ca7202a74616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>aeed5f16cd7c3becbf408745c7640baac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>lengthInSamples</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>ab8230c3e40fbf00c5df12155a371b4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numChannels</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a34647d86f4cd2920e06b832e5e8104fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bitsPerSample</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>ab7d12223a7decc38be90fc47fafbe3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isFloatingPoint</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>af2e71d0dcc9eb991315627f1800efc16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsCachedProxy</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a4ed5329f0fb40bcdc4592ce281a044a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringPairArray</type>
      <name>metadata</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a259cff981a903e91607008125c3fa22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Time</type>
      <name>fileModificationTime</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>aa2a45da48d16de4ec0d1f37444b8612d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoopInfo</type>
      <name>loopInfo</name>
      <anchorfile>structtracktion__engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>af3cb9dd2d2e952583b63bc93077db4e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileManager</name>
    <filename>classtracktion__engine_1_1AudioFileManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ad48720ea745a0b5011c2db980c318816</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileManager</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>af16c8d2458f2cf02b6379cddc0235888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ad193c54ac0c81f8d57375598a3209296</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getInfo</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a42d38a41443388317257d8dc949589e6</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFileForChangesAsync</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a81c416467f5556df795ea5e126d27aef</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFileForChanges</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a46b23aa545c42fd8b0138beda60bd17e</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFilesForChanges</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ae8390e86d5649d17a317426bddb144de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceFileUpdate</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a7e0423ecd8dbae9e6254f408b0b3041b</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a01f43846b4b9dddfbf0a82fcb58ac1ab</anchor>
      <arglist>(const AudioFile &amp;, bool updateInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseFile</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ac93157da7a6c8dd9f96a39bf2ecfdf05</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAllFiles</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ac4ac984fa5c0899d98a31d9c0a5db263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioThumbnailCache &amp;</type>
      <name>getAudioThumbnailCache</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a44831b33482690cb28868b27e0bfb474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ae261ac494208b784b4e7a93deff27968</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioProxyGenerator</type>
      <name>proxyGenerator</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>acac1d83b9a665995edb8416a79686e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFileCache</type>
      <name>cache</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a9b3d0891b06234050bd52feac611a40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SmartThumbnail</name>
      <anchorfile>classtracktion__engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a165e166aa555079606df673362725cc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFileUtils</name>
    <filename>structtracktion__engine_1_1AudioFileUtils.html</filename>
    <class kind="class">tracktion_engine::AudioFileUtils::EnvelopeFollower</class>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatReader *</type>
      <name>createReaderFor</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ae173c0a95c2958d222ecc60b8010477d</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatReader *</type>
      <name>createReaderFindingFormat</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a536a64ce584f42ff59d1453d8622e4d0</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, juce::AudioFormat *&amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::MemoryMappedAudioFormatReader *</type>
      <name>createMemoryMappedReader</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>adc0b094323d5ae3084bb8232b643d96e</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, juce::AudioFormat *&amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a2ff5ffa70a526b26e6984f7f35df6768</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a87451be69a66120bef012c66345e61f0</anchor>
      <arglist>(juce::AudioFormat *, const juce::File &amp;, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>scanForNonZeroSamples</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>aa9906678fb8236fa3dbd7b87c49a838f</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>copyNonSilentSectionToNewFile</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a8c23db27367e9a3779fe3765840228a4</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;sourceFile, const juce::File &amp;destFile, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>trimSilence</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a10d57359b2dfe5ba62f79c258996a3d4</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>reverse</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a8fdfd2aaf008b95b601b99b59ec0bd42</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;source, const juce::File &amp;destination, std::atomic&lt; float &gt; &amp;progress, juce::ThreadPoolJob *job=nullptr, bool canCreateWavIntermediate=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>copySectionToNewFile</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ad0a9e8141729b0d41c7e59cd72ba024c</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, const juce::File &amp;destFile, SampleRange range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>copySectionToNewFile</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a454f23e2c1ab0534d6465e2f62fb164c</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, const juce::File &amp;destFile, EditTimeRange range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBWAVStartToMetadata</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a07d7c856c03abc67893d6bc420eb0284</anchor>
      <arglist>(juce::StringPairArray &amp;metadata, SampleCount start)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyBWAVStartTime</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>af8c0c732637c76af1bb2e04849db8afe</anchor>
      <arglist>(const juce::File &amp;, SampleCount start)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>getFileLengthSamples</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a5992c313788facc019552a08cfdaf521</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertToFormat</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ac7545174a04d02e2a50a733d1b7ae20d</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, juce::OutputStream &amp;destStream, int quality, const juce::StringPairArray &amp;metadata)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertToFormat</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>acea794b6d34745cce6b658ad15c51bed</anchor>
      <arglist>(juce::AudioFormatReader *reader, juce::OutputStream &amp;destStream, int quality, const juce::StringPairArray &amp;metadata)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readFromFormat</name>
      <anchorfile>structtracktion__engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a6108cddcf54bfcffdcea2c6e04ebfcf1</anchor>
      <arglist>(Engine &amp;engine, juce::InputStream &amp;source, const juce::File &amp;dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileWriter</name>
    <filename>classtracktion__engine_1_1AudioFileWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileWriter</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a2bbf15b7f914e964a3bc4000ff387dd8</anchor>
      <arglist>(const AudioFile &amp;file, juce::AudioFormat *formatToUse, int numChannels, double sampleRate, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileWriter</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a6135859648b50bd55f80221cf15904f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>af6614c480d5c308e6d708173010dac35</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a6822ebb63c6b1f68a10ebc02634dd692</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>af8e0d81e014e565b5c3fdfb78a13c392</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendBuffer</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a9309654394dc05691714515cfb2fcef6</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendBuffer</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>aff6554e72d64c153a054dba03265831d</anchor>
      <arglist>(const int **buffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFromAudioReader</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>aa48f12cc5c2bae4900411b1d295649b1</anchor>
      <arglist>(juce::AudioFormatReader &amp;, SampleCount startSample, SampleCount numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeForWriting</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a735c6942449dd6d8d13049d847a1e0d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>file</name>
      <anchorfile>classtracktion__engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a4c6d826cf519c728a436112518f0de62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioMidiFifo</name>
    <filename>classtracktion__engine_1_1AudioMidiFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioMidiFifo</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a374e8a947546239e62b82a06ba33f69c</anchor>
      <arglist>(int channels=2, int maxSize=1024)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a95d36040b6e33b634bccdf829fee3a97</anchor>
      <arglist>(int channels, int maxSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a4596b834c373423d5019010bc8c682fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamplesAvailable</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>ae763dc68994e086070a017d0718608c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamplesFree</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a6ff768cd01818daf7324cc4d2234f154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a6cdf97be76d0e0576bb5ec41be320003</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAudioAndMidi</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a382b0f91fd0312118206d434d77376f6</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;audioSrc, const juce::MidiBuffer &amp;midiSrc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioAndMidi</name>
      <anchorfile>classtracktion__engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>af2d207ea1402214605ff0e1513c9a1a9</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;audioDst, juce::MidiBuffer &amp;midiDst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioModificationWrapper</name>
    <filename>classAudioModificationWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioModificationWrapper</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>ab8e025764ef18f2e0e5bc04a544cb821</anchor>
      <arglist>(ARADocument &amp;d, AudioSourceWrapper &amp;source, const juce::String &amp;itemID, AudioModificationWrapper *instanceToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioModificationWrapper</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a9ea64893c5fda34f4d68bb4fe316bac1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_MEMBER_PTR_ARGS(ARAAudioModificationProperties, persistentID)&gt;</type>
      <name>getAudioModificationProperties</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>aa1a1bb016e995982d9d1a01f7d3bc4fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>acb800caadecef6dc03ef28391b154325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioSourceWrapper &amp;</type>
      <name>audioSource</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a7a852e770362c22df78c61ece2034d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAAudioModificationRef</type>
      <name>audioModificationRef</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a1988458616dbba2ffc7cc6cdd96018e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioNode</name>
    <filename>classtracktion__engine_1_1AudioNode.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(AudioNode &amp;)&gt;</type>
      <name>VisitorFn</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>ad1dfdddbf6c74511a9881786dd4ad7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioNode</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>ae06aff291fb45d7839be5a6cd2080206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AudioNode</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a655031d873ebf5ca45549dfafd8922dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a7723b5180a5046d2fe4d02889677f207</anchor>
      <arglist>(AudioNodeProperties &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a7e2cb59dc3c0a6903ae555d60a26ec8b</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a922fae4f0bc6efc12084e310553b7794</anchor>
      <arglist>(bool keepAudio, bool keepMidi)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a345368ba6d9a95cd912f9bf895c0df63</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>adf0969d668ba8ebff9320d11de6e7446</anchor>
      <arglist>(const VisitorFn &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a9ff4e92bd4a226da692a86cc09b3283e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a3e47a069b6ad53137da3e095d64567a7</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a7708b4a7f03606437e85e5b68a69c507</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a6bb7870afa28c971245130e165c6db2a</anchor>
      <arglist>(const AudioRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>af76ce543ddde6c0ac01a3b1947023c9d</anchor>
      <arglist>(const AudioRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRenderAdding</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a0abdfdae09cf5b4109f4517ca26ecb4d</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRenderOver</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a423797af4714bf1f942b5610930c1bdf</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>invokeSplitRender</name>
      <anchorfile>classtracktion__engine_1_1AudioNode.html</anchorfile>
      <anchor>a2c27948d7582f770dd5f1f98d7232265</anchor>
      <arglist>(const AudioRenderContext &amp;rc, CallbackType &amp;target)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioNodeProperties</name>
    <filename>structtracktion__engine_1_1AudioNodeProperties.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>structtracktion__engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>a3a11ee244f41c782b842e83c4cbeccf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>structtracktion__engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>a6fa88efb451b4218fe58b4aa2740f17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfChannels</name>
      <anchorfile>structtracktion__engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>a151f5ad0dea513f91593bc442d0343e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioProxyGenerator</name>
    <filename>classtracktion__engine_1_1AudioProxyGenerator.html</filename>
    <class kind="struct">tracktion_engine::AudioProxyGenerator::GeneratorJob</class>
    <member kind="function">
      <type></type>
      <name>AudioProxyGenerator</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>ad05342a2782d64e5a33cb7ba7d879531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioProxyGenerator</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>ae78155c064c3425a59c1a6392321ceae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProxy</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a0584f22e31af8772bf06e47c32ae0307</anchor>
      <arglist>(const AudioFile &amp;proxyFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProxyBeingGenerated</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a743d1668dd0ff639170704ad7e6c6352</anchor>
      <arglist>(const AudioFile &amp;proxyFile) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>ada16a14664d2c844249bced8c0930946</anchor>
      <arglist>(const AudioFile &amp;proxyFile) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginJob</name>
      <anchorfile>classtracktion__engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a3ce43b7573c52b26f1ff241a764ee8d7</anchor>
      <arglist>(GeneratorJob *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioRenderContext</name>
    <filename>structtracktion__engine_1_1AudioRenderContext.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ContinuityFlags</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>contiguous</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0ac9bcee53c142bd4cbf490c4b9740449c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playheadJumped</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0ae2fc754f250cdded6b79b4d774f2d486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lastBlockBeforeLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0a215ea6706105f103251a2a4db7840cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>firstBlockOfLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0a67cd91ee85d9042717f1697d583b78d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>contiguous</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0ac9bcee53c142bd4cbf490c4b9740449c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playheadJumped</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0ae2fc754f250cdded6b79b4d774f2d486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lastBlockBeforeLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0a215ea6706105f103251a2a4db7840cb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>firstBlockOfLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a9afec5cd6a8831e483bad2f49cc64db0a67cd91ee85d9042717f1697d583b78d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a39e835457a71bd7667b6952f1b5f781f</anchor>
      <arglist>(PlayHead &amp;ph, EditTimeRange stream, juce::AudioBuffer&lt; float &gt; *buffer, const juce::AudioChannelSet &amp;bufferChannels, int bufferStart, int bufferSize, MidiMessageArray *midiBuffer, double midiOffset, int continuityFlags, bool rendering) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ac93f0a6c1db5a2e496ce742f8c8d148a</anchor>
      <arglist>(const AudioRenderContext &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ad06fc485556f5c5f5fdbad03a5a90e06</anchor>
      <arglist>(AudioRenderContext &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>AudioRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a30dbfb09dfc6900054cb487099ead482</anchor>
      <arglist>(const AudioRenderContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AudioRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a2f5e9c2fdc7e50fef09854494657e887</anchor>
      <arglist>(AudioRenderContext &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguousWithPreviousBlock</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>aecbc17514efbe17890983388c6a3508f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFirstBlockOfLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a6af8de7403b21cb9b605af8b60823e89</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastBlockOfLoop</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a6dc225d9b456d0acd7eaf308ed6fafd9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didPlayheadJump</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a5065c32b90c1f1a2fc5a64de31c5b02e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>PlayHead::EditTimeWindow</type>
      <name>getEditTime</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a2112b23579b1862c62e60561677baa30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAudioBuffer</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a2d1f98dceef711b0b3bc7a2eb874df6a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMidiBuffer</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>adb8ff6b327490165b784e291b4e616dd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAll</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ae122c4634e70795463a8fed9951137bb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a57944f67abffe625ab398e858396f924</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheck</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ab4eafad8bded6278ccac5eddfd56a8be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playhead</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a613cd202058230031e2b5fc8e88f4036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>streamTime</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a165df84b099c3c219c17a5ef26d2f558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; *</type>
      <name>destBuffer</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a4d55bd158c487981fa63780321d3660a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>destBufferChannels</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af1c15e8655840e7663ebe6d5d729962c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferStartSample</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a978a5fb11fa2deefb4a0a759a259e4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferNumSamples</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a7295e13ed59c737bfe785b7691b10763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiMessageArray *</type>
      <name>bufferForMidiMessages</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a5444ad2d2a467d03d6a5f91228d86f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>midiBufferOffset</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a35cac02067e42048be7867a0bf11ae3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>continuity</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a64da1879ff6674e19886ccb671e41732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>structtracktion__engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a5dcd4c6e7252ec3bfc9215d61fe079ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioScratchBuffer</name>
    <filename>classtracktion__engine_1_1AudioScratchBuffer.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioScratchBuffer</name>
      <anchorfile>classtracktion__engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a711b5c8955abd55762a9ecfc1ba3f732</anchor>
      <arglist>(int numChans, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioScratchBuffer</name>
      <anchorfile>classtracktion__engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a6b0c2c7a873eadf4c24511345e21e071</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;bufferToCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioScratchBuffer</name>
      <anchorfile>classtracktion__engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>aa07a4650ed1af6b9f830933775524dd0</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a28c7a271e9b4f56a7deb8defee98f95c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; &amp;</type>
      <name>buffer</name>
      <anchorfile>classtracktion__engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a72e7ede976677c597b8c6b0c4db84b40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioSegmentList</name>
    <filename>classtracktion__engine_1_1AudioSegmentList.html</filename>
    <class kind="struct">tracktion_engine::AudioSegmentList::Segment</class>
    <member kind="function">
      <type>const juce::Array&lt; Segment &gt; &amp;</type>
      <name>getSegments</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>ac7128948cfdd5d0cb747dbdd3b9cc38d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a332ae710517fe95588b93e1a1d4dd113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a89233a2b04d512cd277a0978b29a1ff1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a907318839478f404b4527e51b48419de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCrossfadeLength</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a7294dcb46c3a90b78843bd1bbfeb4d83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a2667ab37ccfb5fc907b6f4b43fb89075</anchor>
      <arglist>(const AudioSegmentList &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a658b438dfffdbfec368bb8c7fccc7e63</anchor>
      <arglist>(const AudioSegmentList &amp;) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>aaca7f852e49e92fd75768da5c5311496</anchor>
      <arglist>(AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>af4844778de3cdfc4984e09915715c7e3</anchor>
      <arglist>(AudioClipBase &amp;, bool relativeTime, bool crossFade)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a083c93e0bc54db4025ca146c81e2459e</anchor>
      <arglist>(AudioClipBase &amp;, const WarpTimeManager &amp;, const AudioFile &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a1e4bb2216a27f52e6decb9896f4596f8</anchor>
      <arglist>(AudioClipBase &amp;, const WarpTimeManager &amp;, const AudioFileInfo &amp;, const LoopInfo &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioSourceWrapper</name>
    <filename>classAudioSourceWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioSourceWrapper</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ad27c0d85cc3ac293c4e309c33de97c11</anchor>
      <arglist>(ARADocument &amp;d, AudioClipBase &amp;audioClip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioSourceWrapper</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a7ab47be6377ff39c7cf731004e0712d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeReader *</type>
      <name>createReader</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ae65e26a2696bab6c4a01e7f277b9841f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAccess</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ae1c92beb12adfa6090b8d5b5f55d1861</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_MEMBER_PTR_ARGS(ARAAudioSourceProperties, merits64BitSamples)&gt;</type>
      <name>getAudioSourceProperties</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a83d585110e2e9146619366d99f172f58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAAudioReaderHostRef ARA_CALL</type>
      <name>createAudioReaderForSource</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a1e4289e373b1c097a2ca63a7b9b1a1d7</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioSourceHostRef hostAudioSourceRef, ARABool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>readAudioSamples</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a0526e39aa694565aa8388ac5fd3a6943</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioReaderHostRef hostReaderRef, ARASamplePosition samplePosition, ARASampleCount samplesPerChannel, void *const *buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>destroyAudioReader</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a727d95ac5f99b9fbe730383775e7c81c</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioReaderHostRef hostReaderRef)</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a50e455bc5ad9f834f8c7b8e97f0e26fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a5518053b506dbc5c57db1f8633437c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAAudioSourceRef</type>
      <name>audioSourceRef</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>aa7f72ec701a1be113fc614bd52302d2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioTrack</name>
    <filename>classtracktion__engine_1_1AudioTrack.html</filename>
    <base>tracktion_engine::ClipTrack</base>
    <class kind="struct">tracktion_engine::AudioTrack::FreezePointRemovalInhibitor</class>
    <class kind="struct">tracktion_engine::AudioTrack::Listener</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AudioTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa17692fb569b222794246c6312eef056</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aca613326a09bed9fdc75cf9ca16b1523</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a3a196ad5fa1157686dff4cd46cf229fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a31eee9210a09faa749abacedea989636</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5a3969aa8d765cbcc16a82583497bd07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a6f793b5433c24d79fb6319b4efc3a55c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAudioTrackNumber</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a0c414dabf4755ac25ae0e34af702b2af</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ae8ff958efc374c40ae462686cb574d20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aaa54e4f04ed75db4128d4ac8c6f5856f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a13658813a16cefd5a490428bb998011a</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processAudioNodesWhileMuted</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a41c5a47f3c4b6f884b2341126662dd52</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackPlayabilityWarning</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad5e0e6ac256c8256f270bcdc5cdef8cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin *</type>
      <name>getVolumePlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a77d8cd96d902b48de5bd46aed58da13f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LevelMeterPlugin *</type>
      <name>getLevelMeterPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5e8e17d4516b54623714d9344b17d7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EqualiserPlugin *</type>
      <name>getEqualiserPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a8eabdcca7bdd4c00a6b4f6b188ef64b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AuxSendPlugin *</type>
      <name>getAuxSendPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa97fcaa40775570216276c6d73986190</anchor>
      <arglist>(int bus=-1) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForMidiNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4d08f76448f85de53fb52051edfbc517</anchor>
      <arglist>(int note, int midiChannel, bool preferSharp=true) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForProgramNumber</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad740d27191bdf3d51b6ae9be6b946ae9</anchor>
      <arglist>(int programNumber, int bank) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForBank</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>adf0bbfc92a76e6e25465c0d816471cf3</anchor>
      <arglist>(int bank) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIdForBank</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a154b4cda05eb0ec1e0e04ebf5694ba6e</anchor>
      <arglist>(int bank) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMidiPatchesZeroBased</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>acd21dfb9f3f571e94b5de5b6ec73b5ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice &amp;</type>
      <name>getWaveInputDevice</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a693f81a89703c90fd2db25e024551f9c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice &amp;</type>
      <name>getMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a54845e08d4212256790ceccfba542cf4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput &amp;</type>
      <name>getOutput</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5901d7b03c266afc7925e68aec54aa3c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumOfInputs</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a23fe598328ace6d657bc4a02111fd270</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumOfInputs</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aaeaf5b4af8d51c58c50129908e101446</anchor>
      <arglist>(int newMaxNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayAudio</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a967a797d3725d7039727b973d135b645</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayMidi</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ab6369dbcecb32b681d341b7e81df12bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a08f054f07845e3a75df0aafaa5632221</anchor>
      <arglist>(FreezeType) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>afea2b5f61fd7191e7c865ac4a49be105</anchor>
      <arglist>(bool, FreezeType) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertFreezePointAfterPlugin</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a013b7591bfc9173986ad98fbe064d982</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFreezePoint</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a09c0e9318c88e32048aedd2dd58dbf14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freezeTrackAsync</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9f5ba6c7aabc3a0965bfd74467485e35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyLiveInputs</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa56d1e8e9a67e6f218cf9610da0216d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTracksFeedingIn</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a90a4ae0f9267c7c70b091b1c36829627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a50528aaa9b2d92d41bf688084e61127d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findSidechainSourceTracks</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad9c605bf9231ece77fad71d4a47c59e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a717f1375cb0e87a9e973d0b28dd0c9b9</anchor>
      <arglist>(const MidiMessageArray::MidiMessageWithSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>af8ed76d3c9b740d981ca4438daa59213</anchor>
      <arglist>(const juce::MidiMessage &amp;, MidiMessageArray::MPESourceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4b7e3f5a5b4a3b0ebc760aa80c164c8c</anchor>
      <arglist>(bool includeMutingByDestination) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a462e0a0545327881da96b4d115bb1d26</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>acb98fdef0361cec32fc831ba81fa5894</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a423bf733b4dbbbd49d7db04c4eb5bd87</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa5a968d61820e270eabcfb2329daebb8</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a28742b56fd2423da1e5e94dcf879cf20</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMidiVisibleProportion</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a63e4d09e8116a3fab99bb5ec3be37d42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMidiVerticalOffset</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a63c1ce2a5d2f6736b346fa36488e3dc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiVerticalPos</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>adaf8a34c8ef8015fef563929418dac9e</anchor>
      <arglist>(double visibleProp, double offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleVerticallyToFitMidi</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aef76eeb00f937f0e8215b8184a1484b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalScaleToDefault</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad85fbf4a2fd85691dd8f03dd20a21e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackToGhost</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a97ac64d83cefb865e4780079278fd680</anchor>
      <arglist>(AudioTrack *, bool shouldGhost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearGhostTracks</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4e0eff878a2324a3ccb7e6ce6108effb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getGhostTracks</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4f3ad4eefc83373265d2bb92784550cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCompGroup</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>abdc6ea72aee480320f4cf37eb0127969</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompGroup</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a64a0d88f4a33d60ffec583b469bf2e63</anchor>
      <arglist>(int groupIndex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMidiNoteNames</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a40985d6489be21fef7e3a71780afe27d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMidiNoteNames</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>abf7ad35a026c71d5c775d5000b2fcc49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadMidiNoteNames</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a6a20100ebef4826f66a62e6448977f4c</anchor>
      <arglist>(const juce::String namesFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a62fc7e09bb828ecdc5ad859f56068a6d</anchor>
      <arglist>(const juce::MidiMessageSequence &amp;, double startTime, MidiClip *, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideNote</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a6d3cd3a7f20567eaa3e0062efc6a8e66</anchor>
      <arglist>(int note, MidiChannel midiChannel, int velocity, bool stopOtherFirst=true, bool forceNote=false, bool autorelease=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideNotes</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa7d2484691fbb3538726e710eebe3eb0</anchor>
      <arglist>(const juce::Array&lt; int &gt; &amp;notes, MidiChannel midiChannel, const juce::Array&lt; int &gt; &amp;velocities, bool stopOthersFirst=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGuideNotes</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a588a7daf99a74190e36ba3acf3ae6fd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGuideNotes</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a7d871a51e53e1f40795b6258b88512de</anchor>
      <arglist>(MidiChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a1c3d0e1d50893b07d06d566e91f4c98b</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a620975f80c671994fda17cf6913b308b</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ListenerList&lt; Listener &gt; &amp;</type>
      <name>getListeners</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9f1bfe783c830c1c116ccb2e41c9346c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a72135c2d34896f35476680fdf097f68f</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isTrackAudible</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4f68473915d0a0d780d9e8d6098dd9cf</anchor>
      <arglist>(bool areAnyTracksSolo) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>ab941adfbee300e100c0a6d62ddbc4485</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>TrackMuter</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a15870834926e87a5d0fca6115fd44cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Clip</name>
      <anchorfile>classtracktion__engine_1_1AudioTrack.html</anchorfile>
      <anchor>a54cda048f452a2acf4d0cf488fece5cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomatableEditItem</name>
    <filename>classtracktion__engine_1_1AutomatableEditItem.html</filename>
    <base>tracktion_engine::EditItem</base>
    <class kind="struct">tracktion_engine::AutomatableEditItem::ParameterListChangeListener</class>
    <member kind="function">
      <type></type>
      <name>AutomatableEditItem</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a9fb62a086b72e40291dea28090c27b5b</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AutomatableEditItem</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ab22717b4f86a66e46da5a511f970201a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>acbd533c78db98e71fbe937307efecf43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a967d40ccf073be75e4308ec3083b51d6</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAutomatableParameters</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a6c7ee6db625773eb93d134726bd77123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumAutomatableParameters</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a45fa421cacaa1118bb969e80e4f3eeda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a9db35401d6b0e0587072c21339947f1d</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getAutomatableParameterByID</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>acdd5001ef28693763c0c248bba4061cb</anchor>
      <arglist>(const juce::String &amp;paramID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a2fabd5d96ea208d816b6ad2f5d43b69d</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomatableParameters</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a19f7819b352e7cc9782271aecdcb9a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a6de51e345798970ffa19d3c4b3c9438f</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameterTree &amp;</type>
      <name>getParameterTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a207ee33629fb4665af9b58d9e76bf80a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getFlattenedParameterTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a6b074cebf996232c3930029f38f61738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addParameterListChangeListener</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a52723354754d488b74941ae7e64678ea</anchor>
      <arglist>(ParameterListChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeParameterListChangeListener</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a8f0992e1e231ad461ebf55c2ebb12093</anchor>
      <arglist>(ParameterListChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationNeeded</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a95e2700fd840c89296f2ce00fcb8c1c5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutomatableParamPosition</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ab43417ef1289137f628395030eb84f88</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBeingActivelyPlayed</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>abde2a51dc032f6ad2282a0fdd69b21fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAutomatableParamPosition</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>af7dce4f4158bddb44dd073bd5765e9d6</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameterStreams</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ab29f677457b6bc509c7e1ffb6f6470f5</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateActiveParameters</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a82afc496fcb286286800399bf71a845d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRecordingStatus</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a92c1ea00392d5b63d5be33659caa47c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>elementState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a65865662ed766279d0afb46eb741b8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>remapOnTempoChange</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aeeae2c5c83f0b20abdea44d73eda5d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>buildParameterTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a489e81edaf8f559edf956a93c01a2b1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLastPlaybackTime</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>adea3c30dc47bcfe8f5b01eab7b306ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearParameterList</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a05497d204203709394af5092c4e8a906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a7dcdf5b3f4dc231ee837ff4d681613e8</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebuildParameterTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aa8bfb84d57b0df4ccdeb883805a5988f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveChangedParametersToState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>af5f21cc5924f1eca39e9f8f2542e89d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>restoreChangedParametersFromState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a545c77ab8ef9c35eb9a765026e630581</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomatableParameter</name>
    <filename>classtracktion__engine_1_1AutomatableParameter.html</filename>
    <base>tracktion_engine::Selectable</base>
    <class kind="struct">tracktion_engine::AutomatableParameter::Listener</class>
    <class kind="struct">tracktion_engine::AutomatableParameter::ModifierAssignment</class>
    <class kind="struct">tracktion_engine::AutomatableParameter::ModifierSource</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>af267e7c7e64bcb7412778976ab54a65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a20be6027b7ae94999501cc4399a2a47a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a60c255b0c96e585dac1ea80e3fa3bc10</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, AutomatableEditItem &amp;, juce::NormalisableRange&lt; float &gt; valueRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>af05e0ea5bb3dabd4f3c7bf071d55bf5e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; float &gt;</type>
      <name>getValueRange</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a68756b541de97c28b8051c097e4ddf63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0018280970341d8e9c72440980ff599a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Engine &amp;</type>
      <name>getEngine</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a93be133f2ebea7d88b1b706f72e5c7a6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a8ddacb72da1bc051d1a4a14139372945</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a85f6fa598875a6f7a9577160b192d06b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomationCurve &amp;</type>
      <name>getCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5f5859aeb6bfe3a2e8d3644c0d2bca2d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae345f860ce4ce8b092494d30bca1ee25</anchor>
      <arglist>(juce::CachedValue&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0e54b275e99ee4b7cea26ad7cc04bc4f</anchor>
      <arglist>(juce::CachedValue&lt; int &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>addb6e00c191f5a678edb3c75fc991475</anchor>
      <arglist>(juce::CachedValue&lt; bool &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromAttachedValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afd2ed5dc29868414a2c9d570e8da240b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a927a9dd2d29dcb6af319b4b6d407cef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a305677faebc6c591826858bec27619ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getParameterShortName</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab4e1f86687d24ac00c073eb8e5da363b</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getLabel</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a92c122cdaf5de1da95b44863abf3fd86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getPluginAndParamName</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0ada3fdeafe6dace4297faff46121a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getFullName</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a13eedcb5c7e0e2e026886bee4c6d5e63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getOwnerSelectable</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a088fa55ba96b2eb6a55b1005632a6c02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getOwnerID</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab52ad0152aac5158775d57d3ec27c5b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a32f92a5681d6b9dd2f1680a92e58e8ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentNormalisedValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2f59ab6560d00489c921e5cd6f0eea08</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>valueToString</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acdb560026a036b3c958aea8caaf2f78b</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>stringToValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ac1cf6ed66f185803602837cdd059c5b5</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getCurrentValueAsString</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a75f8c6b8fd3a190e7012581a3b52fe7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentValueAsStringWithLabel</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5ebe557ef1b9c76df9ddb2bef3ec98b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginParameterChangeGesture</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2c42ceacb52728f1f87232fe8b4e030d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endParameterChangeGesture</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abe0fdecd4ac38cce1d37e54fa72fbb0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>af17d035cba237e6922d3b8332c54f709</anchor>
      <arglist>(float value, juce::NotificationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalisedParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a520fe90be17237ac39812f8c4d011553</anchor>
      <arglist>(float value, juce::NotificationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateToFollowCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aeee6a4c508c2286440ee1ba2c4528bda</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChangeGestureBegin</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a12c38232bd70fc28ee1ad1c9aec9d1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChangeGestureEnd</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a86d017c0c287c4ef3710d16196332564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAutomationPoints</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6ca3ef56308f7df592f11db039579f96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ModifierAssignment::Ptr</type>
      <name>addModifier</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a14eeb08b5dfa9e11bc5ebdee6c2ccf65</anchor>
      <arglist>(ModifierSource &amp;, float value=1.0f, float offset=0.0f, float curve=0.5f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifier</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a9c0dd0cdad28887e537721fd717ca0b9</anchor>
      <arglist>(ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifier</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae383e578de46c134541b67ff13872a41</anchor>
      <arglist>(ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierAssignment &gt;</type>
      <name>getAssignments</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab38fc0eb2274c2325bebbbf10c7c12ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierSource * &gt;</type>
      <name>getModifiers</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0a0efeb0b2720bbe1e7ad3c2fa572362</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentExplicitValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a62bd84b9b74fc31cc55b3e133d7b1717</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentBaseValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a297f21bffc999b3358cfe7b4f9460d7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentModifierValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae9e4c04581ffba2fc71e36d8dd333ce1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationActive</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5560c95d5e5a93871559853c2d90f461</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateStream</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5b47dfe81e3f71fd3f3ef0410da71aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromAutomationSources</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2e2e51e7940e69b6941fbd1b09497fa0</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isParameterActive</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a004b4879389243c074dc9718bb6d8c8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDiscrete</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0763b7ee356d45f7dd5b03fb403f62d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfStates</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a37e1087a11579c607827bd99def4586c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getValueForState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0cb212c3046f291e5ca94257e1fe58cd</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getStateForValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae989e9a338bbaf40a7b4f15598976db3</anchor>
      <arglist>(float) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getDefaultValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5fcc56c27b115e978de0afe6511fa9fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasLabels</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa83ad63379e1a559bae3282bc9e51948</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa0acbbc23f1a582717de4a4281283c37</anchor>
      <arglist>(float) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>snapToState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5afe9594fc08b226a9b37c07719d4c0e</anchor>
      <arglist>(float val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aef37d465dcf707f9b9450195be7f1a64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentlyRecording</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a98fcc15e2476f129cad82fa21ca6f9bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRecordingStatus</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acb2fa445ad1ede7c5cd6e2367542f594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiControllerMoved</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acdab2fd75b2d34540d7cfee7686528a5</anchor>
      <arglist>(float newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiControllerPressed</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab4c2e0604c00a2035f56a0957a3de468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5a0d915b8cbf2b0c219dca833b197d39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a14547f5fe5499a71918bdd8ca1b4cd91</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab1760e322eb9939ebdb87d7823dcab63</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2848dacd068cda10567140ee2012b0f6</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>paramID</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a680aad7a0cd1f3e660e0f502e7d3afdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::NormalisableRange&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2f769d4fb005dace79234195e32ed92c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableEditItem &amp;</type>
      <name>automatableEditElement</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad3a0662552ffa610a713a95d8814ffc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::String(float)&gt;</type>
      <name>valueToStringFunction</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a37ff4278ee998a42864535f68b975fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; float(const juce::String &amp;)&gt;</type>
      <name>stringToValueFunction</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ac3137ca1d618e7f4f6ba91b60035be02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>paramName</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a4e15bc405fbcdab0031b962836beb593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>parentState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a3271bf57b325548ea40a6a86a61b5459</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AutomationSourceList &amp;</type>
      <name>getAutomationSourceList</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a59a58cc44d8399c83dadb99fed8e75d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameterValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afaf48bf6709b8d47b17421cd7674b108</anchor>
      <arglist>(float value, bool isFollowingCurve)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ac99ec20e828c01f1c3750f3e52f70b74</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>adcc8869c3325a1e92e07804a915c0db9</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>adb31f7ce180f0a620518d2f7ec73adfb</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aaf1d59a6c03d82a4a811a4f428bb9458</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a683d23f392019ed6b5c23553e69d7dbb</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a8788c75c0f9e68c3e02099a0f76fc6ac</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a94458b6ce1c3d2455aab44de6e9f87a6</anchor>
      <arglist>(float, bool)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AttachedValue &gt;</type>
      <name>attachedValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abaccb522346e475b6100a41a5dcd819b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5c896df6f2a25bc083fe3aed13d4133f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::WeakReference&lt; Selectable &gt;</type>
      <name>editRef</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa5075a88d56b39eeef34dff6ba3c0dc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Plugin *</type>
      <name>plugin</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0aafcf10922e56b27555fcc2f488c593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Modifier *</type>
      <name>modifierOwner</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2ebbe6827f791658e42aab2f6677d0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MacroParameterList *</type>
      <name>macroOwner</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad24f7c8b6e8cce1a316e5ce3d698ad10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AutomationCurveSource &gt;</type>
      <name>curveSource</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae5c855de0f5048c001932da7fb84f4b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a3ffbf673209e96b5df8e8d6ed0d81c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentParameterValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acd8e9e68d9d31558ad1f59fa2b62a7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentBaseValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0f3f89cb7cdbe5875d1ab41918c6bd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentModifierValue</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5a2a00039a8fd4dd74e170989c831d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>isRecording</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa3e965a1e735a43b72944783b3dda15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateParametersRecursionCheck</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0f0328e055c8b22705ab2a5fe1666dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>modifiersState</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa563061f00077c14a6c01767f9cd245b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AutomationSourceList &gt;</type>
      <name>automationSourceList</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a851a71aab444391d58c351719e23fe75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomatableParameterTree</name>
    <filename>classtracktion__engine_1_1AutomatableParameterTree.html</filename>
    <class kind="struct">tracktion_engine::AutomatableParameterTree::TreeNode</class>
    <member kind="enumeration">
      <type></type>
      <name>NodeType</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ae2cc80a091deed4407517e89007ab453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ae2cc80a091deed4407517e89007ab453a08120ccb5b3d6bc9677c388eef9c83d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Group</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ae2cc80a091deed4407517e89007ab453a46a68811ee685370d646a0a81a8c560c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ae2cc80a091deed4407517e89007ab453a08120ccb5b3d6bc9677c388eef9c83d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Group</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ae2cc80a091deed4407517e89007ab453a46a68811ee685370d646a0a81a8c560c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomatableParameterTree</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7ab1bd1e3d438108da027dd8e99621aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeNode *</type>
      <name>getNodeForParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a3d86474af6d28b9fcca661a47285730b</anchor>
      <arglist>(AutomatableParameter &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a0f12973d92083dbe95a480383def0ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; TreeNode &gt;</type>
      <name>rootNode</name>
      <anchorfile>classtracktion__engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a36d3334350564ce79eba9bc12b76612e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomationCurve</name>
    <filename>classtracktion__engine_1_1AutomationCurve.html</filename>
    <class kind="struct">tracktion_engine::AutomationCurve::AutomationPoint</class>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a38112ebad025104f833e41fd75f09015</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>afbb39f55193cc2b161daa289a5a1aef2</anchor>
      <arglist>(const juce::ValueTree &amp;parent, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a07baf7cc7fd7565084cc0976b0e06f3b</anchor>
      <arglist>(const AutomationCurve &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AutomationCurve &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ab4da6c94904cc911be147bf3eb5c93d8</anchor>
      <arglist>(const AutomationCurve &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a086a4042e02aea81e15a4c1ecec766bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a752a1dc09e2e1f36e38ba873628814e0</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentState</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a179622ea2a79ee57d10afc6a06499fd4</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOwnerParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a74a178dc09ef3bb2fa3c924016ea6878</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getOwnerParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a32d5a38fa737be3d4d985e9232e87b18</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPoints</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a82a22d5685dbb5afbcfdf3aafc257dd7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a490705e2d084263a9fd02179a8895bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; float &gt;</type>
      <name>getValueLimits</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a9ee9a566f067e839ea318806d6bdac42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomationPoint</type>
      <name>getPoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a8c1576ddff3fc9ea7ce61c69a7d39bbc</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPointTime</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a7f596e2cccfb1a91304f87389c712f60</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPointValue</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a8d64db9bbdc68fdce431a861295a982d</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPointCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a96eaaf995ee46fac19a1dd3185c694d9</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CurvePoint</type>
      <name>getBezierHandle</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a75cedff8904bec77c5c7200670fc9521</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CurvePoint</type>
      <name>getBezierPoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ab3fb1bad934a7a2c098aa3b1331717a1</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBezierEnds</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ae30a61d5aa071a2a827bddbf54b1e882</anchor>
      <arglist>(int index, double &amp;x1, float &amp;y1, double &amp;x2, float &amp;y2) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueAt</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>add123b8c09fa7a87dd085fbeca4856cf</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexBefore</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ace5156ba2284129eb3045cc14d90c558</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nextIndexAfter</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a5d4e87b2b5b1f777951e9e53ae16677a</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNearestPoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a630a0b80c27ae1140f4954e3261de098</anchor>
      <arglist>(double &amp;t, float &amp;v, double xToYRatio) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>countPointsInRegion</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aa7a41cb8e3d044605eb4c33056af7bc2</anchor>
      <arglist>(EditTimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aeb9e847823c6a0b6f3c9b1c2b6ad0654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addPoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a9437dafedc3466808954e89ab7274c69</anchor>
      <arglist>(double time, float value, float curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a23c090df93e35a18070eab94a39d3c1e</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePointsInRegion</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a53f15b5e18b16794f037f24317c2776b</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRegionAndCloseGap</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a5ce67bc5d3f6a5442e0602443b01b54d</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRedundantPoints</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>af4fd69673b5af341c3308c61a2fa20a2</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomationPoint &gt;</type>
      <name>getPointsInRegion</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1c3320e72ba2a5d29a45b30f385b5b97</anchor>
      <arglist>(EditTimeRange range) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>movePoint</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aa5c31980462e92f6fad094712021562b</anchor>
      <arglist>(int index, double newTime, float newValue, bool removeInterveningPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointTime</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ad9f270c0ae1fb6b2c1214baa37a151b3</anchor>
      <arglist>(int index, double newTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointValue</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aa30414874fa4707cda252c3f6445bada</anchor>
      <arglist>(int index, float newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurveValue</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a4733583e91033c23c788ca40d24dff5d</anchor>
      <arglist>(int index, float newCurve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeOtherCurve</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1263eef67dcb435a60a5e030ac772ad9</anchor>
      <arglist>(const AutomationCurve &amp;source, EditTimeRange destRange, double sourceStartTime, double fadeLength, bool leaveOpenAtStart, bool leaveOpenEnded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simplify</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a9ed87f4863f06acb592f1524fa0042fb</anchor>
      <arglist>(EditTimeRange range, double minTimeDifference, float minValueDifference)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleAllTimes</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1bf6e20fea50870dc6dce45d5b3128aa</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToAllTimes</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a9a1cc808db5778a12afd6f529852c289</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleValues</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a989152f7a14abbdea59778585407a361</anchor>
      <arglist>(float factor, EditTimeRange range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToValues</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ad5c201368673242d739f415d14aa37a9</anchor>
      <arglist>(float valueDelta, EditTimeRange range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getBezierXfromT</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1e26162f8107bf950157ad05a1851a03</anchor>
      <arglist>(double t, double x1, double xb, double x2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getBezierYFromX</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a8fd2ac11ae4471c34470ee51ffa03652</anchor>
      <arglist>(double t, double x1, float y1, double xb, float yb, double x2, float y2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeAllAutomationCurvesRecursively</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a4f07884739fc56ca5c5e33132923c737</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>parentState</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a0b8338667a3ee787cfed6b3b837b5a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aa84871051f9d14234018785217007b84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Clips::AutomationCurveSection</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>pluginName</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a4952aa4b16e4e41e3dae116f462176e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>paramID</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>af08bd3e17251524b8c31b2bc4cf7a45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trackOffset</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a087a64d05ff53eec67d9ba2e00afcdb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurve::AutomationPoint &gt;</type>
      <name>points</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a387dd751586cbd116bdd1a78668c0fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a11894ae9da5e3399819812e3e1a3b1da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomationDragDropTarget</name>
    <filename>classtracktion__engine_1_1AutomationDragDropTarget.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationDragDropTarget</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>ab43303c4d46e0c11db82300f262aeaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationDragDropTarget</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a7617fc520bede078a0ba3c514140518b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasAnAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a9313e1feaaf00cea3707888ec9b79faa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AutomatableParameter::Ptr</type>
      <name>getAssociatedAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>ae56b6dabd9e0c10a278783ae2db9258d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AutomatableParameter::Ptr</type>
      <name>getAssociatedAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>ab5de4d1ee5f4c9898b7c3a4c6948d9f6</anchor>
      <arglist>(bool *learn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startParameterLearn</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>aab77085fd8608b96ad4811600904629a</anchor>
      <arglist>(ParameterisableDragDropSource *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomatableParameterBeingDraggedOver</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>aafd3a4efeef40d048fe95e79dcee2777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInterestedInDragSource</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a8179322a54010fc998439c614f4860b7</anchor>
      <arglist>(const SourceDetails &amp;details) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDragEnter</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a959b829d25cb553d6e0330e3b66cc5d6</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDragExit</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>af7e66f48a99cc6da6bde275b55ed5d23</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDropped</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a98e57694734c490110652b5efb52972a</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>automatableDragString</name>
      <anchorfile>classtracktion__engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>af2bef3e9e14ad99902af1979b52de328</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomationIterator</name>
    <filename>structtracktion__engine_1_1AutomationIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationIterator</name>
      <anchorfile>structtracktion__engine_1_1AutomationIterator.html</anchorfile>
      <anchor>a5f8234f383a1c4cb5bc331a8ef7bec4d</anchor>
      <arglist>(const AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion__engine_1_1AutomationIterator.html</anchorfile>
      <anchor>a654c20252b88d48a20d19676da91e841</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>structtracktion__engine_1_1AutomationIterator.html</anchorfile>
      <anchor>affc987ebb9711028372be2edf40a7cc3</anchor>
      <arglist>(double newTime) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>structtracktion__engine_1_1AutomationIterator.html</anchorfile>
      <anchor>a32ef4337126c3eb18e235b9b045ce6de</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomationCurve::AutomationPoint</name>
    <filename>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationPoint</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>ab3596b08bcb199e71ff23e84b4f63275</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationPoint</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>ac862cf128873cb9ac8d33c08c18515c4</anchor>
      <arglist>(double t, float v, float c) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>toValueTree</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a5948a0f8a9e9c93584eb89219b18471b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a9d5a670e967f64e8fce84321cd105810</anchor>
      <arglist>(const AutomationPoint &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a1171ff114eefc90e379239465494464e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>ac6c06e7dbf588ebfbd5f2374b4475fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>curve</name>
      <anchorfile>structtracktion__engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a8e84547ba8aaf527acec1b80f7e80edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::AutomationPoints</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>AutomationPoints</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>ab5a41f121290a376c596fbc684ba0e48</anchor>
      <arglist>(const AutomationCurve &amp;, EditTimeRange range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationPoints</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a0290ef7671cfe32c43d59aec850c9b1c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>afc49111243eb42cd3ca1129234cb7f61</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteAutomationCurve</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a953f6524bc48bee1b833a5898e4c75f8</anchor>
      <arglist>(AutomationCurve &amp;, EditTimeRange targetRange) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurve::AutomationPoint &gt;</type>
      <name>points</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>ab931baf3493c4c6b13c0e3077767fbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a4447619e1dda0eb521470217cf107432</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomationRecordManager</name>
    <filename>classtracktion__engine_1_1AutomationRecordManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationRecordManager</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a9b8b8166a671decf79b7efa7d805d250</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationRecordManager</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a73a1d5f7704088745c35331dc6abf757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadingAutomation</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a5d0f5c4c9e528a50fd236c7f836b4797</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingAutomation</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a81a5d3353df81666aa8c8d76b82d435f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWritingAutomation</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>aae017a13a58dbd0174bfdf7cdc2f69d5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWritingAutomation</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a95cfd7d1249c8baf3bb9eaf21c13bf87</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleWriteAutomationMode</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a5e1d02c819cab72f0dc3a03f9779e059</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStartedOrStopped</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a7ffa91efd6cdb55adc4513bcc73eb1a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecordingAutomation</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a83578d92285da54ec3836ba15e63a501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterRecording</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a611c2cb8fef0cdd209e4928bd4005d07</anchor>
      <arglist>(AutomatableParameter *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOut</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a8945fe17c937d0a14c09aa112662e7bc</anchor>
      <arglist>(bool toEnd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getGlideSeconds</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a8956d276d911393f8489adfb30d877c0</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setGlideSeconds</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>aeecebd55a8385fb51ff72003f4d04986</anchor>
      <arglist>(Engine &amp;, double secs)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a3e4cf9d0bfe77ea3a4cc1608b662ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>ab28b5abc6c53acca6ad4abc28e0e4e52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AutomationTrack</name>
    <filename>classtracktion__engine_1_1AutomationTrack.html</filename>
    <base>tracktion_engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomationTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>ab40076851e236d3ad03794b7118fb655</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationTrack</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a7c430d275f2a350e7730ca780e64643d</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationTrack</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a427203412fdf9b3af4ee9f6f49bec969</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a102ba5631a44e95bd3f7124475157731</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>ad56d801cde6b1b0365e0636a2252cb49</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a00647152e39a24cbeded861074f95d50</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a5ad84af76b62145289995846c568f6ee</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AuxReturnPlugin</name>
    <filename>classtracktion__engine_1_1AuxReturnPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>AuxReturnPlugin</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a114ce14cd708a11469d29df176cc328e</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AuxReturnPlugin</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a45245e49f44b98e6cc6a2ad2a596c413</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a6c34ef7e23f308c16f4e20af4bc63afe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a2265fbd924d48f152e66223a0b41a112</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a1aa9b633d9f92a095c3f93022683e56f</anchor>
      <arglist>(int suggestedMaxLength) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a141064c18be2b2fef5808031e00f1f4f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a58172008d52c7a4cb2cb4090a8fc0306</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a31ac0b39f6a052d93957a20f89f61913</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>aa5dc0302774a6f0f0fd3b5dbdd097e60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>af605947fea2562e3bdff820f0e4616bf</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a9202bdd6520c93137d058ac7a291eafe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>acc7aeb5d6684ad37bf0040505379ca71</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a8ca4fe2452ea192bad50b4e22bc9ad1f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a89bfc981ff146006b3df8f7f8aad975c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>ae43bc33ef2a3c69ca611b9950a783a8f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a755489288f17c983c2fa0420d2826e0a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a46d1c7ec55d25e706cb798547e97782e</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a47c4aed3c4b28ffbed088b0d4dfd6b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>busNumber</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a81f1b530ac76e6c0ff36a40a5860b2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>aa955ca6900f5d5933fa591b790e928fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AuxSendNode</name>
    <filename>classtracktion__engine_1_1AuxSendNode.html</filename>
    <base>tracktion_graph::SendNode</base>
    <member kind="function">
      <type></type>
      <name>AuxSendNode</name>
      <anchorfile>classtracktion__engine_1_1AuxSendNode.html</anchorfile>
      <anchor>a2bf41dd6ca45632cae148a935cecb3f6</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse, AuxSendPlugin &amp;, tracktion_graph::PlayHeadState &amp;, const TrackMuteState *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1AuxSendNode.html</anchorfile>
      <anchor>aa4fd6c2a7bd9014b507338fb0cfb65db</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1AuxSendNode.html</anchorfile>
      <anchor>a13f7ad5fd0d89fa69ac30e0330962aa7</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AuxSendPlugin</name>
    <filename>classtracktion__engine_1_1AuxSendPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>AuxSendPlugin</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a057de020e71475a035a5492c7571e5cd</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AuxSendPlugin</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a1f86c6290afc585f80dc15a67688b326</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGainDb</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>aa8fd9632040b4087e77ef60e69a63cde</anchor>
      <arglist>(float newDb)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainDb</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ac2aef3ab13a7c8c02691086862d12df1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a73aa824a1726cd01585979e59241bd6e</anchor>
      <arglist>(bool m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a2f291daa4951c476ac6c9ba395e2971d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBusNumber</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a438ded4a25e3db3147a045ca562fd797</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBusName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a4d92d22ddec29819bffbd9a4ac37096e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>aa911b9a490083df6e3443c10399bf927</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a63a86fdae5da062749f22b08b548b121</anchor>
      <arglist>(int suggestedMaxLength) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a89b78afa287fc6a72db16f482e7522f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>adbcd4c3f04425d9e0c341ea2bdd2e5c0</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ab8554c64972e79381822d47f5dc02448</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>abf8a8e53116c804e66638528990c2bdb</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a2fe69f8384a74bc5444bae801082e2d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a6a58aeecb839d5c073f9838717e39642</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ac540354953faf2e0e67138b60f824b29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a34381e50d77d4176a23a8baeaf3a57d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a2156f62c3f14dd6434c2d4f90a3a5886</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a463d7da394554ae3af448a0f975d2f44</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a29dd59ffed9671c54d2602b7e661a704</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ac048b7de912106903c2d52413bea2d83</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getBusNames</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ad0490f05331e080886b50a9aa6662974</anchor>
      <arglist>(Edit &amp;, int maxNumBusses)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultBusName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a418df8799af37643bdf34226b0a72f5c</anchor>
      <arglist>(int busIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a9e68e653d43e5444e362a6612c01a1f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>busNumber</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a3c6ab80c8f39a4319edbeecd2739ec24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainLevel</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>aed5f2dcccbac9ab3ec6e4c34a0b961b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gain</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a913dd1c71131de314b0c199276fbd242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a6a2283004c41f2f9bbe1e6c6df2aabeb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MackieMCU::AuxTimer</name>
    <filename>structtracktion__engine_1_1MackieMCU_1_1AuxTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>AuxTimer</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>a690b97ca2ac3750750820a9f75343eca</anchor>
      <arglist>(MackieMCU &amp;mcu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>a4f8d88d02a3872dae7207dd746f83ac6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>MackieMCU &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>a0b1c3834c0f702c609a14e57a4be3455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::BackgroundJobManager</name>
    <filename>classtracktion__engine_1_1BackgroundJobManager.html</filename>
    <class kind="struct">tracktion_engine::BackgroundJobManager::JobInfo</class>
    <class kind="class">tracktion_engine::BackgroundJobManager::Listener</class>
    <member kind="function">
      <type></type>
      <name>BackgroundJobManager</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a5ff77af90877c44526f32d7e8f21d65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BackgroundJobManager</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a7ec36d8d71368ee05c86952e93dd914c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJob</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>adb3b2dc31bd53286a67dfb41a3ed5d37</anchor>
      <arglist>(ThreadPoolJobWithProgress *job, bool takeOwnership)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeJob</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>aabc466f51d508295067252029c89af59</anchor>
      <arglist>(ThreadPoolJobWithProgress *job, bool interruptIfRunning, int timeOutMilliseconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopAndDeleteAllRunningJobs</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>aea119f68708de803a36d9b0203acd486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalJobShouldExit</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a48977ee11a2568c4757c3210e540d91f</anchor>
      <arglist>(const JobInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>JobInfo</type>
      <name>getJobInfo</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a00cc88df43b1ee38792921227bdc3de2</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumJobs</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a3e290bd8ac7c813e2081802e81390d56</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTotalProgress</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a224574c490fefc576b49ba01b239ab9e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ThreadPool &amp;</type>
      <name>getPool</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a429e86bf32f105e8241dbd6fad883ba3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a9f60b0a677fe00281d1a7ab9726e5151</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>ae6836c81d4f11de7dbe33ff6fbf58f05</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a712a9a0e72e14a48553acc597846c3ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::BandlimitedWaveLookupTables</name>
    <filename>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; BandlimitedWaveLookupTables &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a5cec66e4db9f83a0806c36e9c9c3fa01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BandlimitedWaveLookupTables</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a8545998754662d68bfc3a06e2f307485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getLookupTables</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a1db9b4279ec3744279e5befd049b1f00</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a9a9fde1947c15fd4125f4ae3f5eae196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::dsp::LookupTableTransform&lt; float &gt;</type>
      <name>sineFunction</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a4692555c072f8cd8d6a2f46bb9e60ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>triangleFunctions</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a04f3536529d6ac4a9ace849bf9d46a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>sawUpFunctions</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a520b97cc8b9e006920d39c0774711856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>sawDownFunctions</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a90134375e24cf83d1466ac502b73319e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>tablePerNumNotes</name>
      <anchorfile>classtracktion__engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>ad231efbda4d93ef0720f317c4b723b8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TempoSequence::BarsAndBeats</name>
    <filename>structtracktion__engine_1_1TempoSequence_1_1BarsAndBeats.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getWholeBeats</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1BarsAndBeats.html</anchorfile>
      <anchor>a30fd91eab496e003a7005abb98bed86b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFractionalBeats</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1BarsAndBeats.html</anchorfile>
      <anchor>a6c801cfc2da49b789ca6deb493acef36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bars</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1BarsAndBeats.html</anchorfile>
      <anchor>a6c522db1beb5ce0125c4699b303bc947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beats</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1BarsAndBeats.html</anchorfile>
      <anchor>a3abddf738360e2680282ab4f8912323c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Base</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Base.html</filename>
    <member kind="function">
      <type></type>
      <name>Base</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>a1e237d69f1119b7e18a2a33c1abb9ee5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Base</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>a39ac8abe34d66b6d866e356c3f9fae59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Group *</type>
      <name>parent</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>a49352aa8c0b3524719f7db28cff7f9f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::BasicSummingNode</name>
    <filename>classtracktion__graph_1_1BasicSummingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>BasicSummingNode</name>
      <anchorfile>classtracktion__graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>aed855a29a4e6871561a5190a7fca20e6</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>a9a2a8e4bdc5f338a26d1f9ae3b51fb8a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>afecfc8ef866261888311dedb7d8454c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>a33bfa99fb2bfb6caff05bd0be5602eaf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>a4841114b500aa19b93ace83cd5437475</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BeatDetect</name>
    <filename>structtracktion__engine_1_1BeatDetect.html</filename>
    <member kind="function">
      <type></type>
      <name>BeatDetect</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>abdb8683c5cc11ef2c2892943c271275d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>a0e2163e86c037512ef450f04aba98f3e</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensitivity</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>a533ff9155492568174688525e8a742f0</anchor>
      <arglist>(double newSensitivity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>audioProcess</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>ac5c7787f0d09a29ffe660140b27c9cca</anchor>
      <arglist>(const Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getBlockSize</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>a0bc4c1f07b89b5361f0eb6be8ed9120a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; SampleCount &gt; &amp;</type>
      <name>getBeats</name>
      <anchorfile>structtracktion__engine_1_1BeatDetect.html</anchorfile>
      <anchor>ae6b9746b536686e6dc57e632ea3e72f8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Benchmark</name>
    <filename>classtracktion__engine_1_1Benchmark.html</filename>
    <member kind="function">
      <type></type>
      <name>Benchmark</name>
      <anchorfile>classtracktion__engine_1_1Benchmark.html</anchorfile>
      <anchor>a0f59d6c4fcff3a1ea46f477a50afc267</anchor>
      <arglist>(BenchmarkDescription desc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1Benchmark.html</anchorfile>
      <anchor>aa0ef9f1fd130894ee2a593af633ecdae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1Benchmark.html</anchorfile>
      <anchor>ad25e9436f15f365737436f8fa805187d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BenchmarkResult</type>
      <name>getResult</name>
      <anchorfile>classtracktion__engine_1_1Benchmark.html</anchorfile>
      <anchor>a69cbd8f930c69861be908f7418a9341c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BenchmarkDescription</name>
    <filename>structtracktion__engine_1_1BenchmarkDescription.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>hash</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkDescription.html</anchorfile>
      <anchor>a5cf6dbf10e29f22f3e18bd9fa125cca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>category</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkDescription.html</anchorfile>
      <anchor>aab7c17895b8ee90ecddee47a82b2c30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkDescription.html</anchorfile>
      <anchor>af363d8cf0bde3cd021168f34e3cc0d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkDescription.html</anchorfile>
      <anchor>a456723f3539f9bde60936dc432415068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>platform</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkDescription.html</anchorfile>
      <anchor>a5624d0c7f771c2ba4aea38478124b414</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::BenchmarkList</name>
    <filename>classtracktion__engine_1_1BenchmarkList.html</filename>
    <member kind="function">
      <type></type>
      <name>BenchmarkList</name>
      <anchorfile>classtracktion__engine_1_1BenchmarkList.html</anchorfile>
      <anchor>a6c8832f65278221b94ddc849808c425a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResult</name>
      <anchorfile>classtracktion__engine_1_1BenchmarkList.html</anchorfile>
      <anchor>ade2f810414754ec04abefe16feacb948</anchor>
      <arglist>(BenchmarkResult r)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BenchmarkResult &gt;</type>
      <name>getResults</name>
      <anchorfile>classtracktion__engine_1_1BenchmarkList.html</anchorfile>
      <anchor>a29d06aa850a65f31bb22ea581b70c268</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1BenchmarkList.html</anchorfile>
      <anchor>a6d3f7b2df453a9d4c604e09f47ac04de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BenchmarkList &amp;</type>
      <name>getInstance</name>
      <anchorfile>classtracktion__engine_1_1BenchmarkList.html</anchorfile>
      <anchor>a9779e1bade5b0b3fce0fda2cbea40129</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::benchmark_utilities::BenchmarkOptions</name>
    <filename>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</filename>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a1fe341fed129dce9c7699221ea32d0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>editName</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a476385c1021a201e8d9bc8d3a8aca04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_graph::test_utilities::TestSetup</type>
      <name>testSetup</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a5b3d9225718a7f4ea16cb33c7dd0725e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MultiThreaded</type>
      <name>isMultiThreaded</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a6157c3d3ba0a4a734667ce32a5e144d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockFree</type>
      <name>isLockFree</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a2c84b09fe12dcc8dd6776ef3ead95e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_graph::ThreadPoolStrategy</type>
      <name>poolType</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a4318efbdfde323cd30a5e0f9ce566a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PoolMemoryAllocations</type>
      <name>poolMemoryAllocations</name>
      <anchorfile>structtracktion__engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>aeea2ba5a6ceaa0c3ded4754fa0b69bb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BenchmarkResult</name>
    <filename>structtracktion__engine_1_1BenchmarkResult.html</filename>
    <member kind="variable">
      <type>BenchmarkDescription</type>
      <name>description</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a8d2bd48d80b5d8d42f6a4865fb56742e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>duration</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>af723955a91377c8ed69a955730ff84b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mean</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a9d931c05950bb9fce05f49006e164d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>min</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a92d05e2bb5158fce8215ee96a9567442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>max</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a9a2ac2eebc681496269d53a9b23bff80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>variance</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a84773b6b9f8a12bb6da9e83a2187184a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>ticksPerSecond</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a406e744d8bab7308caf27fa4dd319e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Time</type>
      <name>date</name>
      <anchorfile>structtracktion__engine_1_1BenchmarkResult.html</anchorfile>
      <anchor>a2aaca688c14761b4438750e1be5db99a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BlockingFunction</name>
    <filename>structtracktion__engine_1_1BlockingFunction.html</filename>
    <base>tracktion_engine::MessageThreadCallback</base>
    <member kind="function">
      <type></type>
      <name>BlockingFunction</name>
      <anchorfile>structtracktion__engine_1_1BlockingFunction.html</anchorfile>
      <anchor>ad11e768e4a8d820f925696b99acb23ff</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::BreakpointOscillatorModifier</name>
    <filename>classtracktion__engine_1_1BreakpointOscillatorModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::BreakpointOscillatorModifier::Assignment</class>
    <class kind="struct">tracktion_engine::BreakpointOscillatorModifier::Stage</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; BreakpointOscillatorModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ab13a8ce280ac4db3d65f13e562c2b3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; BreakpointOscillatorModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a30eb5dc8ab573adf1e8a6223c9a80d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BreakpointOscillatorModifier</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a82e06562c43aa2b7b27f20a2044fa9d5</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BreakpointOscillatorModifier</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a827824c6c0e2fc7cf69fd9de109d5e07</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a046cd6758e952472533dca5ae9ba89c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a4bcce3fe17ed819f4befe9ccfa4e5c1c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a1014e4965f95a1b645a8f652867e20a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentEnvelopeValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ab9fc87280f18c1fb65060b618b40784d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a1933cc59416dc051bdd54028ad2cebfe</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTotalTime</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>adcecbcc6a01187b25b79e46c323d5e8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a28e84c5a8841b28d1eb4feab3b9b2d6b</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aa38b0bac5c2ec27dd6bb17061fb372f9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a86627a6c58fc60f1b7cdd88fac459ea9</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2e61d13af115be0cc8a0ab94966de1d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Stage</type>
      <name>getStage</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>afc1ca591130d9d376456de8b7296593f</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>numActivePoints</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a42a9ce00822d2b004482d1e18460c394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a05456ea911584d040d2d1dc1f6081240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a793910504db815818540f2364a07b7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a718769ac888f185e4ea6661c0c0ca938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2f13c6f8b06e718cce99cfeb8db2250a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a244a07b9e39ba87e7041293060db901d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageZeroValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ae897034debc006fd8937e5451232e58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a701cff6334346440846f26acd852d20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneTime</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a672d77240981fbe035fdf186749e5679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneCurve</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a955ec744add1d6082e5794fe94f49ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aa98fa7c70d82942e9b888ea0e67b4513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoTime</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a6f36e25a9a40ddb7d925f99f322c130d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoCurve</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a369e59df1f3e17810f84a1c662c87d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2964129712f37e154827b143e805f0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeTime</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ac14617d259a2c98bf8b5ae2c5381072e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeCurve</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>abf155d0be049a34fdcdaa6e921aba678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourValue</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a9c549bb2472535073a60df314ccef6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourTime</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ab7a95167da6fd476f09c4f76d863f106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourCurve</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a5753eb2dcd30505610759bc613e638a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>numActivePointsParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a68d3e40305766e20780beda3650909e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a07232c8b7bbcd7993a8d0c62e568daaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a4fa8b45c9c00f140a2449e1676e5d448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a16e9624dea3f59f7bb7ab58fa442941b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a8cf88f40015ca838d31505affe911fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>af3f6d3696e793182981e54204345dd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageZeroValueParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>adb67c4d3904ce90855d7efa02174fe98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneValueParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a15779cd3996863c455e7eea9cba17ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneTimeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ac7ae9ac1ca92b712c02f7999ae106cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneCurveParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>afeb3a1c94756e3a07485f827d7dd1626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoValueParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aa422b2cc1660ff13c90f1bb7f7ef6db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoTimeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a87f1600745cfd8ca8013c8166c8b9ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoCurveParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a1d2bb47838b507292c2ff06e4fe72760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeValueParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aa8d27263a8eea868d0089bec9c2b15fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeTimeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aa1b50a6718797f8de80d5e299c4d3a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeCurveParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>addb1010d006a3c0d42aa8a0631eb9e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourValueParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a46101111f3d9143a17137aeb2b99db80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourTimeParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a847b428e3041638e8c69b1356d78d157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourCurveParam</name>
      <anchorfile>classtracktion__engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a50fe0ee0dc028541ba3978a2560e7cbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginManager::BuiltInType</name>
    <filename>structtracktion__engine_1_1PluginManager_1_1BuiltInType.html</filename>
    <member kind="function">
      <type></type>
      <name>BuiltInType</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a22e15e96acd12c00b10657bec8b0ee89</anchor>
      <arglist>(const juce::String &amp;type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BuiltInType</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a93aaee3ee6820da30b4bcd4383280357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Plugin::Ptr</type>
      <name>create</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a3394b4270b5daaf4636f088a3fb1c2a5</anchor>
      <arglist>(PluginCreationInfo)=0</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a3301e24d8e5c7a298eac32e4d668e608</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginManager::BuiltInTypeBase</name>
    <filename>structtracktion__engine_1_1PluginManager_1_1BuiltInTypeBase.html</filename>
    <templarg></templarg>
    <base>tracktion_engine::PluginManager::BuiltInType</base>
    <member kind="function">
      <type></type>
      <name>BuiltInTypeBase</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInTypeBase.html</anchorfile>
      <anchor>a8ac5327a91c6f41eec76b728ddb89362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>create</name>
      <anchorfile>structtracktion__engine_1_1PluginManager_1_1BuiltInTypeBase.html</anchorfile>
      <anchor>ac9b4bd438f29ac1291bafcea8f4452d8</anchor>
      <arglist>(PluginCreationInfo info) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepClip::Pattern::CachedPattern</name>
    <filename>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>CachedPattern</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>aa6e06665df603a6d169474ecd388970d</anchor>
      <arglist>(const Pattern &amp;, int channel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a50fb40a80b05caa514192856513608a7</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a0ff7e691cda2c9b384ecdc089e0fddf7</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGate</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>ad40b8497c69ac89ab7ceeb156cf964c2</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProbability</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a35e0509c08e4fe279c250bf4f2ff96aa</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>notes</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a06ec05b65fb2f6afe98212936c868849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; int &gt;</type>
      <name>velocities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a704247515bd05d10ce2eb395131e8844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; double &gt;</type>
      <name>gates</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a0a351dfed8d27271a60e79c232f05ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; float &gt;</type>
      <name>probabilities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a5285b15247a40610aafa01edbd52e40a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomationRecordManager::AutomationParamData::Change</name>
    <filename>structtracktion__engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</filename>
    <member kind="function">
      <type></type>
      <name>Change</name>
      <anchorfile>structtracktion__engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>a44cd9e3a4a39dda9191d63633618dc3e</anchor>
      <arglist>(double t, float v) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>a50ef20fee3a7c18b517771ca281ec09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion__engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>a050b141c4499d932989a4ff6726b1dc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectionManager::ChangedSelectionDetector</name>
    <filename>structtracktion__engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isFirstChangeSinceSelection</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>ac9e5e711900d788bb2657453a8846038</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>a342b2236603ca0edf2f1ff0cc7d86a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastSelectionChangeCount</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>aaa4b0c7ade63a8cd6bbffcf36c58d3a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepClip::Channel</name>
    <filename>structtracktion__engine_1_1StepClip_1_1Channel.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>Channel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ad9ca0bf39fafd81eed83cf9c21142801</anchor>
      <arglist>(StepClip &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Channel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>af5a3dfd77cd16b3a85879d9bb599e327</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a3fb3ed730b3ee5d66100040d0e48cdf7</anchor>
      <arglist>(const Channel &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ac74afa86ffb07448b8482d5fd0a71d23</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a05da5b97cfb393e1721219ed3dcc39b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDisplayName</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ad326213db8026068a19c3f89faaf37b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGrooveStrength</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a9cf16a2f9654bd35c7b7853108b0b860</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>aadb935e3f7a3025c8944241e7231d836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a4f1e232b9103e039b5ef1d9595dd5cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; MidiChannel &gt;</type>
      <name>channel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a65f39601cb3b21c7fd2d2b155478447f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>noteNumber</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a1a76d6c00c62d185b279e7ff46cbeb06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>noteValue</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>aabf2e687bc49bed2bcf20a7d9c99d5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>grooveTemplate</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a5f9d4942411950138472a69ae6e09a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a10d1983fe01c3e6181c05b237b5232a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>grooveStrength</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ad5f08a25e6fef450ecb950889e651aee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::ChannelConnection</name>
    <filename>structtracktion__graph_1_1ChannelConnection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__graph_1_1ChannelConnection.html</anchorfile>
      <anchor>a05a4b386b0040638279960871b2ff6ff</anchor>
      <arglist>(const ChannelConnection &amp;o) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sourceChannel</name>
      <anchorfile>structtracktion__graph_1_1ChannelConnection.html</anchorfile>
      <anchor>afde2dad127203e72c734aeb8ddb1f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>destChannel</name>
      <anchorfile>structtracktion__graph_1_1ChannelConnection.html</anchorfile>
      <anchor>a0ec7b4d1617e3d761c4491f29dd48173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ChannelIndex</name>
    <filename>structtracktion__engine_1_1ChannelIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>ChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>ac0ade84462e0f6dbe256706f030ece89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a64508036c788f1e8fc9643523a364e68</anchor>
      <arglist>(int indexInDevice, juce::AudioChannelSet::ChannelType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>ad061bf7b0b257c1aa0e73166141522e2</anchor>
      <arglist>(const ChannelIndex &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a5320c54782c054d53a45cd4d54ae6635</anchor>
      <arglist>(const ChannelIndex &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>indexInDevice</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>ae8f5ae93b373b75104d34d27a2f1bd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channel</name>
      <anchorfile>structtracktion__engine_1_1ChannelIndex.html</anchorfile>
      <anchor>aefec08a5e650dfdd95a368ec6054e6cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::ChannelRemappingNode</name>
    <filename>classtracktion__graph_1_1ChannelRemappingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ChannelRemappingNode</name>
      <anchorfile>classtracktion__graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>a5603f889c1a6553583386da81ff22872</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, std::vector&lt; std::pair&lt; int, int &gt;&gt; channelMapToUse, bool passMidiThrough)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>aa96b981a82d296acb05fe98992880529</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>ad8cb2b9054a2f5201607d58766e1e096</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>aa468767e66bfdaf57e64ef5221465c24</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>a8944438c42b04aca713d45aff990bb29</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Chord</name>
    <filename>classtracktion__engine_1_1Chord.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ChordType</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>customChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab6f02d4dd85a3fb853af7066f6e4499f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>invalidChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca957c73ca0306389b6cf1b5f72da57861</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cacc245e1da439318c6118cd576ab6f530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cac913b83191c1f81f048be21ab01ae10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cadfe287c26a7270043a4fefe522e74730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab0e91ab4f69bf3d16ed4e783dc5712f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSixthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caf3f27e351861f43d70386a54b6d718e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSixthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae26a7c1ffd38840a5377616483cfc378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominatSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca9fea3b14e59d5a690ddc3a62305493bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae9ce0c2ce34086fe8c9d1961c5c49d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca08ec5fd40c9b4472c3b5dc25752135da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca0029c7c5511a8ec8bf3b5ffb57dad315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caa4dd3d2882d3c0a7e435de050ce3cd0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caf16952bbff3c08674b3b1e4bec407708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca6b3c1f1e32f6ba6c27d758e16e084118</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedSecond</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cabc67fa430041678572e07b946bad3c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedFourth</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab4a031fbf83274481dbe8a1ac90e5734</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>powerChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca21b15d0618be199fd189ddc8aa5a4fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca7f5c9ca6b1bfb7f46af268e99d298d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca3dcf921471ec8d641200d504d54cf5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caa2bc2484aded19c1aa176c5caae82c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorDominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca95a4b98ed27c47b4a934d5f38df9a3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedMajorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca90beefeb4f44f6c1a5ce8c966582cf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedDominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca1775caa8ff04139e2b118e72f25f3637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca5149dcf6b7ea99cb93b5ee59e2b462eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedMinorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca8dcadb7dfea2e273eec8edd7c28a9f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cad24ca350260dddfa0c9c301e0268a54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedMinorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae8233a100ec9214f5712edd62a63ebc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>customChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab6f02d4dd85a3fb853af7066f6e4499f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>invalidChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca957c73ca0306389b6cf1b5f72da57861</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cacc245e1da439318c6118cd576ab6f530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cac913b83191c1f81f048be21ab01ae10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cadfe287c26a7270043a4fefe522e74730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedTriad</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab0e91ab4f69bf3d16ed4e783dc5712f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSixthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caf3f27e351861f43d70386a54b6d718e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSixthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae26a7c1ffd38840a5377616483cfc378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominatSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca9fea3b14e59d5a690ddc3a62305493bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae9ce0c2ce34086fe8c9d1961c5c49d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca08ec5fd40c9b4472c3b5dc25752135da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca0029c7c5511a8ec8bf3b5ffb57dad315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caa4dd3d2882d3c0a7e435de050ce3cd0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caf16952bbff3c08674b3b1e4bec407708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorSeventhChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca6b3c1f1e32f6ba6c27d758e16e084118</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedSecond</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cabc67fa430041678572e07b946bad3c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedFourth</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cab4a031fbf83274481dbe8a1ac90e5734</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>powerChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca21b15d0618be199fd189ddc8aa5a4fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca7f5c9ca6b1bfb7f46af268e99d298d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca3dcf921471ec8d641200d504d54cf5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4caa2bc2484aded19c1aa176c5caae82c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorDominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca95a4b98ed27c47b4a934d5f38df9a3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedMajorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca90beefeb4f44f6c1a5ce8c966582cf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedDominantNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca1775caa8ff04139e2b118e72f25f3637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca5149dcf6b7ea99cb93b5ee59e2b462eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedMinorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4ca8dcadb7dfea2e273eec8edd7c28a9f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cad24ca350260dddfa0c9c301e0268a54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedMinorNinthChord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a9dd1512764b1ac1b961ebf74d1b65a4cae8233a100ec9214f5712edd62a63ebc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Chord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>af1700cecb9bae36d0c4641ee82c561e0</anchor>
      <arglist>(ChordType type=majorTriad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Chord</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>adafeb905047bac781df2c45ed2c967d2</anchor>
      <arglist>(juce::Array&lt; int &gt; steps, juce::String symbol)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>af12889fc219f62e7fdd9c5823e3a8169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChordType</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a5a4fd887593fa99044f63839350ae61e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>af8df1112ea711780c2e831392d67591f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>ab4afe5abfe551edb6d114bb405a3b3ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>afd35f8b6905cbbd0c062aebf498970ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSymbol</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>abba88846c1533c1d854ade1c7b12321a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a7791c6e5161cea3a8a05c36e9c316fab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a3aecc0a3b94ec784d4a41aed018e1ad4</anchor>
      <arglist>(int inversion) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Chord</type>
      <name>fromString</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a6ea0a8d39daa54c8b12ac6ab41c96454</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ChordType &gt;</type>
      <name>getAllChordType</name>
      <anchorfile>classtracktion__engine_1_1Chord.html</anchorfile>
      <anchor>a6580f45409c62fb9fa54b74bd80db8d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ChordClip</name>
    <filename>classtracktion__engine_1_1ChordClip.html</filename>
    <base>tracktion_engine::Clip</base>
    <member kind="function">
      <type></type>
      <name>ChordClip</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a06bdd5fb4bd4f631abf7c59c4405c2f1</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;targetTrack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChordClip</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>acd42bd0acf7863f31f072f3c23405d56</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a6276532236d15c4b3ea513fc1c85e8bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrack</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>ad7dc82705c5e0db9e6cff2d933162d9e</anchor>
      <arglist>(ClipTrack *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>aa6d197a13837d8a320a94b2822971b6e</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>aac1473864ec016986cea57066dfb0d32</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a4e324dd66bfec7bbb0a066aa758ce5a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>ab9d31d507e2d056ad1585cd1598747b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a5ca18468bca3cc31059ced49374e6df0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a6d5db500a2fd18b110ec233ae434029b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>acc1c1cf2a88e91e831ab4b777a07794c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a342b228d1df664997e9cf77c2e85fa2e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>afd2cea1224375802d47b2e12544e90b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>aa90e9595ced03963ae2be93d4ed98a15</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a213aa61568323bc7433653a1c3361a23</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a623aaa4d68ac98185d8d29945c022343</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ChordClip.html</anchorfile>
      <anchor>a5598cac67b788bf6b1c246d79f9ce29e</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ChordTrack</name>
    <filename>classtracktion__engine_1_1ChordTrack.html</filename>
    <base>tracktion_engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>ChordTrack</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>adb9a38e5d0a031a56c0d0961b72eb0be</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChordTrack</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>af751481346fbef0f90628e99bd4f3771</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>a4e627011bbe50ebb991cba0edd098618</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>adb537f7f1885adac85dd5273a8309f09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>a6477f26c76a8c157814c6f3e9fdf2726</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackWarning</name>
      <anchorfile>classtracktion__engine_1_1ChordTrack.html</anchorfile>
      <anchor>acd3019ea62aed028babc33621fbf91b4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ChorusPlugin</name>
    <filename>classtracktion__engine_1_1ChorusPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ChorusPlugin</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ac80cb8368a914115f982175f8b5d6c17</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChorusPlugin</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ae0b832e2bc0be6680b800aa2d759e156</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a54594136bf7805a3e3d5dbfb3fcc84c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a0947f663c8c1febbe236f93613a1e74f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a1cafa4a3fb4676f8a85bd562d331de2f</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ac0ad8f70e3ecf4097fb22174074dc580</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ad39bfa7d7cd187d8e4bf1446750b0f07</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a7dbf47d40885e70cf72a01c357c4e64a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a5420a275e3037fcee32582cf4ca68423</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a7565b2fa0197679ede7ef6c243b4c123</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a648505b898bc5692520c32de784692b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a941c45116417294e483f851fecaf69ed</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a4078815d76b8fd864e1f638e00b96371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depthMs</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a96d4bf241d97b77e380cc4452fbc026c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>width</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a4d074252340c6f239fe5007d71d69c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mixProportion</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a3814951ec3309f88538021355e41f2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>speedHz</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a3a295a69fe8e7eaf2016787b49b47b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a53915870d4851212ca2c49714032a581</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectableClass::ClassInstance</name>
    <filename>structtracktion__engine_1_1SelectableClass_1_1ClassInstance.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>tracktion_engine::SelectableClass::ClassInstanceBase</base>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getClassForObject</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1ClassInstance.html</anchorfile>
      <anchor>ad0084741e2b40ec6d6064127bab41081</anchor>
      <arglist>(const Selectable *s) override</arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>cls</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1ClassInstance.html</anchorfile>
      <anchor>acc72811ef3b1859f3b472562f57ef9fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectableClass::ClassInstanceBase</name>
    <filename>structtracktion__engine_1_1SelectableClass_1_1ClassInstanceBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassInstanceBase</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>af39237a1768f7f818c48edc5f89c3ef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassInstanceBase</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>abac3b23cb605021de2e94350f4616d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectableClass *</type>
      <name>getClassForObject</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>a01fc2343d35ab8c7d2bb59d12d6cd365</anchor>
      <arglist>(const Selectable *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ClickGenerator</name>
    <filename>classtracktion__engine_1_1ClickGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>ClickGenerator</name>
      <anchorfile>classtracktion__engine_1_1ClickGenerator.html</anchorfile>
      <anchor>ad3ff4ed8a2d80410aacb58ed182841fc</anchor>
      <arglist>(Edit &amp;, bool isMidi, double endTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1ClickGenerator.html</anchorfile>
      <anchor>abe91a96ad9b001ce6f2f423750e90e2f</anchor>
      <arglist>(double sampleRate, double startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion__engine_1_1ClickGenerator.html</anchorfile>
      <anchor>a6825fda35c6f6bd8d716196789564150</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; *, MidiMessageArray *, EditTimeRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ClickNode</name>
    <filename>classtracktion__engine_1_1ClickNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ClickNode</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>a932d2b446722592fa92b051affdac4e9</anchor>
      <arglist>(Edit &amp;, int numAudioChannels, bool generateMidi, tracktion_graph::PlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>a52c87c3d7abec82de46db17ef373b73e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>aaedd21d2dcc8569db6e6a500d5d9e006</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>acc3131803f3f59b8dea59153cfcfef83</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>a855df60f9c7a5d8f1339a024e1bc03c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1ClickNode.html</anchorfile>
      <anchor>a0f696e9dd3f9957e835f5aa3c7a7fa8b</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::LevelMeasurer::Client</name>
    <filename>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</filename>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a8bfa36d1ee6cd632f57e12f5f77bb091</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>ae0d7996ed91e31ded30335147dc068e7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAndClearOverload</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aef641eb844cb105f1a1b8d112ff2124e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAndClearPeak</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a82046ebd867edc750984f9d44ef47df1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>DbTimePair</type>
      <name>getAndClearMidiLevel</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a4c483728841ae8588b986c44b3f0debe</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>DbTimePair</type>
      <name>getAndClearAudioLevel</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>ac27ba7618c81c8b5caa9eccbbfd8551b</anchor>
      <arglist>(int chan) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumChannelsUsed</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a218712d49ad06175ca71cd32e3c5f334</anchor>
      <arglist>(int) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverload</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a653b90d4d8f3c7245b3ed88eb10017c6</anchor>
      <arglist>(int channel, bool hasOverloaded) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearOverload</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a55f734f98de340745959f2fdd291cf29</anchor>
      <arglist>(bool) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearPeak</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>ab9c3f315e3466811a7950daac8aad82f</anchor>
      <arglist>(bool) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAudioLevel</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aa8da883b94c711ce39c438e7ef87724f</anchor>
      <arglist>(int channel, DbTimePair) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiLevel</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a7130c3f9e8561006e39539072855a8e3</anchor>
      <arglist>(DbTimePair) noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>maxNumChannels</name>
      <anchorfile>structtracktion__engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a76930c5d60b640dcde8bfdbc8bbbcd48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Clip</name>
    <filename>classtracktion__engine_1_1Clip.html</filename>
    <base>tracktion_engine::TrackItem</base>
    <base>tracktion_engine::Exportable</base>
    <class kind="struct">tracktion_engine::Clip::Listener</class>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acd9203fe7f0840fbb358f85c97c89ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncBarsBeats</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acd9203fe7f0840fbb358f85c97c89ef5aec728062fbf735c9023117874216fe04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncAbsolute</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acd9203fe7f0840fbb358f85c97c89ef5abb3731f916226518ed4207527e4af41e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Clip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a290bbefa21e3e334a3f7d5f7724f19af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Clip &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a3b47baf2213a5f27c14d6ed1250d3c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncBarsBeats</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acd9203fe7f0840fbb358f85c97c89ef5aec728062fbf735c9023117874216fe04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncAbsolute</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acd9203fe7f0840fbb358f85c97c89ef5abb3731f916226518ed4207527e4af41e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Clip</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1ad0a10562aa4ba58b99964ab8bc1588</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipTrack &amp;, EditItemID, Type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clip</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a0d25899dfd5a690bf6a23ffbb77e382a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aa6f91ccab3abd995ac741bfc0d488eba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a2f013d4093654e37a962e1dbbf0caeaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9ec8f1dea0a7620dc0578b36f9dc5d99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>af11afbbcfa86baa975cb151b90462b3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a6c5bc3c145eac2bfc9aa8830be3fb0a7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab820a2ae2763b22304e5cfb17bb558a0</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ace877f05102b204a3438b14a4a20289d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>abf16260347582f366770dc456bc35df7</anchor>
      <arglist>(Track &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a3e1942e5c3b768449721e80073a76d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SourceFileReference &amp;</type>
      <name>getSourceFileReference</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aa4567dd7afcc894891c40962b7f1f8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getCurrentSourceFile</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a43767e26a1b4c46f23e18fd400ac46ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a4e75719d9781873de587bfa2ccf96e01</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a009f43265ddf313e6aed9c15069dd8cc</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID, double) override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>af4aa328b7053fa738e308e4c390eb8ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getContentBeatAtTime</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a61b3d8994e6b9ff30c524691ef3ea193</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeOfContentBeat</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>afc07f20fbc97bc298a1f478c1211baa7</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaximumLength</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a91d43f4096a58b4971d608ac66371e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; double &gt;</type>
      <name>getInterestingTimes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>afc6e49fd4ebb0d5e3bb7c467e99b449b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpottingPoint</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a89d0262fd8bf7ab35aba704664138bac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1e826ee09991ea5b690fd366ae4f49df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1979952546a6e8ac7da755f20a2e6d7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a5de77f849808d824740f3811b2a1c685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a4476b2c85a8fe227cc2a0a7f7070c363</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a7cf83b64d26fc195b4117c7f7c39cef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a94c2124a39e6b61ac33ccded83aebf07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>af2916fa4c24af16bf74e413d5c1bf616</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aec84b3e2b996948013ef1b99a161e662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a6524b3e95370175b9f9f1d10ab7d91b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae84bdd5549954300d1f341c32a9b3a93</anchor>
      <arglist>(EditTimeRange newLoopRange)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab056297fa0aa11209cc72a853b9bb7ed</anchor>
      <arglist>(juce::Range&lt; double &gt; newBeatRange)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a33664e44bc118f67a4edab02e0c099b3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9b0f73ca7edd65e8a8a984dbcc500181</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSyncType</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ad2fe8e33275b0651f7fcb00bb7bcfd2c</anchor>
      <arglist>(SyncType sync)</arglist>
    </member>
    <member kind="function">
      <type>SyncType</type>
      <name>getSyncType</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a8d4259358faf0ba80fea1b891503e824</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1f92075ef721851871ba46f09d33fd4c</anchor>
      <arglist>(ClipPosition newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStart</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ac9740918ec76049c7cb3e175c93c8fdc</anchor>
      <arglist>(double newStart, bool preserveSync, bool keepLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a27545dbbf7c986a3d5ced1bccac513ed</anchor>
      <arglist>(double newLength, bool preserveSync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnd</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae0c7cf34cef179392c8b72162fe6e75e</anchor>
      <arglist>(double newEnd, bool preserveSync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a98bfa385fc729ae3e916b4ad87a9b562</anchor>
      <arglist>(double newOffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimAwayOverlap</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae8b335dbaf877610e97cce6f44014f31</anchor>
      <arglist>(EditTimeRange editRangeToTrim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromParentTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aead1761b95183db2c8bdc9a8b50c2c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a051057e8d694fed08a9f3fcee187ca2a</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatio</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a5b22e14ca0af712d0f35dcba00b58f80</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpeedRatio</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1ff1ed960692c5e48f47f3d3610b15e9</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rescale</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a587310e87ddff7ce0181563ecc045292</anchor>
      <arglist>(double pivotTimeInEdit, double factor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGrouped</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a5758fc56f129084d5ec4da9572c9938d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getGroupParent</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aff6c341529078975cc3e0913c9ebd0e0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroup</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acfa6ab37506c431ad332fe52f06b8917</anchor>
      <arglist>(EditItemID newGroupID)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getGroupID</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9e2cb55ab0fbfd4d496d625f9c46e2b1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getGroupClip</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a61f741af2e05351ded1b89424442380f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLinked</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aa95ddbc6db9927b67b9633de0dc09ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkGroupID</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a019c2f408dabdd2c8cc7d9f674e5a900</anchor>
      <arglist>(juce::String newLinkID)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLinkGroupID</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a4611d20e9dee53afee72b04a56241f0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>getClipTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a2b9fd282d4f13cccc63e2dafec4dacb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a7a59340a70b29ac41842f5524c2daee2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab07a97751de6152d0d0a912c21510715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>acf2949a351612577b4aaf96c2123b182</anchor>
      <arglist>(juce::Colour col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePlugin</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9a0f874441d8fc3191356f472ec75820</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addClipPlugin</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a49aecee546b2ee6cfbbb5aad0682e38e</anchor>
      <arglist>(const Plugin::Ptr &amp;, SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aeaa32bb8ca194fdce1783a1fd0bb3cad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a5625cde79eb880c6d13d0909b6606a8b</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PluginList *</type>
      <name>getPluginList</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a3604e8477c7ab188e3fa558fa0f9a045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9e6353d9bfb3c42c9a45826a3a6497b8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a0288c8eab8dff005bcc5df82c4c4211f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a25362e1176bf91722e999803315e2034</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a06b630ffc6b2f59bb00aeefc7be4095f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a8ffac9a7f6547f0100700ab32992f736</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab7f1ef20e5a70611c8d8263b2d97655e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab93503a76e0cded4e745effbbc5c3fe9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ad66ada5090f5901c7504b2676e553c79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setShowingTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9f6fcbe822549391d695ffa3ca1d2224</anchor>
      <arglist>(bool shouldShow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isShowingTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>afa90fead3f3841f012a4cc38b3a56923</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a237bca3dbd7a79d42de49e8f12b6588a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a0d8689a95b47ecd42ef2c9c1838e26bc</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLinkedClips</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a998874bc5a589039e0ca970de329a082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a72a151f4d0448c0253f5b06d3f3cf4b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a973aafc1e2827ca749504bcffca7e64d</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>aee7c58df2d8d09f2d08669a431733ae5</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ListenerList&lt; Listener &gt; &amp;</type>
      <name>getListeners</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9d5d92d51c176021aa779c6c167c924b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab94043c659770b35b6ef1269fd2d2e19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>af726023e3fdb7c7d139646ae188ce1aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isClipState</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a0e35bb0004743290f48cf71e1dcbf2ad</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isClipState</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a91bab435812027c23f0e44ed4f2f4123</anchor>
      <arglist>(const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>createClipForState</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a7f76cf43f352711a186fdd77b6cc43c8</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipTrack &amp;targetTrack)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae3652718f9431b27409be3bb46108d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>colour</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a68b8adbb4ef55fcd4a9b7840ae86d0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCurrentSourceFile</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a56c5dfc20cac948def19906109235ba3</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a94e25f6065936218e56e427a65e35013</anchor>
      <arglist>(ClipTrack *)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual juce::Array&lt; double &gt;</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a90840adce467ae01c71402d8547e2012</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a052339ef698870178932a4380d551558</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a78449bd8a88735dcda6568f1d85b68e1</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a444f79ca88ed29ea00986210a82f4dd9</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a787c0e3de1f0443861293d39526da5c0</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a582daa9130b4bb30d6e5217c49d3fcc5</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isInitialised</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae4260c0ca5b0ce61b3534f034edffa17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cloneInProgress</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae2f23f98b1288084e0a268908b70b6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>clipName</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a09f2502c32036126a1e88f4f45ce2ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ClipTrack *</type>
      <name>track</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a38c2ce960410ac344bb75c45bb25fbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>clipStart</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a08480d97af0b45c2cb3500c103eac565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>length</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab36ea4db2b872ccaa7fc92732bbb2262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a70e2fd459087cffc82db24061d697aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>speedRatio</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a9b9d3bbdf72129762df0c7565e7fb5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SourceFileReference</type>
      <name>sourceFileReference</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a08fadd95131fd147f090ddc0dd88d1fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>groupID</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ad3a8c5c1bdb2ccb7bc4201eb3449cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>linkID</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a1c237001b1ddc74d9e8483c106487720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::File</type>
      <name>currentSourceFile</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a6337965f90d3a70dff11d6d3514b21f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; SyncType &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ae5eacaa32c570b97988e48cde1f1ddee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>showingTakes</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a86dd1b09c0230a7aa5aab2f1eb2e72e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; PatternGenerator &gt;</type>
      <name>patternGenerator</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ab42fe0ea1c4477fce4f6f94a16636311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AsyncCaller</type>
      <name>updateLinkedClipsCaller</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a96c8a16443562164c2babfac47bef783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a066aace2919b5120ae4163dde4e4ce00</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Track</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>ac9187679244c6a3414c63aae65f83a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ClipTrack</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a691414d8861d34fe825ff38f10e43609</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>CollectionClip</name>
      <anchorfile>classtracktion__engine_1_1Clip.html</anchorfile>
      <anchor>a44c222975e4e10fc954cdb805fdb8411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Clipboard</name>
    <filename>classtracktion__engine_1_1Clipboard.html</filename>
    <class kind="struct">tracktion_engine::Clipboard::AutomationPoints</class>
    <class kind="struct">tracktion_engine::Clipboard::Clips</class>
    <class kind="struct">tracktion_engine::Clipboard::ContentType</class>
    <class kind="struct">tracktion_engine::Clipboard::MIDIEvents</class>
    <class kind="struct">tracktion_engine::Clipboard::Modifiers</class>
    <class kind="struct">tracktion_engine::Clipboard::Pitches</class>
    <class kind="struct">tracktion_engine::Clipboard::Plugins</class>
    <class kind="struct">tracktion_engine::Clipboard::ProjectItems</class>
    <class kind="struct">tracktion_engine::Clipboard::Takes</class>
    <class kind="struct">tracktion_engine::Clipboard::TempoChanges</class>
    <class kind="struct">tracktion_engine::Clipboard::TimeSigs</class>
    <class kind="struct">tracktion_engine::Clipboard::Tracks</class>
    <member kind="function">
      <type></type>
      <name>Clipboard</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a811f0d0c722db546d73bd2afd2c278cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clipboard</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a1cdb294b36c25a640872301e3f6cd007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a9750f58e47ccee7fd08b6c41b065f0a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a6a52f284d55ceb7e9a83360362bf85a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>af26f41e5850873b3625bb9430cba2ffe</anchor>
      <arglist>(std::unique_ptr&lt; ContentType &gt; newContent)</arglist>
    </member>
    <member kind="function">
      <type>const ContentType *</type>
      <name>getContent</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a488a031a70b8c7c3c7b737ac9a72f68d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeContent</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>acb35e9de4fd990b91ec4289cbbc41ee6</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>const Type *</type>
      <name>getContentWithType</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>aee64c771efa80ca02faafe6f937348d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasContentWithType</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>a54fa017f48661df1b3e7a8d175698b05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>aa7e854690acc686e63d4296a3850aa77</anchor>
      <arglist>(juce::ChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1Clipboard.html</anchorfile>
      <anchor>abcda84f353dd449237cfa973655d5655</anchor>
      <arglist>(juce::ChangeListener *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ClipEffect</name>
    <filename>classtracktion__engine_1_1ClipEffect.html</filename>
    <base protection="protected">tracktion_engine::ValueTreeAllEventListener</base>
    <member kind="enumeration">
      <type></type>
      <name>EffectType</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a2db4cad593f6e7b028f6c3fdf38cdce4</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a210ab9e731c9c36c2c38db15c28a8d1c">volume</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a0c5768e560616edcd778102090f35615">fadeInOut</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a4945228f6fd45bf44ecd04821681b0e8">tapeStartStop</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a8245e4d180d519f0c76be895a4fa10bb">stepVolume</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4ae58221b85ed046db6f874130f9683e68">pitchShift</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4ae10db1f12a5f7fa88737eda4e033a077">warpTime</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4ac7d791f18791777c3baeba68b2450cd5">normalise</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a5d2e6298735abc1f06bdc62ac7d3c996">makeMono</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a4d9c2073afa3c2abb817dceb22c34de6">reverse</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4a20e57f32ba12b9cd13ebe9ef5e32d949">invert</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4ab2c97ae425dd751b0e48a3acae79cf4a">filter</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4ad954c3afd09ae63bdc4cbd99783be9cc">firstEffect</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ClipEffect.html" anchor="a2db4cad593f6e7b028f6c3fdf38cdce4aca66c1e383e0dc2c7267725360153d43">lastEffect</enumvalue>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a0c187966278e59002f31fc8ddb069163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClipEffect</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>ac7fd927af28583fef310ce99fdc4100e</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>EffectType</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a61a405ec9fe008dd97b655de66836dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a0b9d055ec17167e00b8699ab5a3b846a</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasProperties</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>ab8f73c7892a936b42f3466a3fa67fe66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a51d4565ac6069b7729998ab955300c7f</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceChanged</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>ac61b28f01601030dedd7cb8fe041455e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a7b6bb1fb973c5aecd47fee5676a43a63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>aca05d8f8d99f4f63b2de0da486a5d6be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getDestinationFile</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a6fa7d30f92065f1673d7e9072675bf89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>aa1f1897359780096d75e9ee063cfa0a2</anchor>
      <arglist>(const AudioFile &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>aad8ad1a2ee80a117719bc229703db905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager &amp;</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a777128880ba66eb85dd4bdaec45b7341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioClipBase &amp;</type>
      <name>getClip</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a696cfe4defc11f83d6a3f0aaed376129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a15512a9c1de6fb412d37d2bc29718289</anchor>
      <arglist>(EffectType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClipEffect *</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a80988da67bb3007a1b8bc0ed2b118901</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createEffectAndAddToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a39ffde333c6d135d5eb829990cf0e74f</anchor>
      <arglist>(Edit &amp;, juce::ValueTree parent, ClipEffect::EffectType, int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getTypeDisplayName</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a534c10ed49ba0111ed731b54fe838047</anchor>
      <arglist>(EffectType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addEffectsToMenu</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a466658264a33abc218438992ac02a464</anchor>
      <arglist>(juce::PopupMenu &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a58d9f7a032abf505a589a86c8c7fb784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>aea48982c5dc3b02d85921e0fddc2d06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClipEffects &amp;</type>
      <name>clipEffects</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>ab5124e187d742ee9a5b5655d93e50df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a12d952bd24296e773e894da8a839e790</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a0f8e7f172712eb79b7885e0cbb8ef3e9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClipEffects</name>
      <anchorfile>classtracktion__engine_1_1ClipEffect.html</anchorfile>
      <anchor>a0b28c6f563ff0211218c06635a18f785</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ClipEffects</name>
    <filename>classtracktion__engine_1_1ClipEffects.html</filename>
    <base>ValueTreeObjectList&lt; ClipEffect &gt;</base>
    <class kind="struct">tracktion_engine::ClipEffects::Listener</class>
    <class kind="struct">tracktion_engine::ClipEffects::RenderInhibitor</class>
    <member kind="function">
      <type></type>
      <name>ClipEffects</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aa7de6167b279846df19158c1593c4173</anchor>
      <arglist>(const juce::ValueTree &amp;, AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipEffects</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a0e9b42b85ebf68a9c5a46e027c34421b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a7e9c5d37bdc1c0fbed87b3b2ffc1bbdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>getClipEffect</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aad3ee35df65e52bd2d941b218c9089ae</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a426e32c4279d0fe0f73da7758d0d9234</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEffectsStartTime</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a356e02c2cb433a987e8c2dc8c70f358c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEffectsLength</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aabcde7c89c3e45390a545c1713d432fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getEffectsRange</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a6dd4af87ec094172068605a692598407</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatioEstimate</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a5536b6a67149562cf3828e7f9faa989c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>acb5f6b3ac6e97d520506b417ef99fb84</anchor>
      <arglist>(const AudioFile &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyListenersOfRenderCompletion</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aac20b0ebae937f700841594da8a9355b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>createRenderJob</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a354bd90b68fb68c0d2d8e28766cb3ca5</anchor>
      <arglist>(const AudioFile &amp;destFile, const AudioFile &amp;sourceFile) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a8586b0a81fa27b249904f942d017d46b</anchor>
      <arglist>(const juce::ValueTree &amp;v) const override</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>abd2a3dd3f5a1caa12a4bbf969aad562f</anchor>
      <arglist>(const juce::ValueTree &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a8df9173f648de9c39ef689abaf378cee</anchor>
      <arglist>(ClipEffect *ce) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>ae78ffa3033e264fc84dead60ece51dbd</anchor>
      <arglist>(ClipEffect *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a061ad5f1eae063abc5ea369772f7e3cf</anchor>
      <arglist>(ClipEffect *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a3cf298ac9778625bde26717a6e476e7c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aa311bd80eb6347248c6e80e35b6ce46d</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a7d749c6ce1d6265fa7650ac6940a64a7</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>aec4f0914358fbcad9567508218766b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>a648aefef030c743ca15d1d718737c675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>adf4cff31c53f50283295bab33a5296c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClipEffect</name>
      <anchorfile>classtracktion__engine_1_1ClipEffects.html</anchorfile>
      <anchor>ac6266cec97f864ea8a2a735e60238512</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Clips::ClipInfo</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</filename>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a52f651240830c15ccda51414891ef365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trackOffset</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a853d59044834ecc76098fe9570709d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasBeatTimes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a2523e1de1c51613a8c2d76cca0a1f85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startBeats</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a232240e84ba21c8172dd5a88f0e6c2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthBeats</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a48860ad7126a1248b36726cb6256d908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>offsetBeats</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>ad7c85de271b0cac6547f1c4a104ca712</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ClipLevel</name>
    <filename>structtracktion__engine_1_1ClipLevel.html</filename>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dbGain</name>
      <anchorfile>structtracktion__engine_1_1ClipLevel.html</anchorfile>
      <anchor>a32862db25a2d79b48bf935cbae446327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pan</name>
      <anchorfile>structtracktion__engine_1_1ClipLevel.html</anchorfile>
      <anchor>a4570a36217439333c7514be39b491b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>mute</name>
      <anchorfile>structtracktion__engine_1_1ClipLevel.html</anchorfile>
      <anchor>a02602e46986b6b463cfd48492b7a663c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ClipPosition</name>
    <filename>structtracktion__engine_1_1ClipPosition.html</filename>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>a236a352cc880d6bb8ff927503581b327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>a6ae9963f0ba8a66d88079feeb90db5b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>ae9ffcc5f265a259f4b9a1d8c89d4f937</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>aa3020479376665e977c61b1bc0a0ee0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartOfSource</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>a098da4fc77854cee4dc3ea0b013607dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>ad723058b6559401a71d379457ff6c6e5</anchor>
      <arglist>(const ClipPosition &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>a4c31218e783a5f436146f5fdb948180b</anchor>
      <arglist>(const ClipPosition &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>rescaled</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>aa43bc1a0d1bd531b71f8f61214a2c72e</anchor>
      <arglist>(double anchorTime, double factor) const</arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>ab428b35500097a544f8f94a8a5f61f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>offset</name>
      <anchorfile>structtracktion__engine_1_1ClipPosition.html</anchorfile>
      <anchor>a7628ef7b29562ed137e49166a93cf9d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Clips</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Clips.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion_engine::Clipboard::Clips::AutomationCurveSection</class>
    <class kind="struct">tracktion_engine::Clipboard::Clips::ClipInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>AutomationLocked</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a155ed9849ba687c6f58307333097a93d</anchor>
      <arglist></arglist>
      <enumvalue file="structtracktion__engine_1_1Clipboard_1_1Clips.html" anchor="a155ed9849ba687c6f58307333097a93da7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="structtracktion__engine_1_1Clipboard_1_1Clips.html" anchor="a155ed9849ba687c6f58307333097a93daa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Clips</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a88caed400dae268d8e48185f23f88413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clips</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a97caa1abd46d70a3c32b190da76cf315</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>ae0ba4b615003ecece3cb7c0ac2b738f7</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>ab071b524562b9822d74ca3829e46c217</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteInsertingAtCursorPos</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a0135d37a339c36d0031fd006ee84352e</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteAfterSelected</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a8d4a00ac56db934fc7198df9acb0d48f</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a77cb60fe7ad9fa03fb259327b1f5d22a</anchor>
      <arglist>(int trackOffset, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedClips</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>adafa263c177326625812bb8d8e31db64</anchor>
      <arglist>(const SelectableList &amp;, EditTimeRange range, AutomationLocked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAutomation</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a866dcee41ede0573df0311e50b59c36f</anchor>
      <arglist>(const juce::Array&lt; TrackSection &gt; &amp;, EditTimeRange range)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ClipInfo &gt;</type>
      <name>clips</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>ac493022f8f54c326679d7b96701a2c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurveSection &gt;</type>
      <name>automationCurves</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>ad34f02e7d6d2aafe3179e24973c859c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ClipTrack</name>
    <filename>classtracktion__engine_1_1ClipTrack.html</filename>
    <base>tracktion_engine::Track</base>
    <member kind="function">
      <type></type>
      <name>ClipTrack</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a4257ffb102c315ce9cca5f9e9d306c34</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, double defaultHeight, double minHeight, double maxHeight)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipTrack</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a5fbb1575a696413b781b41fd20fb39dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a75ef4ae662820eb3ff2084390758e89f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Clip * &gt; &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a40d714edeea9b5fd183e33cc521313a6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a3933a2356261eb16a6aa54bc7a7f4b0b</anchor>
      <arglist>(EditItemID) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshCollectionClips</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a06dbc5e0a4625dfb79f6fbee76097e3f</anchor>
      <arglist>(Clip &amp;newClip)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a24855353b79a690279571f272be8b95b</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>afb5f710f4549c1a4d260dab6ec21f553</anchor>
      <arglist>(Clip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCollectionClips</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a1e91acde68d6fab9864ac6718d004b7c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0836a008d8ae52d9af535f5058a15afe</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextCollectionClipAt</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>aa8623cd60b2db4c332c201996d9bbf2f</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getNextCollectionClipAt</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ad1e07e2fcf7185cb9475b90751ae6b08</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a4c6a7d4b9a11a9727baada2c96b5bba6</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a8cd23c41856f74e7ed8ae0578d71e3a3</anchor>
      <arglist>(CollectionClip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>affbbccf52cf9061136eaeb2ec88ecddd</anchor>
      <arglist>(CollectionClip *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a58a5d9133c265c2c3f15e1d46283be42</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>aca7c2c596d0a5215cc58d39c1fb6d5c6</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a7a3591b635e251f44b35b728c03146c6</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac630873e30b3aa2ab046170699fb8772</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a7c0b2f332477535f94377b3c4098070b</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6b3b95ba8a98d0819b4f76a8fb9e93a4</anchor>
      <arglist>(double time, double amountOfSpace) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a5db32e6def06f9ecd398b9246aea4f78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthIncludingInputTracks</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ae910dc043c5b4f0e980fe9cddda05f40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getTotalRange</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a57774f9dd773bd1f80dd5b26095a9760</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6feb36fc8ff8d3260f79b2fab07cd55e</anchor>
      <arglist>(const Clip::Ptr &amp;clip)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>abdf68d2dc555d65390e9a6f5f5e44d60</anchor>
      <arglist>(juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>af0fec368bb28bbe1a7138b14a5c3107d</anchor>
      <arglist>(const juce::ValueTree &amp;stateToUse, const juce::String &amp;name, TrackItem::Type type, ClipPosition position, bool deleteExistingClips, bool allowSpottingAdjustment)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0eba4baa7185884aea0e508dea290d54</anchor>
      <arglist>(TrackItem::Type, EditTimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a24609f3d2634a18b90c39c3b8e1e0343</anchor>
      <arglist>(TrackItem::Type, const juce::String &amp;name, EditTimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac052b81a7500ff8faf8be4aae229d011</anchor>
      <arglist>(TrackItem::Type, const juce::String &amp;name, ClipPosition position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a078a29c340eea701937d66df25f84a40</anchor>
      <arglist>(const juce::String &amp;name, const juce::File &amp;sourceFile, ClipPosition position, bool deleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0afe493a4496c0326256de55ce6d0bbd</anchor>
      <arglist>(const juce::String &amp;name, ProjectItemID sourceID, ClipPosition position, bool deleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a89487ca4df43af80be6818e67af51922</anchor>
      <arglist>(EditTimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a95b5e7fd5d798824392777aed8e0105c</anchor>
      <arglist>(const juce::String &amp;name, EditTimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>insertEditClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ae2f11af958ab885712ba20f33f032715</anchor>
      <arglist>(EditTimeRange position, ProjectItemID sourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a738cf61267d021291c24599cce3ac825</anchor>
      <arglist>(EditTimeRange range, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a584a3cde3ebb3eafca60e918b9182e6d</anchor>
      <arglist>(Clip::Ptr, EditTimeRange range, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>splitClip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ae5df3a7a0f712a8ea9921e4cc909fcfb</anchor>
      <arglist>(Clip &amp;, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitAt</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a3961a282b45ba53a89a6daceaefae373</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextTimeOfInterest</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>aea8a17c491df3c734b05e178d67e91a6</anchor>
      <arglist>(double afterThisTime)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPreviousTimeOfInterest</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ab21afacbe99843cc19d8e870ac68174f</anchor>
      <arglist>(double beforeThisTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsPlugin</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>aae81cd621dac91ddd42c5a4cbe5fad61</anchor>
      <arglist>(const Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a008e933cc918a124b1295b00d8918651</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ae54a708c140ace3ec4ca1b98a4d4a3d5</anchor>
      <arglist>(Plugin &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyClipsUsingFile</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ad38dbd77d46aed867eba1eb868bfc7b9</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAnyMIDIClips</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a1e9a4a3aac5ae7b2478433db2c799731</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::Array&lt; double &gt;</type>
      <name>findAllTimesOfInterest</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac3f46ea49a046b626c917253edc69327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshTrackItems</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ab1d5689afa2c555a06be1f5bc3bfc796</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ClipList &gt;</type>
      <name>clipList</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>aadf8976c4096a3c98bef00305ce85c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; CollectionClipList &gt;</type>
      <name>collectionClipList</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>ad0506d3e2addc479cffc163ed7e7eaf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>trackItemsDirty</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a56a48cce95522e79e92a46289aead490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; TrackItem * &gt;</type>
      <name>trackItems</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a8b3d266febcc6014d00b4f698a19d6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Clip</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a54cda048f452a2acf4d0cf488fece5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend struct</type>
      <name>ClipList</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a21244620c837218efd62872a0c9533b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend struct</type>
      <name>CollectionClipList</name>
      <anchorfile>classtracktion__engine_1_1ClipTrack.html</anchorfile>
      <anchor>a45150334fe0869b79364a574aea67c0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CollectionClip</name>
    <filename>classtracktion__engine_1_1CollectionClip.html</filename>
    <base>tracktion_engine::TrackItem</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CollectionClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>acc8ab7c49d892e8636892d43f09e878c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollectionClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>af0e819e4aba93ff5359972cc8dc49179</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CollectionClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a1f58cd4c6f3b7545183b85e1b34a22f5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>ae4e01008dc8269aa1c86441c1bcb4b10</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a5a59b6e5fb10736ca46b3fc8d6771343</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>afa9ef4a30ed858f9677661142d9e75a2</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>acc6f9dd3fdc563e7ea1359baee1384a4</anchor>
      <arglist>(Clip *clip) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a2bb0f60f2877a3ef34f49a796b4514d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a36ac56ccc3042959810ca2a37f6f2187</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a31944387a4bd17cd71a048ed68b20aaf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrack</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>aea7d1852138f9ec4fbcce487de8ce772</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateStartAndEnd</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a09947c555480b3b166bb7840b1587a40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FolderTrack *</type>
      <name>getFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a581bba92589732b4cfb4f4112762b645</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a78e4b7fddc3f30932122904b766515ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumClips</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a6db70fc578fa27616738d329818f90b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>getClip</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a1debf572b12d6d5ff6be79a357624f23</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>const Clip::Array &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>ab0071be8e6187fb65d71b1bb72b2e26f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragging</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a2655df4c525d4a009cce3b32be51c87e</anchor>
      <arglist>(bool nowDragging) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDragging</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a296bbcbfbf698b69be70df06616ab497</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getGroupID</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a3754fa6997755891f43d3ffa4a8e6dfa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupID</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>a3048a64c15f8512c1171d751f9b1efc5</anchor>
      <arglist>(EditItemID newGroupID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGroupCollection</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>aaf010849b44d18d4bcb87f8877366776</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>range</name>
      <anchorfile>classtracktion__engine_1_1CollectionClip.html</anchorfile>
      <anchor>aebd40cc0a93c15242920c732da907f46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CombiningAudioNode</name>
    <filename>classtracktion__engine_1_1CombiningAudioNode.html</filename>
    <base>tracktion_engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>CombiningAudioNode</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a8fa874a9f30c8f3d13b2ce244bba43e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CombiningAudioNode</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a855d9e78bd06d6c3bfcf998a576b1d50</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>af4af8b8fb819b736a11708ba56469f8d</anchor>
      <arglist>(EditTimeRange time, AudioNode *inputNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a70f7d0f8cf8a3a8b08ada4f00f4ff8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>aaba3cf850e57dedb969c881d166a697f</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a1c148a1212a4f759c0fb3ae4cd81388f</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>aaab22298876f6c1ed1f301e055080c17</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>acaa255e793c9d058f01d0a01030ac7fd</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a4ebd4354b197856048dd447c0c1916c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>ac35ca1823d3e5de790472f3f62d5e2a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>ab7d9b95891f98cd580dc7429c188d000</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a508296f3fb443a9e0e4a4557d9610234</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>aeb3be5722e47ba8d3b029595a29c793d</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>ae9b60b50787282eef789fac4ee8cb9da</anchor>
      <arglist>(const AudioRenderContext &amp;, EditTimeRange editTime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CombiningNode</name>
    <filename>classtracktion__engine_1_1CombiningNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>CombiningNode</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a259522a37f1c6867484e26fcd23955fd</anchor>
      <arglist>(ProcessState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CombiningNode</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>af870a9d87a735c1d423d2ca0de7a3b5a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a135067dec21358c2342fcfc391029fe7</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a8f8fb907b393521cef6f0a6e90107e5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a535806bb0dba560417304473604bcddd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a1d951482d00ca220031d41db5d9d05c9</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a2dbb8e56f9c58d47259cdf1415fba1ce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>ae00c3bc33ba82a9df9ee710e4c18566a</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>ae08f73aee5f55a8d8ca11225c7d2c64a</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedBytes</name>
      <anchorfile>classtracktion__engine_1_1CombiningNode.html</anchorfile>
      <anchor>a3a492fc7e1c8ee3fe84345c827b3bb6d</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CompFactory</name>
    <filename>classtracktion__engine_1_1CompFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>CompFactory</name>
      <anchorfile>classtracktion__engine_1_1CompFactory.html</anchorfile>
      <anchor>a8732a8952611216d55711958ae16d0c1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompFactory</name>
      <anchorfile>classtracktion__engine_1_1CompFactory.html</anchorfile>
      <anchor>a6d98b3dd00d1d0e160d8d19a3d7c1c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompManager::Ptr</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion__engine_1_1CompFactory.html</anchorfile>
      <anchor>acc0aa27635ea3cb3a05be4552ca976d0</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CompManager</name>
      <anchorfile>classtracktion__engine_1_1CompFactory.html</anchorfile>
      <anchor>afb0aab3f805baf9995f7d3c80f201b47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CompManager</name>
    <filename>classtracktion__engine_1_1CompManager.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab7c80dfff3d79a20ca5d17631fd8b492</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompManager</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>af357f94459610f453af528fa3816faf9</anchor>
      <arglist>(Clip &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompManager</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a8e2c84747ba43a94d519cbf4d65de6f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a70046a36dfbc5e706c51f14ce79a911b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ac458dc0bc84f43e99adaa51e88c94fb7</anchor>
      <arglist>(int takeIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>aee1f3e5b253b6f0cdf9c09652f2e169d</anchor>
      <arglist>(int takeIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a1e85173cbdc12382ba78dbcb02cbeb3a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a2081ebe338993fc175b57856ff5e0b35</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ae7684fa04aec0ae35ae6aa8211cedaba</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ae78640ef106cfca0ebafa83d7e5318f5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab6271c0c16081c39d4eb5f4a6ac52098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a88aac964e635b5d2d42dda5009ba2219</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>discardCachedData</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a29b745671d9fc3224e5bee75b11da7fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a115e554a23ba5e930fe9c5dd033a90bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a87f7bfdb35071e48bdbd106eff7c6cb2</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ValueTree</type>
      <name>pasteComp</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a2b41ed39797fe8ae5c74a2b785ab71ab</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip &amp;</type>
      <name>getClip</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a0983df8229c357bc16d4c098cddba772</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStripToUpdate</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a31b069ac4c831f5cc950c71e4c8ad63f</anchor>
      <arglist>(juce::Component *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldDisplayWarning</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a705db6e431d72137d81e255681b14b4e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getSection</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ae89d14fb6bff61256091d8af441b3482</anchor>
      <arglist>(int takeIndex, int sectionIndex) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findSectionAtTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab679dff5e637c7d5a3efad7c431a38aa</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findSectionWithEndTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>af70a7cbe0d96a61271b86d5bee3df02d</anchor>
      <arglist>(EditTimeRange range, int takeIndex, bool &amp;timeFoundAtStartOfSection) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getSectionTimes</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a5b9e98b8ad3e1cc705d5c87030f2e471</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getTakesTree</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a8264323ccf495adbe2fa5a7397db1c51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActiveTakeIndex</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a934120025ccdd741825e2ec4c23ac6e0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getActiveTakeIndex</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>af993d80c4f671e6d5aea0fcb5a0f4aaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getActiveTakeTree</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab35090fad40de599cf27d0e192371f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a79ffe08c8c5e6edd11cb7327e4adc8fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumComps</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab9cc8bdd6f2aa5b9a0547e2c0c8038e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTakes</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ab8af1770d1dad9a876ba872cdf6a1e2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTakeComp</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a037370b8370b63d5270dfbee08d0bba1</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTakeComp</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a59c62704d04d84b1bada1ec03e211fa1</anchor>
      <arglist>(const juce::ValueTree &amp;takeTree) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ac962da1e0585e7c80733047398391028</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTakeName</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>aaaccd7c66de0c05c8457a684a46ab7b2</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a146ade83dd0db791f8dc5ee3b5388e48</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxCompLength</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a8e1f7f4073cd615e179135b2933077ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getCompRange</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a59536875b0c08edd44fe473b759b8431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatio</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a33705608065bfded64eccef02dc190ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTimeMultiplier</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a99cb8a780969a7752a1d26fc3bf5bc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getTakeHash</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>abf612b0d767e06456d66ae8792f8611f</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeSectionIndexAtTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ae18ed736340800b2cd7c7c24cef93020</anchor>
      <arglist>(double time, int takeIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSectionIndexAtTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ad30ff15b8cb491fc7debbb03f416a8bf</anchor>
      <arglist>(double time, int takeIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSectionEndTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a8121f407baf778ef904898978b68b811</anchor>
      <arglist>(juce::ValueTree &amp;section, double newTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSection</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>abf6684e9b9da8f428acbddd437ae496d</anchor>
      <arglist>(juce::ValueTree &amp;section, double timeDelta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSectionToEndAt</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>af1d71292efd46a8361f6948f4ad599b4</anchor>
      <arglist>(juce::ValueTree &amp;section, double newEndTime)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addSection</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a271375497292d44d0c3d28b8a37e5eb4</anchor>
      <arglist>(int takeIndex, double endTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSection</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a62440ec3e92a503b4a653390b361fa8b</anchor>
      <arglist>(const juce::ValueTree &amp;sectionToRemove)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>splitSectionAtTime</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a3ce9adc4add7bafb57b63214c630a4d3</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSectionsWithinRange</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a9c145ec314c81511a3099af3031611d3</anchor>
      <arglist>(EditTimeRange timeRange, const juce::ValueTree &amp;sectionToKeep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a04e5ae90484c26e7b39666ef8f15b63c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>keepSectionsSortedAndInRange</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>afc982012c59ba3ebc7bd2a1130bbca69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::ValueTree</type>
      <name>getNewCompTree</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>afb307328ab19813fb45e0d9433d6d961</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>takesTree</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>af7c60ec8869cd13cc596134891c7fb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastRenderedTake</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>aca486dfefcb2eb2bd4c2c28f6c279951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HashCode</type>
      <name>lastHash</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a360f2513a23073ad305c595656cbdc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxCompLength</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>abd723676f69472f1d1aaa9da9ac8fb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>effectiveTimeMultiplier</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a6a24dc622ca08ff56acc847e17f3e305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastOffset</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>ad5a693a87a273345d43653f6e399806e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastTimeRatio</name>
      <anchorfile>classtracktion__engine_1_1CompManager.html</anchorfile>
      <anchor>a56aec00bd109d92f5a09ec44bdfd9a3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectionManager::ComponentWithSelectionManager</name>
    <filename>structtracktion__engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentWithSelectionManager</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>ac134f7c8fdb060d8b9eeaaacb8ca3125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComponentWithSelectionManager</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>aaf8885aaeeeffcd48de09771e8e35a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectionManager *</type>
      <name>getSelectionManager</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>ab8a1a52a47abe1c2918410fd223041d5</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CompressorPlugin</name>
    <filename>classtracktion__engine_1_1CompressorPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>CompressorPlugin</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aac4470fd3abe2e82529e24c5460f26b3</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompressorPlugin</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>af844342aa8a3253dbde001bbecfde66c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getThreshold</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a587175218cc638176b1033bc7a62c792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThreshold</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a6ebd4aa5207352a7a8e8c64f0de69e8f</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRatio</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ad8717744d2f8caf581f4657cfa8b616d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatio</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9ad37506307de7abbb011e572864cb08</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a12fec2a19559672eddcc8802cbfa00c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a2b9d71d4a9810a0556722b38d49f834b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a95edb9e3bade9031c4fdf1d325997564</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a8cff9c7969db49737a4021409d66426d</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9d714d3eb72cd0e4413255f48f724719</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aa96d103a69f2e7eefcb0a57dcd740723</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a4bb7ae47eb23843da9bcfbab1e9c84ed</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a90fc6f8d5839693fb78d188e7d45c094</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>af5ef45df8059ce21ad02987491af96b3</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac1d9aad0c57eae4a6601a4ebda80dd89</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac1c6dcc67adb0d5d75ad88d69318c771</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a22ab7175dfc6640416b8de0cd5f280b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMinThreshold</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ab49b2cae4d9609a98f7e2579a09d61b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaxThreshold</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a99700495a0ec4dc1b9517ffce13ad393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>thresholdValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a211d537d2983b9558ae73b99bd101a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ratioValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a729cc0f2f1365615e7cb200a3760385d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>attackValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aca6ffda07f19cb524d6fcb9dde66ded5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>releaseValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a34ef2b51a2cb8ce2a096301cb1606c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>outputValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac8bba814ae2d185eef183d8f52b603a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>sidechainValue</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac0644f0559128e56b6d195080489f696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>useSidechainTrigger</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ab0f1eef110a1ca9d67d593caa47a25c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>thresholdGain</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a61769f11b8e36f2c1adb479d20b86432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ratio</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aab85155ea6d3bfca47e8d7d416779a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>attackMs</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aeaa02710ff172968c6b068bcec6f2054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>releaseMs</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a860ef6be45d451140d7981278e3bcbf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>outputDb</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>abad03da7d7fe49451f47cb281a4847f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>sidechainDb</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ad51beb06cbc01e98f94565abbc03028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac4631199050d93d1fbf25cf8eeb0de51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackCompManager::CompSection</name>
    <filename>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CompSection &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a53cfe727184a89dca07ad8b81dcd5dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a68669111b8fc69a8931068b49ee7a836</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>aec51c4ff0fd370095596e80cfc9a328c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFrom</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>aac90b8b34b81ee2c500579965e42cf7b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a204386e6139d7a454c61b75bc8ac2e15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a589272348d6c5744f7bd3f4240a7d6df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CompSection *</type>
      <name>createAndIncRefCount</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a31e7a0cdf1bcb3c265d7b956a2bd68f2</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>af568a0690b2d84238bb441e41c03cc8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve::Concave</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve_1_1Concave.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Concave.html</anchorfile>
      <anchor>afdf0c59c95dd1b2535f7c1166cb040aa</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Concave.html</anchorfile>
      <anchor>a37c19d75f36042b790d9451eb5de776c</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::ConnectedNode</name>
    <filename>classtracktion__graph_1_1ConnectedNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ConnectedNode</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>ab19848ea8f4afdaca2b9970ea3f4a7f0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectedNode</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a9df16ff2170f5e2393c075116cdfe467</anchor>
      <arglist>(size_t nodeID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAudioConnection</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>ae391277b4f0e12d653a01e37834a7467</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt;, ChannelConnection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addMidiConnection</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a3a36de0b19b06b5bdaa5f8960c69a802</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a1462dc539876378534f27789a6dbb91d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a9a6e966e3896dc53bff34511fa4897a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a0a999c07062ab08a92fd3fb554341bbe</anchor>
      <arglist>(Node &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a42dd13cc1a026e7f094296c33ba9214a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>ad5fafa101bf32ec212ebebdaa1261096</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a9da16cdcca068db6cc1ab28818a76695</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ConstrainedCachedValue</name>
    <filename>classtracktion__engine_1_1ConstrainedCachedValue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adb5346e09584481112c515060ba9ee3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a49c4b2448672e414131810c497282727</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a90ab683ab9e47ce302d8415aba4173bd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager, const Type &amp;defaultToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstrainer</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a60ea9814b6d450b1a865efd8e8def191</anchor>
      <arglist>(std::function&lt; Type(Type)&gt; constrainerToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Type</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a7d29143e4d7c5c94235b3e988b9b325a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>abb5ee4d2c61329c35c5e793f4a4098ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>operator*</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a739c54d02235453551958dff2931db95</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>af08cca313ca29be2cc438b0beea067c3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a98be44396491716a19084147b1bc4c07</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a8b8f320a1f0d1fb269368a093236a8c8</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Value</type>
      <name>getPropertyAsValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a0bbd0158f03d656316c969c96090d10a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>aaa5d77b74b4249180f2373358ab9c3c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a500d8173e414f8c46f3f81141af954c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstrainedCachedValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae7ba402ff1db1ff124608f0aa10b393c</anchor>
      <arglist>(const Type &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adcd3ff25fc4248760050034f99cd4606</anchor>
      <arglist>(const Type &amp;newValue, juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a744050d32c472791239a07db4844f2c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adaf017888e941bb3d14a390c17d18d03</anchor>
      <arglist>(juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a002a51b6bc939ed472a81300536d2219</anchor>
      <arglist>(const Type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a91b16f6a9cb03778e011fb22c4d75879</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a055bbfcab221869f1be206d6feeaeddd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *, const Type &amp;defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceUpdateOfCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae34e4892e10f46c639ad6fe2e34c5d7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>af4b31bf170ef9dfe2b91fa71afd36535</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Identifier &amp;</type>
      <name>getPropertyID</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a3dc48d11dab9bda96964fb9864760798</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConstrainedCachedValue&lt; float &gt;</name>
    <filename>classtracktion__engine_1_1ConstrainedCachedValue.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adb5346e09584481112c515060ba9ee3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a49c4b2448672e414131810c497282727</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a90ab683ab9e47ce302d8415aba4173bd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager, const float &amp;defaultToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstrainer</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a60ea9814b6d450b1a865efd8e8def191</anchor>
      <arglist>(std::function&lt; float(float)&gt; constrainerToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a7d29143e4d7c5c94235b3e988b9b325a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>abb5ee4d2c61329c35c5e793f4a4098ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator*</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a739c54d02235453551958dff2931db95</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>af08cca313ca29be2cc438b0beea067c3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a98be44396491716a19084147b1bc4c07</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a8b8f320a1f0d1fb269368a093236a8c8</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Value</type>
      <name>getPropertyAsValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a0bbd0158f03d656316c969c96090d10a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>aaa5d77b74b4249180f2373358ab9c3c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a500d8173e414f8c46f3f81141af954c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstrainedCachedValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae7ba402ff1db1ff124608f0aa10b393c</anchor>
      <arglist>(const float &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adcd3ff25fc4248760050034f99cd4606</anchor>
      <arglist>(const float &amp;newValue, juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a744050d32c472791239a07db4844f2c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>adaf017888e941bb3d14a390c17d18d03</anchor>
      <arglist>(juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a002a51b6bc939ed472a81300536d2219</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a91b16f6a9cb03778e011fb22c4d75879</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a055bbfcab221869f1be206d6feeaeddd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *, const float &amp;defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceUpdateOfCachedValue</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae34e4892e10f46c639ad6fe2e34c5d7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>af4b31bf170ef9dfe2b91fa71afd36535</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Identifier &amp;</type>
      <name>getPropertyID</name>
      <anchorfile>classtracktion__engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a3dc48d11dab9bda96964fb9864760798</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::Consumer</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1Consumer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Consumer</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>a102c12798e4ff80f43f576a93d994e02</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptInputBuffer</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>ac08aa72d65c80763b4b38d243780d238</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>a7473d87f549587cc9e2c94093f2b90a9</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>discardRecordings</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>a927618459c9ab2f21a1b9095eb2ffe52</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::ContentType</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1ContentType.html</filename>
    <class kind="struct">tracktion_engine::Clipboard::ContentType::EditPastingOptions</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ContentType</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>ad32174e6bef097aa6a647af70b99694f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ScopedSteadyLoad::Context</name>
    <filename>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</filename>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a17d91c30a2b1d7046e7744905cbdd63d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a11b640cc0222f87322c19928cb0873d5</anchor>
      <arglist>(double sampleRateToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a30337e333ebb1cf6acef242f56834844</anchor>
      <arglist>(double newSampleRate) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadLevel</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a95d8f2f286d71bdd10f6fd79247b9e5b</anchor>
      <arglist>(float newValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumNopsPerIteration</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a6f0721d2f4c1a1f5147fbe4896c809ed</anchor>
      <arglist>(int newValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumCallbacksToIgnore</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>acd281ae6f74beda506d7a29f6a5b3616</anchor>
      <arglist>(int newValue) noexcept</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ScopedSteadyLoad</name>
      <anchorfile>structtracktion__engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>ac84e35b1e4d6b7f28fcc23461fcba30b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DeviceManager::ContextDeviceListRebuilder</name>
    <filename>structtracktion__engine_1_1DeviceManager_1_1ContextDeviceListRebuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>ContextDeviceListRebuilder</name>
      <anchorfile>structtracktion__engine_1_1DeviceManager_1_1ContextDeviceListRebuilder.html</anchorfile>
      <anchor>a277b3f84859d1db3cf58a227d6715fd6</anchor>
      <arglist>(DeviceManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ContextDeviceListRebuilder</name>
      <anchorfile>structtracktion__engine_1_1DeviceManager_1_1ContextDeviceListRebuilder.html</anchorfile>
      <anchor>a4029ea9253db68b7559e394d3ca8ecec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>DeviceManager &amp;</type>
      <name>dm</name>
      <anchorfile>structtracktion__engine_1_1DeviceManager_1_1ContextDeviceListRebuilder.html</anchorfile>
      <anchor>acd33d8bc8e4edeb4ae1455da247c8a8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ControlSurface</name>
    <filename>classtracktion__engine_1_1ControlSurface.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>ControlSurface</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a65fb39007453c5eca958eae15980a695</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ControlSurface</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4b9a19bd34e9b0440fa283a46806e614</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a04bcaa9b95c9a186b5e46eeba1d4bd5e</anchor>
      <arglist>([[maybe_unused]] bool connect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a31d5d778c15606ad631ea0902fa1e316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateOSCSettings</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7e9281a583adb820cc23702f720f2708</anchor>
      <arglist>(int, int, juce::String)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5e55137f5323954b8161d61ee93837e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>numExtendersChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abe704c5cbd577204aeb586027a03d50f</anchor>
      <arglist>([[maybe_unused]] int num, [[maybe_unused]] int main)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a14790ac6cd5851279c8c8413db5aac25</anchor>
      <arglist>([[maybe_unused]] int idx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9f8866701873af7b5a9517923dc137c6</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a43392909107121ec43f9deac6c577154</anchor>
      <arglist>(float newLeftSliderPos, float newRightSliderPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa26d000adc66b45316b224c5130769cb</anchor>
      <arglist>([[maybe_unused]] int channelNum, [[maybe_unused]] float newPan)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a65ba7cd49fd7721295ec7c3e8c9ef5ca</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] const char *bus, [[maybe_unused]] float newPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abe05ddc8b33b226348a5805e3bb04025</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6a6ec80d213103db3448b1b72eba1cdb</anchor>
      <arglist>([[maybe_unused]] int channelNum, Track::MuteAndSoloLightState, [[maybe_unused]] bool isBright)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8716a6ad82e35d69255ad1744ed65d45</anchor>
      <arglist>([[maybe_unused]] bool anySoloTracks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6c1fe5932cb6c83258351da13b18ce0d</anchor>
      <arglist>([[maybe_unused]] bool isPlaying)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5d7854fac7c530225ce37418f5f03147</anchor>
      <arglist>([[maybe_unused]] bool isRecording)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aab9fa0bf354fdebd609ff287f0921783</anchor>
      <arglist>([[maybe_unused]] bool isReading)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a39e27792985076ac04c6c1d52d92f11c</anchor>
      <arglist>([[maybe_unused]] bool isWriting)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac7b5031c6b20578e4428ba63ebb6b5dd</anchor>
      <arglist>([[maybe_unused]] int newStartChannelNumber, [[maybe_unused]] const juce::StringArray &amp;trackNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a35028c0449120c2b5afe42db66c66b0f</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] float l, [[maybe_unused]] float r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>acdf78af1d991e7677422ae3a7caefeb7</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] bool isSelected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7e02ee918eff7c578570e27a6fe38236</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] bool isEnabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a683ebefe3ab7992b857f587bf923153f</anchor>
      <arglist>([[maybe_unused]] float leftLevel, [[maybe_unused]] float rightLevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a30cffad9456ff3ccb10f4da1b3aef264</anchor>
      <arglist>([[maybe_unused]] int barsOrHours, [[maybe_unused]] int beatsOrMinutes, [[maybe_unused]] int ticksOrSeconds, [[maybe_unused]] int millisecs, [[maybe_unused]] bool isBarsBeats, [[maybe_unused]] bool isFrames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac4a0d1d61c3338cb4545c5e2da6713d3</anchor>
      <arglist>([[maybe_unused]] bool isClickOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac85b8fa766553ae8bebc8e3fdf1ccf01</anchor>
      <arglist>([[maybe_unused]] bool isSnapOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a391e6af89a3b265625484f93e5577366</anchor>
      <arglist>([[maybe_unused]] bool isLoopOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae6095af5f5693af9fc86e9db42c521fb</anchor>
      <arglist>([[maybe_unused]] bool isSlaving)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa18da21e482487999111037890203e08</anchor>
      <arglist>([[maybe_unused]] bool isPunching)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2d808d89f0ab5afd8b7a38efe339df67</anchor>
      <arglist>([[maybe_unused]] bool isScroll)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a97047d910aaba24c58b4711e6eea7ff8</anchor>
      <arglist>([[maybe_unused]] bool canUundo, [[maybe_unused]] bool canReo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>acdf781d3fe184a12c7ff1eed00488d5f</anchor>
      <arglist>([[maybe_unused]] int parameterNumber, [[maybe_unused]] const ParameterSetting &amp;newValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>afb45d931bc0bd5574d382f342728c402</anchor>
      <arglist>([[maybe_unused]] int parameterNumber)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3d25bc4b61327a27c74649beb31349ff</anchor>
      <arglist>([[maybe_unused]] int parameterNumber, [[maybe_unused]] const MarkerSetting &amp;newValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a098c8b437d11a10fecb99c9d72d76bb1</anchor>
      <arglist>([[maybe_unused]] int parameterNumber)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3cf35cf7f21d122bf25421e80aa7707b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a355b3c986c7694e28740bb65af7f27f9</anchor>
      <arglist>(int, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a19a7e115567188e9f90a6049c4e84f20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1a59f776d4aa636841f03d3ff3a0dd41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad3bb84d6b90d05bbb35bbc94819a4871</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a17b0cef75f99322affad5356e1997803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a596f83aaa7a9aee472fb9e78a23cf94a</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad5b31449c11f35a9a82c70dc996d8330</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>acf94bbe2b8bebf59f9dd93515b6ce706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4dafb668427236e9b91841202819bcbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7a0b27f0172a65830b9a5fd94a50f6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6d36626fbea1052150d3fd4bcba1b90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a850dfa1575c15d0137f6ee130e1aab7f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abeb1d0f36f9fcec9a0ce90cda76ef470</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentEditChanged</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac675d8ec154acc3a69484b544a5007d9</anchor>
      <arglist>(Edit *e)</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1134fd34d5a26aa30678bc35236280f6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TransportControl *</type>
      <name>getTransport</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a562477759c3e2240ad24f74a891da4c0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSafeRecording</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a66cdb38993206784b68190d44160c806</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMarkerBankOffset</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1824e3d951fe517dbdf9afb2f3e73a20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderBankOffset</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>afbc3abda0d522976ed3850d40e6d529d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAuxBankOffset</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aecb722a8633b9b600d3c9e8d17376ef8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getParamBankOffset</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5898c5df38d824be45a26084594edbcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7503907b7878b635f7b90e113073c2c7</anchor>
      <arglist>(int idx, const void *midiData, int numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa176a8a2a1f63f8d61cd00f853a4f233</anchor>
      <arglist>(int idx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiArray</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae4b488ea64b4d781e94e6dbea641ee83</anchor>
      <arglist>(int idx, const uint8_t(&amp;rawData)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedFader</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac959ce0e8af4868905807b936081480f</anchor>
      <arglist>(int channelNum, float newFaderPosition, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedPanPot</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8fe54cf4ba01d094700a587b4efdf46a</anchor>
      <arglist>(int channelNum, float newPanPosition, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterLevelFader</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a12114db057354a64e0f1dc8a16ed4da3</anchor>
      <arglist>(float newLevel, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterPanPot</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a76950c9b2a641d7e53e42a625b686f96</anchor>
      <arglist>(float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedAux</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae161e8a9df7738c616612d03d4c5b183</anchor>
      <arglist>(int channelNum, float newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAux</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>af91c9a000401d54f11832e7855f60e3d</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedQuickParam</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3f4cca7a24e8a0e472a499c5ae4727c0</anchor>
      <arglist>(float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSolo</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a39b64172ec3644b04f58b01d4c5d89e0</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3c8d5ba45dfeb3bb1963b35dd51b3264</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMute</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3f69bddfb2d319f04dbcb7b0aee1c747</anchor>
      <arglist>(int channelNum, bool muteVolumeControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedTrack</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae59a803a21c78099ed36a84add40bcbf</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedClipInTrack</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1e54c8610aa96ed78f04a942386e6ac8</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedPluginInTrack</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>adbe72b82037bc01efb89f23bcd21d85a</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRecEnable</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aae6fb154781f9fe30eecb68843c679ee</anchor>
      <arglist>(int channelNum, bool enableEtoE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPlay</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a41c97d82561dbaef116e96fdebdff79b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRecord</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab693aedb13fb1404f6d12079ef4cabc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedStop</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9488bb6925ca52a7c8aba7c4505e5fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedHome</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a837992fac3f0935262c270938aed4874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedEnd</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a59aa5c4f666e9d41c1af808c4d4977d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMarkIn</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac18b3934405c926c789969347a3c9be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMarkOut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aded9f7ed21bf870c2ddf2fc2a5747cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAutomationReading</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aad6a6cc967c49704f68ca07bda9497ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAutomationWriting</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2032fb20257df2b54d9d76da1d1a541f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledBeatsSecondsMode</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a90e19c85439492317b7a088a6afef9bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSave</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a49f0de77a015bbbd9b2858a6c26dc3a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSaveAs</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>adfbd6087ef7ee29fbaf4e93fc52bf517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedArmAll</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a65358815173baee13bf42273e85d68b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedJumpToMarkIn</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9b3f56427a6feefd03fa0b09dc3a7666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedJumpToMarkOut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab803995584060a96897e51fbf2ff401e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomIn</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac9994d17270823d2c715cb84f2d9ef52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomOut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae3a1520378a9f65b7c955259c5cbd3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomToFit</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>af1a972cf278a64c7432728326e063a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCreateMarker</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3513c52dbf241dfce44aa6fcc813d400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedNextMarker</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad6dfc053586fdbb1531ebfb719695332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPreviousMarker</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8fb22dbcad17d5135095e5f3c1ad5d3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRedo</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a967863098a8984a3295f541182d67f12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedUndo</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a049412cd49b34257482f1e31fdc03ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAbort</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac083b5cc607413cfcbb2179c979abf4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAbortRestart</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>af727cf7f9df6acd82da3093ee7f99314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a11ee05285f88a3e04e5c94887fb5f11b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCopy</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4f87594d81f7edc176f66c5f3cf8b441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPaste</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abac1430cf87e514c58ce35cf27c531eb</anchor>
      <arglist>(bool insert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedDelete</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a83d0affa799d4cd234c3f609261c7953</anchor>
      <arglist>(bool marked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomFitToTracks</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a06c7abd318f59414086e5b662be679f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertTempoChange</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0bce286ca396fe53fcf3e79b552574a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertPitchChange</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abeb5cf123b89a7377e0ab30ace16be22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertTimeSigChange</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abca6197142f9d65e004e9e6911147ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledVideoWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8553f0df247cdf766d0c301555a074c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledMixerWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abcd8741fde18ac5017dd741b6fb93d2c</anchor>
      <arglist>(bool fullscreen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledMidiEditorWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ace88cdc59893229a8721e9a725e89a43</anchor>
      <arglist>(bool fullscreen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledTrackEditorWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a535391982d1bb4fe601b45405c0d48fc</anchor>
      <arglist>(bool zoomed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledBrowserWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a525af4badb94ae808c5ae88bcf693c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledActionsWindow</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a228c5b374fb5fe5dd7742c5515e1d544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedUserAction</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a68d61cc86a9b8a517ce6de43aaf35d43</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedFreeze</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a02f5f1c55e3c3b65f615c0ce09c7c986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedClearAllSolo</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5f3347cea731ecad12e2cab3e7335afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedClearAllMute</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9c35ed19db73cc516e63777fc401ea4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledLoopOnOff</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a960c93463aa0a53ba86818ae55922357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledPunchOnOff</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aeb84d7cefb37597b6c9100edd6d113f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledClickOnOff</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a85309469f2c42f2e9ce44bdccc29b727</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledSnapOnOff</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a91f769d0c738f704f14ac9f731705181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledSlaveOnOff</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0fd7254a1b3c48e876ba46b88a2032d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledEtoE</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2484c921b331051eba555e02963e705f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledScroll</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6343e87d559b85cce96f109e988d7d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSkippedToNextMarkerLeft</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4b08798208d47b4fc47a8aad7689ca2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSkippedToNextMarkerRight</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6a81145928fabec2fdb08424a8db7b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userNudgedLeft</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a27548ed5ce52a7f29e907f0e6470c88f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userNudgedRight</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>afdafe3c8955790cdb98fac160e6bef10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedIn</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a48330b4d164ad039baf14a75c8a679a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedOut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>abf4e0a5dbf328878c808a17bb1478738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksUp</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab4f7fe13871b9c8fbd0e0a1032738537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksDown</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab424557ba283b0b70998d2a5077bb273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksLeft</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a498f69104609231de1507e584569a727</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksRight</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2a666b89c657a60dda8615dd674990e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedTracksIn</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>adcdd3c86f5614d360ec0a332de5aa8d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedTracksOut</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a46813975b42f337222670f166590aaa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObject</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aaf6435182e61859e0b54f663a52f0796</anchor>
      <arglist>(SelectableClass::Relationship, bool moveFromCurrentPlugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePluginsInTrack</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a24d524e514397d9bd8ca26c042588623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedFaderBanks</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5022d3cb407d50306b405d3ff1c22215</anchor>
      <arglist>(int channelNumDelta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedJogWheel</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae0e5d731cf3f81bf4445c4c5648d3934</anchor>
      <arglist>(float amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedRewindButton</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a58d42bf922e5c85c4fd8279756ec4601</anchor>
      <arglist>(bool isButtonDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedFastForwardButton</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a54b3464097f27dec2d6e2c4f36e715cc</anchor>
      <arglist>(bool isButtonDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedParameterControl</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>acf3c2d1dbf3eb68f25a67827d6d05daa</anchor>
      <arglist>(int parameter, float newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedParameterControl</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a410e59f3f00a3b2b6c2e63eafbcde1d5</anchor>
      <arglist>(int paramNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedParameterBank</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7a9d81005c00d7f785f2e79f9dadf3a0</anchor>
      <arglist>(int deltaParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedMarkerBank</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ada8b562edce1aee976f929092b795b79</anchor>
      <arglist>(int deltaMarkers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedGoToMarker</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a040b50a375ffd53c9addd740de7c438f</anchor>
      <arglist>(int marker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedAuxBank</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a124963584ceeba4b961bf3605f7d07f1</anchor>
      <arglist>(int delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a66f09922efa53490cb41d144112471f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6e607c442d23905ed7134dfbdd19d217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawSelectedTracks</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>af76df41c4594b7d340b4088e89d0f35f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEditIfOnEditScreen</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7b3be340637dece1b70e1f203aec6db5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>deviceDescription</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae26c3cf2d983524f2842787e08add5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>supportedExtenders</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a367a621d4b245d44a7d1aec9576ed262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8abce7e5372f17f9e163aa881aa15271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>midiChannelName</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7f2749aa30c3cbef5bca8b61838f29be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsMidiBackChannel</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a091383f8dbeb87b2e34192671085dc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>midiBackChannelName</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a47f051c5cd94b2b738e3cd1576589bc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsOSCSocket</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aae7a67ad4b7d9e6ff4f35c3d0941515c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wantsClock</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad8549e5253f75cef583a255e97f52d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>deletable</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4a7c89c6e2280ee294094ef891ddeeab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfFaderChannels</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9a67733b6f5a2da2a280c98b79563cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForTrackNames</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6e0734c222890f19d00c64764f4e7899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowBankingOffEnd</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad06df88b5c7df566987204ca6220026d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numParameterControls</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a480329faf5610331e10b04b0cf33f8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForParameterLabels</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a246002a50ef84407a3411559a90ba861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numMarkers</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a81bc9b9eab03f7a3cb9d0ee39726677b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForMarkerLabels</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5135b3749a7a5e2c8e5d009967fc68fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>pickUpMode</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1454b8873950b4598adcac82c5210bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numAuxes</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a659182bbc2072108109fd94a2fc319ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForAuxLabels</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a88af7ced8998a76466c95230bbe07c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wantsAuxBanks</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aaa180ae0a8eb5fec13573470890beb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>followsTrackSelection</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>aef2c1db1168698c19917a80b36314c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2fa7eaf4fbce7f68ee8b9569d9466910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExternalControllerManager &amp;</type>
      <name>externalControllerManager</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>af895c4427c5248d6323efa87b2d8f191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExternalController *</type>
      <name>owner</name>
      <anchorfile>classtracktion__engine_1_1ControlSurface.html</anchorfile>
      <anchor>a359dd5e86bfbc2a70a0aa718a800222a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EngineBehaviour::ControlSurfaces</name>
    <filename>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>mackieMCU</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a8445076136219ee0526d093ccbb2192b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mackieC4</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a5afbcc5cc818b567f9e654c5c2e66dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iconProG2</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a67a254f0a7f80869a13e5849b77d1d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>tranzport</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a0497bf28c2f538cf43cc1adab21de42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>alphaTrack</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a57588a5c837100991afdc3e4ad588811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>remoteSL</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a43349a00648d3e5b9a827c641fdfeedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>remoteSLCompact</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a64cc6c20848e2ab5671031bfc5373cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>automap</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a68e0758aa81042e6421654ec47d51d5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve::Convex</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve_1_1Convex.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Convex.html</anchorfile>
      <anchor>abe872845e46c05d9b3a0b5064e084950</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Convex.html</anchorfile>
      <anchor>a09dd05124c606fcd03244bd0045e585b</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MackieMCU::CpuMeterTimer</name>
    <filename>structtracktion__engine_1_1MackieMCU_1_1CpuMeterTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>CpuMeterTimer</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>af3f2f5c489336be58beccc59f7eba331</anchor>
      <arglist>(MackieMCU &amp;mcu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>ac4b8a40b8c98e6784173a1964047a68c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>MackieMCU &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>ab4187144ce3f9780df9af142b5a5dfe4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DeviceManager::CPUUsageListener</name>
    <filename>structtracktion__engine_1_1DeviceManager_1_1CPUUsageListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CPUUsageListener</name>
      <anchorfile>structtracktion__engine_1_1DeviceManager_1_1CPUUsageListener.html</anchorfile>
      <anchor>a8d8c411b1c96ad7d59b9a1d4ed626d59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reportCPUUsage</name>
      <anchorfile>structtracktion__engine_1_1DeviceManager_1_1CPUUsageListener.html</anchorfile>
      <anchor>a3b526878697a60766b0c9b6b6624124c</anchor>
      <arglist>(float cpuAvg, float cpuMin, float cpuMax, int numGlitches)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CrashStackTracer</name>
    <filename>structtracktion__engine_1_1CrashStackTracer.html</filename>
    <member kind="function">
      <type></type>
      <name>CrashStackTracer</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a7369ab2e08a3143edd49d429607e9cb0</anchor>
      <arglist>(const char *file, const char *fn, int line, const char *pluginName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CrashStackTracer</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a3873532c27451e66a521ce3623017393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getCrashedPlugins</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a02532af8800d6e8e9414bfae5281c491</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a9c5d742cbfabc90a39f513989c1dc8b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>abd5df5b08a26f05764efc2a6bd377600</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>ad4ce1947499c55a89429faf0d5bad883</anchor>
      <arglist>(juce::OutputStream &amp;, juce::Thread::ThreadID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getCrashedPlugin</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a039ca9eee6c599531f6ad3553040d787</anchor>
      <arglist>(juce::Thread::ThreadID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getCrashLocation</name>
      <anchorfile>structtracktion__engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a565438cbb4295cfbc6a5826bed02ed17</anchor>
      <arglist>(juce::Thread::ThreadID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CreateAudioNodeParams</name>
    <filename>structtracktion__engine_1_1CreateAudioNodeParams.html</filename>
    <member kind="variable">
      <type>const juce::Array&lt; Clip * &gt; *</type>
      <name>allowedClips</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a0c2c9d3f6b0f935174a1aa0bc99c808f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::BigInteger *</type>
      <name>allowedTracks</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>ae16934d6d79e36f05bdc698a28a1cc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioNode *</type>
      <name>audioNodeToBeReplaced</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>ac226ebbbfa09000f722e7a6c2f9cbe1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forRendering</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>aa66fd680672b506bfd6cca1ee424f4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includePlugins</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a89ee47e4ab1c772b224f65a8fdf59707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion__engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a16c159aec34046d99eb61305916bb42f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CreateNodeParams</name>
    <filename>structtracktion__engine_1_1CreateNodeParams.html</filename>
    <member kind="variable">
      <type>ProcessState &amp;</type>
      <name>processState</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a244f1cd9208068c7ee796820724d561c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>ac3e1c434e0faaa2ee85bca0cd3be0212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a375e372af373146e78335ed5eb33db11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Array&lt; Clip * &gt; *</type>
      <name>allowedClips</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a85e52ee2aafffae7b234e5272a30c90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Track * &gt; *</type>
      <name>allowedTracks</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>aa5e144ae14cdfa8f88f530a4784f1de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forRendering</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a5074f3cbf988f2684776d53f3bd76288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includePlugins</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>ae7e690f707c7a345bb06a555ffff5076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeMasterPlugins</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>acd102f65cf2f9d7be292904aef9de228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a24da5326f407ee5d8e1a456bcb8a0c7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeBypassedPlugins</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a7dbe7134f72ffa8fc864b6b354e1e03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>implicitlyIncludeSubmixChildTracks</name>
      <anchorfile>structtracktion__engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a737f587472de0c7245b7fe5e722d2028</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve::CrossfadeLevels</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</filename>
    <member kind="function">
      <type></type>
      <name>CrossfadeLevels</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>aa5866186228b137591e9bc294f67a17b</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gain1</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>adf812d1430599adeb18f8b41568d357e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gain2</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>a9e86185714a6b2a297bc7d267874093a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CurveEditor</name>
    <filename>classtracktion__engine_1_1CurveEditor.html</filename>
    <base>tracktion_engine::SelectableListener</base>
    <base>tracktion_engine::MouseHoverDetector</base>
    <base>tracktion_engine::TransparentToMouseInTrackItemComp</base>
    <member kind="function">
      <type></type>
      <name>CurveEditor</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aeb0c4844864ea74fd4723bb6b214beb5</anchor>
      <arglist>(Edit &amp;, SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CurveEditor</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a26740a4b0f86c463b72031531669b5bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2ce2da370a23daae40da81c3c5245f67</anchor>
      <arglist>(juce::Graphics &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hitTest</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a7aa308182713a11868a0920704e50d72</anchor>
      <arglist>(int x, int y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDown</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6302600b112d0a92f8309c5a19dab0ab</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseUp</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aafcbe80c5ce10740723f05eae50a25c7</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDrag</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa33e302c494d8ac4db0a286cd539f4ab</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseMove</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>af469ea64e46cbd59868d621dbbd77d35</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseEnter</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa91b62c7db584468eb82e5bc2d3e41df</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseExit</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae5ef00b24cafe63c94a531ee3ef50b23</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDoubleClick</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a96a82d384bda7c2f7f0c93451c9bf6ac</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseHovered</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a954effd989e476bbaa6b0f0bdca96223</anchor>
      <arglist>(int mouseX, int mouseY) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseMovedAfterHover</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a284e71d331a15f49fb374a6f10904955</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::MouseCursor</type>
      <name>getMouseCursor</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a317102ae03ce2bd56693bf02ac0792ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimes</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a00492831070b895b0c1340b48d76732f</anchor>
      <arglist>(double leftTime, double rightTime)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>timeToX</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>afafa167231d7049677aef4ee3bed6df1</anchor>
      <arglist>(double t) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>xToTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5a94538ab33a39bd6c8f53126d0d634e</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>valueToY</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ad6b0b31092abe8ee9dbfadfdffe878f2</anchor>
      <arglist>(float val) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>yToValue</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ac472a7fc28d66dd58dacd19f3a08de39</anchor>
      <arglist>(double y) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aae74f8adc8afbd095e60ce569b58e4d0</anchor>
      <arglist>(CurvePoint) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a247d911df563ffb46a343aad0bce56f8</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6c801a4a039df31979800ba8fdbf1785</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a09d6bf5da75f48887db99edf763278f2</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeListenerCallback</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5f616bfd3b24a28b4d78fb02abb546af</anchor>
      <arglist>(juce::ChangeBroadcaster *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLineThickness</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aacf1040c68ebaebe39efd0064355693b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a4379890bec1f6f0e0b74401916ff782b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>afb7057617232e02d839bea48efb371e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>snapTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a105e49b61ae53efd3515ddbbd081502f</anchor>
      <arglist>(double time, juce::ModifierKeys)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getValueAt</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa6ced6f4889dc23ef293845d05910c7f</anchor>
      <arglist>(double time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPointTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>afb9c92fc3f563cf528092831a54a0cce</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPointValue</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a9f6559e9bc949179a41d94051fcd7966</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPointCurve</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a42cea6821fec2ac7b27f28d8e4640318</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removePoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a4164786cc630fec87753e83dcc264178</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>addPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ac5ed6b039436f68ce7e550de44429c53</anchor>
      <arglist>(double time, float value, float curve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumPoints</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a198ec3050c638b645568505e1bab0de0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurvePoint</type>
      <name>getBezierHandle</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>acd4acb9513773357170305c20c8a8c4b</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurvePoint</type>
      <name>getBezierPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab7c90e028ad766c655c854323b383f01</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>nextIndexAfter</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a07b4d3ba3ad11c346178e30eeefed95f</anchor>
      <arglist>(double t)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getBezierEnds</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a11fdf0e13cf74ab3b4451e048c6f7f4e</anchor>
      <arglist>(int index, double &amp;x1out, float &amp;y1out, double &amp;x2out, float &amp;y2out)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>movePoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a7a27f319dca0e5be576f1ecc9691d32c</anchor>
      <arglist>(int index, double newTime, float newValue, bool removeInterveningPoints)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValueWhenNoPoints</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a19f5f24930dbf7044b221dc18267e54f</anchor>
      <arglist>(float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurveEditorPoint *</type>
      <name>createPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae520a2d6cd341dab89853a26fcf0db6b</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>curvePoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a740db8810f804b3767d9ad2a71757b65</anchor>
      <arglist>(int index, float newCurve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getCurveName</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a23bb2c35ea0f3bd9b19fab7dd9c62154</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getCurveNameOffset</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1e6b6e786edeeb14c3805e5f08a77e8f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selectable *</type>
      <name>getItem</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab07d742ee8f77808c9ad84f4dc07fd26</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isShowingCurve</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aef6833f8c06c877a0fe74c9b5cbcd869</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateFromTrack</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a949666bcc68e9416b9fd8ceead032248</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getCurrentLineColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a872fb53484e1bcf0b924ef7ae4528df9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getDefaultLineColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae0db0121da2604aecfc287ecc9868c19</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getSelectedLineColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5fbf06eab1b4f1ad7e0d385d391a8b7a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getBackgroundColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5751027cf229261da6ff9ee70752ff3d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getCurveNameTextBackgroundColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a335d2429b3c5dc0726708df5d5953cba</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getPointOutlineColour</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a7afabb789d0d5335dcd437182aa8e3c3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a647a586e6bec7788a5a254e701df645a</anchor>
      <arglist>(int pointIdx, bool addToSelection)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updatePointUnderMouse</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1c8c58a8e42d8efb8ae8c03a5e378f67</anchor>
      <arglist>(juce::Point&lt; float &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>showBubbleForPointUnderMouse</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a9edf3a4dce40b276597a3834e9799984</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>hideBubble</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a837af40901c44e97b1e198e7e608bbdf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>nonRealTimeDragStart</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a92053d53d9b355bb4c69f35140f3e168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>nonRealTimeDragEnd</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a8f1e112b2f8bc994bdcd2f30f7888e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isPointSelected</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a873803d1b1e707a46122f18dd2e5ce11</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>areAnyPointsSelected</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a66258189d4c18e8f03ec3ae83f40bf6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CurveEditorPoint *</type>
      <name>getSelectedPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a8f5e66c703de9cd28ed53871d6a36272</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a8f4d952d7de7cb5fc5041f19aeef4a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::UndoManager &amp;</type>
      <name>undoManager</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>acb0d9a8e0db11fcb9bc6729c3c947562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SelectionManager &amp;</type>
      <name>selectionManager</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a4f3ff06056c17442351d463ca7775a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>parameterMinValue</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a85e5e6c8f24c56cf8b362c07002d9c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>parameterRange</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a88a4db3152b41719cd316c43a47026f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>leftTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a643a835a5929f2575f79959ceb80b10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rightTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa3599d2094b264a57c9279ccc8b7e7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>firstIndexOnScreen</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5dcdea382e1d19d3d9a123f58ad89753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>pointUnderMouse</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a718e8778af8adf290560aa4ea4ec4c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>pointBeingMoved</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>add07d8751ac7c9befbde8a788db1e61e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>curveUnderMouse</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a152064eae7f4950af4e0aff8433e6a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lineUnderMouse</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a94fadc1f58b292e3b15c13454ef02871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>dragged</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>af8aba513240393ed59c8c6cdb908baf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>movingAllPoints</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a04ec1718c9f0ba8fc2ea63e0313d4a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mouseDownTime</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a44fb4277eda55ad58cda6a8bf0ae2ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mouseDownValue</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a0a02ee52b2d81f8a010544c61784eda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isCurveSelected</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a002ac32128b41d7f803641d301b9bfa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mouseDownCurve</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a3896cb641a63a96f8ad3d592b572401c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>point1</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a330d0cd8f750cfd7b8e3a3be4e7d6505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>point2</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2cd506acafa1a384077cbae99b810ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>realTimeDrag</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1f1cce7d22a83a29ca91a4d222b908ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>defaultCurve</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a7aa86b6530a46bd0dc86c5865ef8008f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lineThickness</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a3b66387bc5f5e6eecb2fa214c577f6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr const float</type>
      <name>pointRadius</name>
      <anchorfile>classtracktion__engine_1_1CurveEditor.html</anchorfile>
      <anchor>a44aa1fcea1ed0c22c22ed59ce65f1135</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CurveEditorPoint</name>
    <filename>classtracktion__engine_1_1CurveEditorPoint.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>CurveEditorPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a7dcd47af1eaa17e7c0ccff3b0d4cc0f8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurveEditorPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>ae0490292bca09c0eb2b18c62588e62b6</anchor>
      <arglist>(int i, CurveEditor *ed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CurveEditorPoint</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a25bef53ec61d9b212dbbe14f2cf88297</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a2bcd8d0ca62c8a64360a659ad41694c6</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>arePointsConsecutive</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a0552e9a3420064f031e96fe5bc494796</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>arePointsOnSameCurve</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>aaa575e8e1d1aaa12be038cb9206a9263</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>getPointTimeRange</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a437e4380f7e29feada60405827dee4d5</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a6d6e6a56ba231815f4d4eca91484e8d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Component::SafePointer&lt; CurveEditor &gt;</type>
      <name>editor</name>
      <anchorfile>classtracktion__engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>ad4bea43a4c7d8bcac3bc16cb834e3f74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CurvePoint</name>
    <filename>structtracktion__engine_1_1CurvePoint.html</filename>
    <member kind="function">
      <type></type>
      <name>CurvePoint</name>
      <anchorfile>structtracktion__engine_1_1CurvePoint.html</anchorfile>
      <anchor>abfa250d916d1bf347691da4055a5ea84</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurvePoint</name>
      <anchorfile>structtracktion__engine_1_1CurvePoint.html</anchorfile>
      <anchor>a8f176e57ede9dcbb89e22f30ccb51abe</anchor>
      <arglist>(double t, float val) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1CurvePoint.html</anchorfile>
      <anchor>a07b4a44120ca1d3a44da02125a3ccded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion__engine_1_1CurvePoint.html</anchorfile>
      <anchor>ad5b9eadc3a698458853259fc628dce63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::CustomControlSurface</name>
    <filename>classtracktion__engine_1_1CustomControlSurface.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <class kind="struct">tracktion_engine::CustomControlSurface::Mapping</class>
    <class kind="struct">tracktion_engine::CustomControlSurface::MappingSet</class>
    <member kind="enumeration">
      <type></type>
      <name>ActionID</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67a255779f0f4262424184647cf23844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa713e9562ddecdc1c3526bc7646767e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>recordId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda068993a4d59bf6a58d5ef74bd4efcb10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>homeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3c67297c29d8e2cbe70d16ea635597e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda41ea921fddc628dd95021fab211e1e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rewindId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafa88af878a3a79a01d9614cbed00e231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fastForwardId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda08f3f9334293c33fe944c6f444a8bcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda417a1fe0a21198d0d32149581d77ab17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9680b3705124422398409f1ad1ec85fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationReadId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4cb86581ac6910b4c0e4c8d7d19cc1be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationRecordId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3bf7a29dec557ff1891baec98d22b273</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae295b910f11a7d8ce0687d61b91f0546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7985b42a7688735d98b159bd8151bcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>previousMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4badbe255512dcd2c22d9c1aa69d234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda07dd64e6884b998c5eefff7ffbaab6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1a090f4411256d6ebfac3456e2b816ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9074b78a18118a694226af7875deb24c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortRestartId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa7490d2c8b0e650d1c43fbf1e21fd0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jogId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda2a482451319fdbbeb8c9f1bc37d23b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda82a5131a5cc7f9cf318d83ca0c8070fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda370a33138bda60ba220ba210e478be26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>timecodeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda66f907f8b054d0fbb5f00ecd76098f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleBeatsSecondsModeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafb0b2375253e8da6f68398a4e3e1c7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleLoopId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9c39d1efdd99cd24a2d362e4d98ff560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>togglePunchId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa4cff2375c06b20c6d0ad7f685ffe220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleClickId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda034fa4de3ba1fcef0aa846017966021d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSnapId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5da8bffa4ec873d3676f5f2038e5931d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSlaveId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67d7afb768f5bf1713b4bc04f8fd2e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleEtoEId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda0f96ba30c5478e694e9d73a6aa7c8c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleScrollId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1b14776929080dc8c9aba0d569431695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleAllArmId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa5f1f3e86a6527b8215206f19c0b4e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad48c57240f2ee7910ad5ab07e2c7228a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeTextId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda724f716f73e740ce5d7b105847df92cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterPanId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b3ddd37ed482756fe03e08c3cb7cc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quickParamId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae599470814c44b585a96af9c6bbd0459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadfe28c59bfd1221dbfaef0dffc031b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramNameTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b1935bfd29f3d7c52f1b5bafe07e299</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda52a970d347ed7355f120fd95ac002bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clearAllSoloId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda603a8b7c2b0d6466911619c702d841ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nameTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda07c43d4242d3a449253a543ffebde20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numberTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda69955c8944e74cca8786df59eecbabf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1e09526d8cbe0fa2927719e66f0e297c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda923f7db90ba161f0def08bd17be19ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5ffcf15cc0fd32c0452c246fc43112f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9d811605ef9098ef4acf8a1b77763fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaf461cb6bffd18da65d69c844d900e0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafc7ff1135e7e5e1a2a827c51664097dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>armTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda35d835f268f53f6ef713a0995ae98a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6c7b76e1ed05e56cdade6405dde01b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8da86aa26ee12865a751abf18eaf6266</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda75d68f532ccaba7dac5fa9dba83e34e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edacb5593b2fd3843663aba3dc0c24db8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9ffe5eb405a322b6b01b27eb41e18b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksUpId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa37ea1ed468ab447cadbd1669716fbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksDownId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaaf08987cea92b0c695f352bd23dda64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaab7b733017c3aa1ffce1172d1699563d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda402f5a85f52bf9ad65c208dd944d2f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad9b5c416dc1012717b1815ae3e5cd379</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaad22a855ad3dced7ab34d38c655bb48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSelectionModeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda757f8c3195e5e6d491841cf5e6d8d83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa083853cc4ca8615aafff988e18cffff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab856052983aa33ebfae58d1c29a4d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectUpId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda98a59bf2b92bb6c55f477e1088febd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectDownId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5ea881b01e23fa5198de99634aca4f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectClipInTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda84b2b0c8c7388d711e5e29381b850403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectPluginInTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edacea46ab5b0743b3b47ed8df722d455a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectedPluginNameId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae46c3013fc46236835350342040c3d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda2e08ac0ec93f4fee608ea9b55a2c3917</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaf64ab47775ad150be399b5a5cf3b8f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab64d1e24f1fa362125bffb791c9b2949</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda15b563842de955146cb2f5c628d307c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaacd69f1519f19c7869d849259b7f7270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edace38d23ee59734f7bcfabea529c4dbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda169b14c8b7285e5e7218bb3bff413631</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac29afaad82549849d26086b939692948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaee3c22950aa6cb73286a7930820f9cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6f0951d40b22ddf6909224898bc20145</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab85b4387ced71c79720925ea05968486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabbedd1409779ab8e1660607d318e620d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda74a9e492d68ac898f4e30e3af7caddc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadeea19fafec4e03f5f94d676db801208</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5feb929859d63172a7afe6badccfcbec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft24Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67f3c07c9f6789a95e7cc742ce0ab563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadcb11622265094aacffd3590c1209a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda137e298122bd7202af6655635b248e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda74f17a32e4fede55b999f0e4cbb2d74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac09a32040ea3aeda9fcbe364c7439e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda02323fdb6ef54387cf89726cd9b97c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight24Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabf17f024056f5e26efb56c6ff65f82ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9a0a7d1cfe2c3d78669d3fbe95b67fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction2Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad5809a931d2fd2359e621809eb5f3c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction3Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaaf103df6c311b611044e75bac296db9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadd6e7a5cc4b7953deeddfdae77d2f830</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction5Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae2cd2977aced4614c1d12a6cd491a40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction6Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac8df05867510d60d508f5a41aa9d337e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction7Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda999730ad97ed9dbb1d616db12e2344aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6a77422ace9c5d494f7258d0b053b23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction9Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4fe3a546676ae77f5543580e42a9fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction10Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3f768f20fe426593f8f41693122b9e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction11Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad769f07e307c0fa972f9b5fbec306d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction12Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda529593050ffd63abda2d70175c91eea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction13Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda584e23d65fdeedb5f6eaca77e52199a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction14Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad751a6d7f60bc3bb75e2264e0bfd1139</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction15Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabf86dfbf846348ae09ef140a4afd5fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9120b3f9b5e5fa70ed400c9692919b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction17Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1ffc8a876c52ea80c86070bde3704280</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction18Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7bd89dc57fc18b8fc7920a228a6bcdfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction19Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b25d1fd885a60b571854994fae16d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction20Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7063d5420d768f228e8cb4bc966669ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emptyTextId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab887c0a64e8e25400ae06a128066b7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaace5e5e8ffc44e5dae7226604c07e2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67a255779f0f4262424184647cf23844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa713e9562ddecdc1c3526bc7646767e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>recordId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda068993a4d59bf6a58d5ef74bd4efcb10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>homeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3c67297c29d8e2cbe70d16ea635597e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda41ea921fddc628dd95021fab211e1e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rewindId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafa88af878a3a79a01d9614cbed00e231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fastForwardId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda08f3f9334293c33fe944c6f444a8bcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda417a1fe0a21198d0d32149581d77ab17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9680b3705124422398409f1ad1ec85fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationReadId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4cb86581ac6910b4c0e4c8d7d19cc1be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationRecordId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3bf7a29dec557ff1891baec98d22b273</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae295b910f11a7d8ce0687d61b91f0546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7985b42a7688735d98b159bd8151bcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>previousMarkerId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4badbe255512dcd2c22d9c1aa69d234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda07dd64e6884b998c5eefff7ffbaab6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1a090f4411256d6ebfac3456e2b816ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9074b78a18118a694226af7875deb24c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortRestartId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa7490d2c8b0e650d1c43fbf1e21fd0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jogId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda2a482451319fdbbeb8c9f1bc37d23b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda82a5131a5cc7f9cf318d83ca0c8070fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda370a33138bda60ba220ba210e478be26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>timecodeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda66f907f8b054d0fbb5f00ecd76098f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleBeatsSecondsModeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafb0b2375253e8da6f68398a4e3e1c7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleLoopId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9c39d1efdd99cd24a2d362e4d98ff560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>togglePunchId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa4cff2375c06b20c6d0ad7f685ffe220</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleClickId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda034fa4de3ba1fcef0aa846017966021d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSnapId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5da8bffa4ec873d3676f5f2038e5931d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSlaveId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67d7afb768f5bf1713b4bc04f8fd2e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleEtoEId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda0f96ba30c5478e694e9d73a6aa7c8c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleScrollId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1b14776929080dc8c9aba0d569431695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleAllArmId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa5f1f3e86a6527b8215206f19c0b4e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad48c57240f2ee7910ad5ab07e2c7228a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeTextId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda724f716f73e740ce5d7b105847df92cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterPanId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b3ddd37ed482756fe03e08c3cb7cc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quickParamId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae599470814c44b585a96af9c6bbd0459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadfe28c59bfd1221dbfaef0dffc031b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramNameTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b1935bfd29f3d7c52f1b5bafe07e299</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda52a970d347ed7355f120fd95ac002bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clearAllSoloId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda603a8b7c2b0d6466911619c702d841ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nameTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda07c43d4242d3a449253a543ffebde20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numberTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda69955c8944e74cca8786df59eecbabf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1e09526d8cbe0fa2927719e66f0e297c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda923f7db90ba161f0def08bd17be19ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5ffcf15cc0fd32c0452c246fc43112f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9d811605ef9098ef4acf8a1b77763fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaf461cb6bffd18da65d69c844d900e0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edafc7ff1135e7e5e1a2a827c51664097dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>armTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda35d835f268f53f6ef713a0995ae98a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6c7b76e1ed05e56cdade6405dde01b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8da86aa26ee12865a751abf18eaf6266</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTextTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda75d68f532ccaba7dac5fa9dba83e34e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edacb5593b2fd3843663aba3dc0c24db8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9ffe5eb405a322b6b01b27eb41e18b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksUpId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa37ea1ed468ab447cadbd1669716fbbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksDownId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaaf08987cea92b0c695f352bd23dda64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaab7b733017c3aa1ffce1172d1699563d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda402f5a85f52bf9ad65c208dd944d2f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksInId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad9b5c416dc1012717b1815ae3e5cd379</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksOutId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaad22a855ad3dced7ab34d38c655bb48e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSelectionModeId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda757f8c3195e5e6d491841cf5e6d8d83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaa083853cc4ca8615aafff988e18cffff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab856052983aa33ebfae58d1c29a4d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectUpId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda98a59bf2b92bb6c55f477e1088febd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectDownId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5ea881b01e23fa5198de99634aca4f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectClipInTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda84b2b0c8c7388d711e5e29381b850403</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectPluginInTrackId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edacea46ab5b0743b3b47ed8df722d455a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectedPluginNameId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae46c3013fc46236835350342040c3d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda2e08ac0ec93f4fee608ea9b55a2c3917</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaf64ab47775ad150be399b5a5cf3b8f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab64d1e24f1fa362125bffb791c9b2949</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda15b563842de955146cb2f5c628d307c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaacd69f1519f19c7869d849259b7f7270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edace38d23ee59734f7bcfabea529c4dbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda169b14c8b7285e5e7218bb3bff413631</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac29afaad82549849d26086b939692948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaee3c22950aa6cb73286a7930820f9cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6f0951d40b22ddf6909224898bc20145</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeftId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab85b4387ced71c79720925ea05968486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabbedd1409779ab8e1660607d318e620d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda74a9e492d68ac898f4e30e3af7caddc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadeea19fafec4e03f5f94d676db801208</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda5feb929859d63172a7afe6badccfcbec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft24Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda67f3c07c9f6789a95e7cc742ce0ab563</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRightId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadcb11622265094aacffd3590c1209a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda137e298122bd7202af6655635b248e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda74f17a32e4fede55b999f0e4cbb2d74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac09a32040ea3aeda9fcbe364c7439e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda02323fdb6ef54387cf89726cd9b97c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight24Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabf17f024056f5e26efb56c6ff65f82ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction1Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9a0a7d1cfe2c3d78669d3fbe95b67fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction2Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad5809a931d2fd2359e621809eb5f3c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction3Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaaf103df6c311b611044e75bac296db9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction4Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edadd6e7a5cc4b7953deeddfdae77d2f830</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction5Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edae2cd2977aced4614c1d12a6cd491a40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction6Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edac8df05867510d60d508f5a41aa9d337e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction7Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda999730ad97ed9dbb1d616db12e2344aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction8Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda6a77422ace9c5d494f7258d0b053b23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction9Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda4fe3a546676ae77f5543580e42a9fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction10Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda3f768f20fe426593f8f41693122b9e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction11Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad769f07e307c0fa972f9b5fbec306d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction12Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda529593050ffd63abda2d70175c91eea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction13Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda584e23d65fdeedb5f6eaca77e52199a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction14Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edad751a6d7f60bc3bb75e2264e0bfd1139</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction15Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edabf86dfbf846348ae09ef140a4afd5fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction16Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda9120b3f9b5e5fa70ed400c9692919b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction17Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda1ffc8a876c52ea80c86070bde3704280</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction18Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7bd89dc57fc18b8fc7920a228a6bcdfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction19Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda8b25d1fd885a60b571854994fae16d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction20Id</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04eda7063d5420d768f228e8cb4bc966669ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emptyTextId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edab887c0a64e8e25400ae06a128066b7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afd5a2df81c9aa2cc64e85994facd04edaace5e5e8ffc44e5dae7226604c07e2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomControlSurface</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae0e0797eb607d6801a5cf8ec7c428e3a</anchor>
      <arglist>(ExternalControllerManager &amp;, const juce::String &amp;name, ExternalControllerManager::Protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomControlSurface</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aef2ab29d77bed2bd3866c6d3e2bee243</anchor>
      <arglist>(ExternalControllerManager &amp;, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CustomControlSurface</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4ec6741b106da74cb8b10260a321e3e8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae24c7e330d5fe3d99906ee4f5df08831</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8eb9c44fed5d8937384662e6b5f1bcbc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateOSCSettings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4191944fd00828af49d9cd24ba4fb890</anchor>
      <arglist>(int oscInputPort, int oscOutputPort, juce::String oscOutputAddr) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5727fb32ab739af8b6cdf58083c0672c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab4e993ee3f667364f13b3b248b3bd702</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a62d167cff95f709332f5bd705a102a87</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a151e3a6e60180642f81314f882302d53</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a45242ea6cef564b69462c33c2297d88b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a491688eb481ce1b166341028392dfa5b</anchor>
      <arglist>(bool eatAll) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ada4fd8be685632337bee00b7ddc1ca1f</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeebf5077a93a77891559a0c34fe7d9f4</anchor>
      <arglist>(float newLeftSliderPos, float newRightSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a857ea3a34ac8197689b5da5696f50342</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa99154dce5ea4a246945a037ce24e8f0</anchor>
      <arglist>(int channel, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9b4f32294579f7608f0e668d6907f688</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a19a7cd8e41c3f381889329bea7b53609</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9b49a8d8b80f82a3d2ed20d232dd6050</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab932b1d230528f476e5ac20b09af3051</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5f97b017ab2eb1a8df691a32b5da1c0c</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a50000f0596e68d51cb5055f011193bc1</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa26213ba11cfe9950d43ae9a86118cb4</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae70ef60cbfaa99bf2e42006320414e88</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac10c902955abdf8c78091a98d209e3ae</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab13e36884b95b340d524db42b466affc</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a63038fa282641f6c0421d73aa65af967</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac5d4fc83ae52dd86f0adcf68b248bb56</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa15a454f6c891607af8611acb4e8ea58</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9b18d94f01b252a8da7af9792a56695d</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a95ae6702a248b611da641a113611fab5</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a80c5eef4c67ca911be5ca1a40717a2fd</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a78deb89b6a7c55a3ef2590fb8084b0ad</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2f310cf9d6b3f11b4b31ca71ad7d5fe8</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac490ef658469a0967eb331e949eae0d3</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad743ca2c341dd94f67785540e01eb851</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acf3c7c7da8359ae67b3ee9234664591c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa00f51170f7e2948efd8704d5b582a55</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a90b20bc645821af404479fdc5f974002</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae15df0151f47f94e4c608363dc78a16f</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5e74d32c04220a8936b1ce71bb7e0f68</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a984c3649fa85cdfc5b844e4c7f6103c6</anchor>
      <arglist>(ActionID, int controllerID, int note, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsEditor</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>abe4d785c1767ca143b2a42169306cd33</anchor>
      <arglist>(juce::DialogWindow::LaunchOptions &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMappings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeed1c726e8ffe167f4f8804408cf77db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listenToRow</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2aa39dd0b9687603f32035f9afcf92ee</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRowBeingListenedTo</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3287713cfab65f56208f85d4b5fe7179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowsManualEditing</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aaebdd0c478649d587e8b702a2cc722fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsListForRow</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acdb2051b61e2958f0b2bbad7b081a53a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLearntParam</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>addaa543ef132c45fc537290d088b8694</anchor>
      <arglist>(bool keepListening)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a08eb88e8a9fc2663ea356160c9f1fd7a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Mapping *</type>
      <name>getMappingForRow</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac780a70896a961252d98d72762abcfa3</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::String, juce::String &gt;</type>
      <name>getTextForRow</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0ed8ee9ad50ed6b8763bfb305fe01ff1</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a91de4096cff8c0c2413f09e93e5d23cd</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6ae064830ef3b3defd1d79a0186ba907</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aad4e068f6e1e1b3558186aad411260bc</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>home</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3c98fcba1513da62b6ee129fe7c8ae53</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac81cab0a6c8bb6525416abdfe6ed02d0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewind</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a34db20e8b0f5d64231a4b0be12ad5f74</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastForward</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aaaa94b8e70411362568cbb93fc7e3cb5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a101b6b0897ed00ae18e66c8a0d488a8a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a45d5abe055cfdc6dd5d527b0409c07f8</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReading</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a91f9207f81bbc4a2b6543bc80f3044f0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriting</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af3a7530a401dd70454bd0b822df70dd3</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMarker</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a40e09a7f2248c52288d952a8f1d0f4fa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prevMarker</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad77d5f8491605cbeca81925ea7b5fd9d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextMarker</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af618079850941179c109521ec66c1bf9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a1d0cf44c92422b7eb7db83081b1e2b02</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8f3261d3e11c312ae22c5addfa9b10e0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abort</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4a21339bdfc02b6e74776eac15d4a2b5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abortRestart</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac32434803c50e2ab1045723c64080582</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jog</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4f9e15ffb4130fc9ade0c79fce9f7b5b</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jumpToMarkIn</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a68581608d756df22c4a3603fcf02bf98</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jumpToMarkOut</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a59f5ea10c630f96748f8813d9916d783</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllSolo</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a84d7eaa558fe4c5f577702021e173058</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleBeatsSecondsMode</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7491eb60f54582a8fa8853f43e21b488</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleLoop</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9b5bfaf90cd67c3d408dd24b4be0600a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>togglePunch</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a62afbe7010b3c4d6a56d2348391c4db8</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleClick</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af4f978b6330a0b330cbe14f312f8b38c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSnap</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a35723f853c261ca8d152475d07285ad6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSlave</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7aaeaaa76744294ff45e3de752b00ef0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleEtoE</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a20257511d704835a24b92548fc5ae79e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleScroll</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2c884ec7d98f16ec6eafbe3184f6cafe</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAllArm</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5806bb27870f9555e65ce52aeb75270f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterVolume</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a56619ea4c8c20e8a9781c50b66a294ed</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterPan</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0e59486e396ad1705036da2be3378261</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quickParam</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9a53a3e4118686c79e9c32aced7f010f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a74432d0bc3ceb618129b4127ec4a2d03</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>volTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a410109c42b549e39fc345ab8ea054cfa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>panTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a127a42e0782c0c9db6b68cf9965d48b0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>adebc566ce90f738d269c118d5684b5c4</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acf094156b647a4f2722c51267012feaf</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>armTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afbe21fb9c7a955c15c0018780d706217</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6012bcb8647300ee700c0c274c945007</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae5684c9d622b93208258dcdce2f8fa04</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a784e42beeafc2712d05f693d92807afc</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeaf7183944148171712012e3affb7e85</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksUp</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac15b6295bf990a66c99a65bf92ccf7c2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksDown</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af9f6c046360e728801bbb8c84fce2b03</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>abb7edeac373256c4c4f6bc1f990f9030</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksRight</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afa735330df8f8cdfbcbd14a7e36fb0e6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksIn</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab32444fd57b91cf88d260eb09ce90755</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksOut</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a1aa1d937b4440152ee3279fe458e6a86</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSelectionMode</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa722d9c03b9bfa966ccd37e910d39d2f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectLeft</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5fc873b72dce75ce7a644b973a950a54</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectRight</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a315a5403ee8ab1c3d3ad4a9c47fceff9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectUp</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a593ad545a224b1b639441c7131807b2c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectDown</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a1bb1a28bbeb2fe21000a9615daad6a43</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectClipInTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a00796c5f12f2ec60403e66c78c47a438</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFilterInTrack</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5d270f9a70f6cae0ea74a1ba338d4a50</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankLeft</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2f15a3e57b20f2ab94cb445dadc09981</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankLeft1</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa4a605715b64f39878e592f488f7840c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankLeft4</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2bd5cd4c3b23d4e87f03fb2924354cd9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankLeft8</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a044ba65743090991d71ebffb3e8ceb29</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankLeft16</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8f3d0a1e459584c00ae7e5c10662e78a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankRight</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad046ba190c9c0021af5d95f7dd66516e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankRight1</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>adccd714a45c14f0a925272433019794c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankRight4</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a95966d5c347a8ba1b7c4e4ba2246f489</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankRight8</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a34d4f51344cce4400f8c817b5915d981</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankRight16</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab75b9a637fa79eb6872921571470ded5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7b557aa3bc9f1599cd02a5e3741c002d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft1</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a43259dc080616782a698fa33501f744a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft4</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa6cab68151b96b06c435a4b99c5bd5f6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft8</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a640baecc99c7f3476091eba30a4bb194</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft16</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac548d0e4ef0714a555e924b803b30b1e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankLeft24</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aafbf954301b738b326e25e8ebc1238f2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa436c2f3ad18b4512d1dd3267e996719</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight1</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af36c068f058253388daa8ee545ad0d1e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight4</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3c4dc9a87c4bb05f883f27d8d21ef341</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight8</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa8c19f6c35778c9a2bf836176ac997ae</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight16</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2300e81dd9a4dbb7c6eeac46ab18bd46</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paramBankRight24</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a18af3d90ca25a3a3d0288776d68a4c4a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction1</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7bb74c47d6aab795c2e39b24e48dc14a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction2</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a16f55b91aa009ddccb6abc10cc812a14</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction3</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad4d69b02b6cb053baf63df59282fa584</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction4</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2be2b647cd6e0acec94e138fd7152da9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction5</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a27443caa129bdb496fe1ddf1533b2914</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction6</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3175d8d707eff1447498df42ccbfb997</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction7</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a892b9cd785ebd8bff00870b26e81c993</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction8</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4b8e18e54633dc19a7e67abcf1795ab9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction9</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a01c9b157751327e3c5807910657ee749</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction10</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6b0e7d03b94a69dcfba6fe8dff167986</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction11</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0a7b8772cd9550e9fcd5d10a2aea3198</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction12</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0b00b507076cc19ebbdcac716bf66954</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction13</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac9ecf62b76e79b6728299b6375c3aff5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction14</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af931ed22eb3c84f078d521adc9a0119e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction15</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6abc129608d81901220de7e0a90916f2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction16</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a559c640ea16a100dcedffc8ed6443e8d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction17</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>addcb0951e7d7663b66ca0c20af76c823</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction18</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af277ad9813b662ff124165dc96d0b567</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction19</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a89986db2eb290ed5cab3852b50166cc0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userFunction20</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae7100abd9be56d38295b5c3c7f542e3e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>null</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a05b2acb7a87b95e3f72367958f645d1b</anchor>
      <arglist>(float, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFunctions</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab77934fcc9982dc372ef4e45c5efe9c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa08175c96b2b04c9c04b6191dd5bf7aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importSettings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af288a2ef8ed954e56e22c70f68e7507d</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importSettings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a877718db0e6fc373b29fbeac86e48d39</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportSettings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a04967786dd1af51fbdec8b42b973dd60</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacketsIn</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5699e644753979570d1ce4fc338ea7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacketsOut</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a30c02666cb4054f7161b71cd70562194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameForActionID</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab7eb3a9060b6e10bf64ab56fb08bda4d</anchor>
      <arglist>(ExternalControllerManager &amp;, ActionID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ControlSurface * &gt;</type>
      <name>getCustomSurfaces</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0509a1a12eb1304956b05ff116211657</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; MappingSet &gt;</type>
      <name>getMappingSetsForID</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae7078ad3772306e4c08f7165737c756b</anchor>
      <arglist>(ExternalControllerManager &amp;, ActionID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getControllerNumberFromId</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a11cc4742843e80cd1a5cd3c5008f7677</anchor>
      <arglist>(int) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>saveAllSettings</name>
      <anchorfile>classtracktion__engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af3f59c81ce65c928afe7b8aff9d00164</anchor>
      <arglist>(Engine &amp;engine)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DbTimePair</name>
    <filename>structtracktion__engine_1_1DbTimePair.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1DbTimePair.html</anchorfile>
      <anchor>ad9cffac595a504f2b31ff19a37cb3d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dB</name>
      <anchorfile>structtracktion__engine_1_1DbTimePair.html</anchorfile>
      <anchor>adb887d0de7efac93ebe44c1c6f5fd896</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DeadMansPedalMessage</name>
    <filename>structtracktion__engine_1_1DeadMansPedalMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>DeadMansPedalMessage</name>
      <anchorfile>structtracktion__engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>ad3bd5f1f7afe9ed8dc20a1ca30b21e24</anchor>
      <arglist>(PropertyStorage &amp;, const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeadMansPedalMessage</name>
      <anchorfile>structtracktion__engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>a168f1da3cc992d0cdafd6d72610bfcf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getAndClearLastMessage</name>
      <anchorfile>structtracktion__engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>ae519ef4aca17d27ec74f9fdb35f5d1e9</anchor>
      <arglist>(PropertyStorage &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DelayBufferBase</name>
    <filename>structtracktion__engine_1_1DelayBufferBase.html</filename>
    <member kind="function">
      <type></type>
      <name>DelayBufferBase</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>aadbd2c09648f820d736ba36d2932053b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMaxBufferSize</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>af93ee3078e2de2987b3799069f4827b8</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearBuffer</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a4e2e224f0113182c5ec5aafb78869631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseBuffer</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a7414975e7045ab797bd712aa205c306d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferPos</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a31761d8d4d870cb584f7a649a07e168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferSamples</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a5da4caa3313bd18172754cda525f1415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MemoryBlock</type>
      <name>buffers</name>
      <anchorfile>structtracktion__engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a3b929d0a60bd0d0b53df27729195e2b7</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::DelayPlugin</name>
    <filename>classtracktion__engine_1_1DelayPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>DelayPlugin</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a1f32b38a71bac40aa23510396919a3cb</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DelayPlugin</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a7c3e3ad27caabf8155748d2ef87ec213</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a1d6e196ee112c31ee613e172b326fc7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a8004749752109462740a4e3ac5222eb2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ad0b7907a7286a0eb1a05df64c981ec02</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a543b717d4dbf205c42a28ab92a7c01f9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a2f06fbb77744f024bad59cca13b66897</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a8069740aac871e307d22657a2792eefd</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a0e219482e3d71e2055f2035ae1f0c9b8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>abc435efd7356d34cfc8709c86a6e984f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a8a4206e3b24c951d86229bba4fe6fcc7</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>acb746ed60a5325f0ea738fd61df6b0f1</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a232d45df05343037e9473d37a4a2515f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMinDelayFeedbackDb</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ab4f218ba8d2e8a52cb77cba6c3e15d32</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>feedbackValue</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a755346cba301a7b555b925eeca8cdc17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mixValue</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>afd0f1f089cb042aec391b3b97809a6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>lengthMs</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>aa5340f83324540a060547405ae7872f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>feedbackDb</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a8f64e97f24502b1217cb333507a39b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>mixProportion</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>afa42d26262b45c199577591391b70a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a73e228268ef9e76053cab0ced6981827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::DeviceManager</name>
    <filename>classtracktion__engine_1_1DeviceManager.html</filename>
    <class kind="struct">tracktion_engine::DeviceManager::ContextDeviceListRebuilder</class>
    <class kind="struct">tracktion_engine::DeviceManager::CPUUsageListener</class>
    <member kind="function">
      <type></type>
      <name>~DeviceManager</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a39b3e46311ea53d1dab1db7588270545</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab2890e31e96eb234e1f459520dec9603</anchor>
      <arglist>(int defaultNumInputChannelsToOpen=512, int defaultNumOutputChannelsToOpen=512)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a3e7ec3a9a39001ce8e0d2924fd56c415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSettings</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>add75431542cb5fbfac32ca9b2dd682ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HostedAudioDeviceInterface &amp;</type>
      <name>getHostedAudioDeviceInterface</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a42bd54c5804603bf3fd92366cb70ff30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHostedAudioDeviceInterfaceInUse</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aea44b4b87cfb78c184fcb53f15468497</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeHostedAudioDeviceInterface</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a674c29ae82cc6a85413cfe6e55688ece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a374ef1251b5cce4aad1732dfcbb290e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCpuLimitBeforeMuting</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8aeb669dd3ed535f81c5db0fcf75b3eb</anchor>
      <arglist>(double newLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumCPUs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a6a443f96603a0498c12883c9d3228cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCPUUsageListener</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a74824b67ea5b0fab612a46db192c5ed8</anchor>
      <arglist>(CPUUsageListener *listener)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCPUUsageListener</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7eab2b208012c669fd74505e535c6ae9</anchor>
      <arglist>(CPUUsageListener *listener)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a0329452362eb81b0e4168cf233e1dd3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1e5f04ef1ba6760d2bc251f6d53e471d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockSize</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a06898a87188cb33326215573326655e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBlockSizeMs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae0d377d5386286aeb8df677fca188e20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWaveOutDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9c98cb4c3a9304db4b0ea779f21c964e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDevice *</type>
      <name>getWaveOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>abcdbe05cf415620f4580aece6733ab16</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDevice *</type>
      <name>getDefaultWaveOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aafc3eb15c7e6f459c57a1ab92d9f4c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultWaveOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a005a63cca0764393960e28d45dcf5ed4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWaveInDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad2a9531bb877eec0e4bbbe861ffd447e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice *</type>
      <name>getWaveInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a108a0c755dc15817eb8f31124a12dd4b</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice *</type>
      <name>getDefaultWaveInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>af331d8a59faf10cd6e0caace9dba268b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultWaveInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>af777a6bf8f5dfc46e5aef4de52a6c6b9</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceOutChannelStereo</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad273244e56f63a397c6b80040da7e892</anchor>
      <arglist>(int channelNum, bool isStereoPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceOutChannelStereo</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad47ac8e6b34cf32acf63e8935f4e5121</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceOutEnabled</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>add4f1f37acb589d67c6a9f7d62231683</anchor>
      <arglist>(int chanNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceInChannelStereo</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>af50c133f0c6f2019170591c35b339419</anchor>
      <arglist>(int channelNum, bool isStereoPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceInChannelStereo</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad4dadc990e7f3f6de927617131b1d79c</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceInEnabled</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a64ad26ab2834aba52295e7fcb1c4ffdb</anchor>
      <arglist>(int chanNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaveOutChannelsEnabled</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8c2213de24e0fed98855ebfe89beb550</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaveInChannelsEnabled</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aaec5151e3661e294be19f4142ec18a20</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rebuildWaveDeviceListIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac67cbc285ccb8633d388d5fbc403531f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescanMidiDeviceList</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aaa7a6332f20e31adba648d8f6585d381</anchor>
      <arglist>(bool forceRescan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMidiOutDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aafbc5e3f5b289bff3fe7b924bd723210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getMidiOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a795a2f11a34d5e8eaefa13ee0203b19a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getDefaultMidiOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a04ce1db32cc0c63c5f49fddde0466ba5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMidiOutDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac2691d37f85293fc02bbd5181b556f77</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMidiInDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae9a1a8d7d55d528401aa731ffffd7b42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice *</type>
      <name>getMidiInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a47176bf5130205773ce02ba071500670</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice *</type>
      <name>getDefaultMidiInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>acc218e8e63a13f7335a0c0d60aad0853</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMidiInDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad3d7a9f4b86aa1945a4c9e665c5bcf22</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastStreamTimeToMidiDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a055682a951777b58ab3077c70b6f9713</anchor>
      <arglist>(double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldSendMidiTimecode</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>adacd9cc3851d99f64189a019250395d8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentStreamTime</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7d7ad616b6b13f0e423eaa35ece4f940</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMSWavetableSynthPresent</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ace515f0384d7fe995919080f10e47903</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefaults</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a751f6cea9bd739f061dd770fd0fb7716</anchor>
      <arglist>(bool deviceSettings, bool resetInputDevices, bool resetOutputDevices, bool latencySettings, bool mixSettings)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a762613d2bb0d988ca231a33d198aed04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InputDevice *</type>
      <name>getInputDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac82e27fbfca5850358ec9ed8a1a6db01</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a39b71c5d781a0fed141a348d37667db1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>getOutputDeviceAt</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8a2a8602516b2cd45ff6ebbab215c46a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>findOutputDeviceForID</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>abba293f538127f4825e74181750f2334</anchor>
      <arglist>(const juce::String &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>findOutputDeviceWithName</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a31bdc6e42857d6251ecb6e5ca339458e</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDefaultDevicesAreValid</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a5d80cecd7b404120fc2a69305732aa1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>createVirtualMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7d9d09e9191f41da7d262ba44f17a656</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteVirtualMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>abc845b887551a2be91bafebebca5fd08</anchor>
      <arglist>(VirtualMidiInputDevice *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRecordAdjustmentMs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab825cbb247be47216a93ebd7904bc531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRecordAdjustmentSamples</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a32aa46acfcfc34f00384c753e23ffe66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOutputLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac4694cf5707889271d6e5f262cb7cb73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addContext</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>acd17dd61a869978796a5b8c9a1908f4a</anchor>
      <arglist>(EditPlaybackContext *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeContext</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae0734fa58380d1b6353261094e974d4f</anchor>
      <arglist>(EditPlaybackContext *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllContextDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1430d9e8ff2d350742823702a242101e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reloadAllContextDevices</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a564f5f56e3f78e700869c22465085d83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalOutputAudioProcessor</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a428dc6c511d16974ecede9f0d14700d6</anchor>
      <arglist>(juce::AudioProcessor *)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioProcessor *</type>
      <name>getGlobalOutputAudioProcessor</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a86281eae5059a1e830f5544045879825</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultAudioOutDeviceName</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9d33cc7504bc188237963d5e2b7bd73d</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMidiOutDeviceName</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a53cd836adc5e581fe749c51f95db6ce5</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultAudioInDeviceName</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a4da09d0989cc3b625c579ff0169fb7d6</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMidiInDeviceName</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a13e6abd2153f05d9197f252ddd1eec57</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; HostedAudioDeviceInterface &gt;</type>
      <name>hostedAudioDeviceInterface</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8ea14496879ee8c87e150eb5c2829c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioDeviceManager</type>
      <name>deviceManager</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>afa331658bcc7060100135e8e0ce2406c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; MidiInputDevice, juce::CriticalSection &gt;</type>
      <name>midiInputs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a5fda3bd159004eef4eae5c37a90ce3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; MidiOutputDevice &gt;</type>
      <name>midiOutputs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9593f5b28e1213b48bd53efd07604385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; WaveInputDevice &gt;</type>
      <name>waveInputs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a6ec4d9cfea06ce89012cd58d1496387f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; WaveOutputDevice &gt;</type>
      <name>waveOutputs</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae6b4c972dae40b09db4bb60f991b5b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(InputDevice *)&gt;</type>
      <name>warnOfWastedMidiMessagesFunction</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a13f9ec3f9f70ead07a916f53a057bab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>aa40d8020ba3a716e4dd7da4386f1072f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1DeviceManager.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ParameterChangeHandler::Disabler</name>
    <filename>structtracktion__engine_1_1ParameterChangeHandler_1_1Disabler.html</filename>
    <member kind="function">
      <type></type>
      <name>Disabler</name>
      <anchorfile>structtracktion__engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>a42432eb977f2baeab64503d5d7ccb84e</anchor>
      <arglist>(ParameterChangeHandler &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Disabler</name>
      <anchorfile>structtracktion__engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>a611b5f881bc0fedce054300fdbeea955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ParameterChangeHandler &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>a9e0dc666ffa7e773b43e0c97d768044e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::DiscreteLabelledParameter</name>
    <filename>structtracktion__engine_1_1DiscreteLabelledParameter.html</filename>
    <base>tracktion_engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>DiscreteLabelledParameter</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a03e198b09fbf90cdbd0517a399c99ba6</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, AutomatableEditItem &amp;owner, juce::Range&lt; float &gt; valueRangeToUse, int numStatesToUse=0, juce::StringArray labelsToUse={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DiscreteLabelledParameter</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>aa0ca47f6cd41297c9fb35ece6e6b1b2c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiscrete</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a185dd5e35f427a427ef87922fa67f7e0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfStates</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>aa968a2ad194ee6df430d307dcb4f3c97</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueForState</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>aa8ecb2e394c5b3aff2b4b056e29b02d3</anchor>
      <arglist>(int i) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateForValue</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a4837d00d7832c17b8d3faf9807ca9ee9</anchor>
      <arglist>(float value) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLabels</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a49e6861860076b5987cc65685cb65b73</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a774e86edecf49478e6da9a22aa2aa9e1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>ab099565beb7ba30fa61c84a77859b516</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>snapToState</name>
      <anchorfile>structtracktion__engine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>ab3bb77408aeec4086c8c280965688fa9</anchor>
      <arglist>(float val) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Ditherer</name>
    <filename>structtracktion__engine_1_1Ditherer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>a5aa9494fe91621bde312156c6216fd03</anchor>
      <arglist>(int numBits) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>ae70122e3d717c7adaf59d7790bec8cab</anchor>
      <arglist>(float *samps, int num) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>random1</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>a8edd46e5228199c4318218bd0204e367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>random2</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>aa068df96a9900972704d732068c6edd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>amp</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>a04be9a666d128bbe16ab95db29b0538a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>a270688caea476d9f5a8d0060ff1e9cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>s1</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>a467047415e0beebd5105c0827b8ced96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>s2</name>
      <anchorfile>structtracktion__engine_1_1Ditherer.html</anchorfile>
      <anchor>acbd125f26e82901370daf8fcbc922326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Edit</name>
    <filename>classtracktion__engine_1_1Edit.html</filename>
    <base>tracktion_engine::Selectable</base>
    <class kind="struct">tracktion_engine::Edit::GlobalMacros</class>
    <class kind="struct">tracktion_engine::Edit::LoadContext</class>
    <class kind="struct">tracktion_engine::Edit::LoadFinishedCallback</class>
    <class kind="struct">tracktion_engine::Edit::Metadata</class>
    <class kind="struct">tracktion_engine::Edit::Options</class>
    <class kind="struct">tracktion_engine::Edit::ScopedRenderStatus</class>
    <class kind="struct">tracktion_engine::Edit::UndoTransactionInhibitor</class>
    <class kind="struct">tracktion_engine::Edit::WastedMidiMessagesListener</class>
    <member kind="enumeration">
      <type></type>
      <name>EditRole</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a03df9ebcd96a6437e2d2db927bc6b189</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>proxiesDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25ae85ce1b56488f2f3ef98b2e5e932c2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pluginsDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a904a06e4995fc9b6475571390ce42e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forEditing</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a8759aa00903dab022dd875655e4ce03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forRendering</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a7ec728e8989b3861c7ccb0afc30ec68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExporting</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25ab6801cc091abb0882e3963238b9818d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExamining</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a026ce9bc511f850501bf97803f040082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CountIn</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a59f77ec0d1b5ff6397583d7c063ad672</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1Edit.html" anchor="a59f77ec0d1b5ff6397583d7c063ad672a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Edit.html" anchor="a59f77ec0d1b5ff6397583d7c063ad672a6e45a5543108e522a7069c90787b390d">oneBar</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Edit.html" anchor="a59f77ec0d1b5ff6397583d7c063ad672a89bebfd565b060f68f9ccedc861b72e2">twoBar</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Edit.html" anchor="a59f77ec0d1b5ff6397583d7c063ad672a0564a247242718dbf102a64c845e8516">twoBeat</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Edit.html" anchor="a59f77ec0d1b5ff6397583d7c063ad672a304659151ad21517e875f879b072e528">oneBeat</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>playDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a03df9ebcd96a6437e2d2db927bc6b189</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>proxiesDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25ae85ce1b56488f2f3ef98b2e5e932c2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pluginsDisabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a904a06e4995fc9b6475571390ce42e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forEditing</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a8759aa00903dab022dd875655e4ce03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forRendering</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a7ec728e8989b3861c7ccb0afc30ec68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExporting</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25ab6801cc091abb0882e3963238b9818d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExamining</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae1a2c1744ddbf14375544938bc676b25a026ce9bc511f850501bf97803f040082</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Edit</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9b3bf127fab5a150b98a4044b80473da</anchor>
      <arglist>(Options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Edit</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>adb21dc21972bfbb52f19833fc3efb77c</anchor>
      <arglist>(Engine &amp;, juce::ValueTree, EditRole, LoadContext *, int numUndoLevelsToStore)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Edit</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5eb2df66af8708e55634a92507d95e38</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7e16c85e48643d46b4a565a4c7bdbc6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a63290c2d518e462761d27b89a01c3c0f</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>acd16893a4f29952f4be51d46da3badb9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditRole</type>
      <name>getEditRole</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ace037afb87f8726b84ee9aee66c2389f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPlay</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ad96c32b59b87a2bfd7564a2b174de23d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canRenderProxies</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ad9d34cc4b2b15ef73dd6f928586a9097</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldLoadPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9d81d0830f0a6e0814cb2b7075b6829c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsPreviewEdit</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7de2bb572e805f27e2f7492c6dec1265</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushState</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8c8b04c6994e9dbcbb3a451abaaf84dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0719555bc331670f66db5afc2d9cfb99</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getTimeOfLastChange</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a97702c312804193ee5e5ee68e10829fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetChangedStatus</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7497dd94699a17c7dd62296ffec1aae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChangedSinceSaved</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2003ff1beb2c2b4438eb6f3f578ae05d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoading</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a59cc0b2023c0e8ac47a88734a495b4da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditInputDevices &amp;</type>
      <name>getEditInputDevices</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a3a09980a625d06c79a1df97587b9a03c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getCurrentInstanceForInputDevice</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac24666de58e0e7145bd42a1707daf459</anchor>
      <arglist>(InputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getAllInputDevices</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a93fe66abc361e7413b3242f7b85bb7ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TransportControl &amp;</type>
      <name>getTransport</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8d84b05db3a2d6a6783b106de9c45775</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditPlaybackContext *</type>
      <name>getCurrentPlaybackContext</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a54e1b261808ad46616909db22270c3b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParameterChangeHandler &amp;</type>
      <name>getParameterChangeHandler</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a69654867aeebae896eeb6b6fc490594d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>ParameterControlMappings &amp;</type>
      <name>getParameterControlMappings</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac7786f7bcb860daf39c49884582ccb36</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomationRecordManager &amp;</type>
      <name>getAutomationRecordManager</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a743221cbab2b7e59bb4d6c35992d1b6d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AbletonLink &amp;</type>
      <name>getAbletonLink</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6565db27c8954f0e5a9fd28fa94d484d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9c43c8f86ff99466828f21c4640b7713</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9730e94850754483b76cee3199f567f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab70adf30c233cd5c9ea2c5b9945e7a4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager &amp;</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a268797aa0d797f11a394719bc6c86501</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a00a9e455160f38930ea2f41f6bdba4e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab608ba232f81971cb95e0515cb9c7feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restartPlayback</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a328175a598d0496d43939cab82289ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TrackList &amp;</type>
      <name>getTrackList</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6f79931ad877e42da155f2ab9a23972f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracksRecursive</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aed36bef574fef7b8e9fd7a8342f91717</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTopLevelTracks</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5ea1f8639e6b913d7a6a5431e87a8749</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracks</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2a4348f15ba5b0c7600d1d1a5774204e</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;, bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; AudioTrack &gt;</type>
      <name>insertNewAudioTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af8c112f378b2022be471ec01ce5d1a79</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; FolderTrack &gt;</type>
      <name>insertNewFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0b2bcb96db37f40f91943f3e7663b4e0</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *, bool asSubmix)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomationTrack &gt;</type>
      <name>insertNewAutomationTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a3a7aca5e15d30c06a2e0295ff25a5f42</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertNewTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0c7e607e2f9dc0066a79ce045a874b1d</anchor>
      <arglist>(TrackInsertPoint, const juce::Identifier &amp;xmlType, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aeaac3ca16feef42cbb073dccca65b09a</anchor>
      <arglist>(TrackInsertPoint, juce::ValueTree, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab8d0b89ff6bdb34c4ae8ad9cbf1d7cd2</anchor>
      <arglist>(juce::ValueTree, juce::ValueTree parent, juce::ValueTree preceeding, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac49064be3d4ec09e6f5a030628ba130c</anchor>
      <arglist>(Track::Ptr, TrackInsertPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae549004fa1a89045dc21ea48e4cb31cd</anchor>
      <arglist>(Track *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureNumberOfAudioTracks</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab30d7d1ddea7a61acf009dd3f363ea82</anchor>
      <arglist>(int minimumNumTracks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae854b98e0fd04514a5581619888decbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureTempoTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a421b80697da59a7338d1b83f1d4b2b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4794deaaf3d1f468c92038693d41cc06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureChordTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a364de58985c0ca84f66381f89c3baf99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMasterTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a91f187d0a168bf2d0434a02ffefe963b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrangerTrack *</type>
      <name>getArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8306da9af876ef97d6b87067d245a2d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerTrack *</type>
      <name>getMarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a499ce062319c192dfca2692b12e10f3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoTrack *</type>
      <name>getTempoTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9c74d75b7234e5aa3e86cf597575255b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ChordTrack *</type>
      <name>getChordTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a29f4c64b9e4fb5befc5286e9947b8cd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MasterTrack *</type>
      <name>getMasterTrack</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aaae298ed234a620970796bfec3ca9e74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksMuted</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a1894af054727ac0faa04a486e3f58e75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksSolo</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>add96865db395c054087ce14b996872ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac41b85ababf4821b02d5ac427fb7abd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMuteSoloStatuses</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>acd17f68cc22af3058125f2e2d8b0ff36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>createNewItemID</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7b425ad70a772d0858dfb33923b0eaf7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>createNewItemID</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a22d7c91330cca231b07558319b3a1ce3</anchor>
      <arglist>(const std::vector&lt; EditItemID &gt; &amp;idsToAvoid) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>findClipsInLinkGroup</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>afaf2078a857495a2eca8fcbd9735b9c0</anchor>
      <arglist>(juce::String linkGroupID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMirroredPlugin</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8804a761c995272f59ad9f15a2a34049</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a99f72038f232248afa1e706142902d75</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendStartStopMessageToPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2cd34fc3d198081fbe721419b3440d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PluginList &amp;</type>
      <name>getMasterPluginList</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a45063c4cf2c42b5b3fe6af1e1417e01c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addModifierTimer</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a29da3a01df6bf6f5fa19face82753aa8</anchor>
      <arglist>(ModifierTimer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifierTimer</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aaf1e051661af054b0eb3f7d09f85c3bf</anchor>
      <arglist>(ModifierTimer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateModifierTimers</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a184a80fcafcb32980cc5d0e75d21bfbc</anchor>
      <arglist>(double editTime, int numSamples) const</arglist>
    </member>
    <member kind="function">
      <type>MacroParameterElement &amp;</type>
      <name>getGlobalMacros</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aa23063a624833bcc2a21c29f30e03b38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowLatencyMonitoring</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a39aa8437afdee1775657cbc31cea84c0</anchor>
      <arglist>(bool enabled, const juce::Array&lt; EditItemID &gt; &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLowLatencyMonitoring</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2886e22621a347136482d7815f3ec82a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowLatencyDisabledPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac77bd3c3053ac40952cace5a1323d3ca</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getLowLatencyDisabledPlugins</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4f14441571c025ef7a710dffcc8cf9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RackTypeList &amp;</type>
      <name>getRackList</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ad3d6e5658a7d962aaadc1ed76e97abc0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TrackCompManager &amp;</type>
      <name>getTrackCompManager</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a3a92320fb161357f3390534a400d8767</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAuxBusName</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>afc0483d99b4cbc7ccfadf14b9d526e11</anchor>
      <arglist>(int bus) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuxBusName</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ad09dd25f5fe9cc7c72769607942d35c0</anchor>
      <arglist>(int bus, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParams</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4444e023bba0017db4093ffb28a18096</anchor>
      <arglist>(bool includeTrackParams) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getVideoFile</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a01922aea6dee46ab8773bbc916584e22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoFile</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>adba5841bb30d09f7b197080b61a260fe</anchor>
      <arglist>(const juce::File &amp;, juce::String importDesc)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextTimeOfInterest</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae32b7eb8cc0f1db244081bd58dc03232</anchor>
      <arglist>(double afterThisTime)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPreviousTimeOfInterest</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4b08e688b06630f7cfd21b031452df4f</anchor>
      <arglist>(double beforeThisTime)</arglist>
    </member>
    <member kind="function">
      <type>PluginCache &amp;</type>
      <name>getPluginCache</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5d7939d988e26f28152f6758c29a6948</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFirstClipTime</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4ac7e8599fa3f6e6789c0049eb733f0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a15bc41208fc9758cebdb341a3cd84048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin::Ptr</type>
      <name>getMasterVolumePlugin</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a15d1ffc28d4a7f3f6ad73253e38b192a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getMasterSliderPosParameter</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a82cc720d5f0df1e87c8d31fae5ceaa79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getMasterPanParameter</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a3470a3e44c6fb9d28dbb5e7527e78608</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMasterVolumeSliderPos</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>afc179404102c055e8b904e1c4f02bb95</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMasterPanPos</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a670198bc6247cec07f766ef4689bf02c</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginChanged</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aade65cc095e12f223548886f050e10e8</anchor>
      <arglist>(Plugin &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimecodeDisplayFormat</type>
      <name>getTimecodeFormat</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af7f15860adb6c6b7b0d6a69b46261a6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimecodeFormat</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a71d92fba7db4b164c7197229aa57be3b</anchor>
      <arglist>(TimecodeDisplayFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecodeMode</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2fdb2d87fbceb0f62f01e3a165f14b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendTempoOrPitchSequenceChangedUpdates</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0b3a77e445aaf888731896b8b344bcc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice *</type>
      <name>getCurrentMidiTimecodeSource</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9381860ddb19b67e7d23b0f4573261b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiTimecodeSource</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7d9571146e9cafbde6f17822d8321879</anchor>
      <arglist>(MidiInputDevice *newDevice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTimecodeSync</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab1b2c9976fbb830be73348d940ad1126</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTimecodeSyncEnabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7baba0055f4f44c18cc3c1f3cde429cb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimecodeOffset</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af2196dc77f9f391c6e8bb9e4820ceb74</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimecodeOffset</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ab90be12d5d6fbe83edd332abea37bdb5</anchor>
      <arglist>(double newOffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae7e4876dcc77188a69d9c2933d162a53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a237137c262e0653f4623398b810c3cf7</anchor>
      <arglist>(bool shouldIgnore)</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice *</type>
      <name>getCurrentMidiMachineControlSource</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae082ac6efaa845cb3bacace6239ab9c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiMachineControlSource</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>afe9966be845b8c685aefbf122bd3838c</anchor>
      <arglist>(MidiInputDevice *)</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getCurrentMidiMachineControlDest</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a42a5913a0bf4990bda30d9eb40b271ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiMachineControlDest</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ada21bc27e4443401b2c4ed6388106f22</anchor>
      <arglist>(MidiOutputDevice *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiTimecodeDevices</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a776874f4078b4802dfc75ca9559cc66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackRange</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a14f68ac3180e1aaeebffb236c1640232</anchor>
      <arglist>(EditTimeRange) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getClickTrackRange</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5c4cf3687fcd25e99d2cf79a74527df5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getClickTrackVolume</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a574c5722e991337f609c4f96a012d747</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickTrackDevice</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9e62dac0e3618bd84964b5cb937382f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClickTrackDevice</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a27880c6c5be1110c60ea3a6cfdd8a4b8</anchor>
      <arglist>(OutputDevice &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackOutput</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a3193c905036d29dd538f2c47b863f953</anchor>
      <arglist>(const juce::String &amp;deviceName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackVolume</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8a5f764671d410eb22e7b7e69a6eb4f6</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCountInMode</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>afe3dce0fdcd8682ca264967f621b257a</anchor>
      <arglist>(CountIn)</arglist>
    </member>
    <member kind="function">
      <type>CountIn</type>
      <name>getCountInMode</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a41d6736502177a85bdffdfaad66eca41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCountInBeats</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a95c41c0d6f147d15eecb7b75c9eb8392</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendSourceFileUpdate</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a436d720bc673a5da9697b3be34636408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsChanged</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a32a139695b14a9d5cfd2ec5ee18ba347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateStoredLength</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>acf265c3e836777b47b34c3415cb182f8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchPendingUpdatesSynchronously</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8e4677b8aa30aab64ba6a1d91006fa33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyClipsUsingFile</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a09bd9a065f7bb50d7f31b8c11e3d9d31</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelAllProxyGeneratorJobs</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>abfc1a8ec1bee3f7d08dc6223be2d7a6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempDirectory</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af01b1af5d04088be29bf06829c0f3515</anchor>
      <arglist>(bool createIfNonExistent) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempDirectory</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ae75496a1f4b23f7d25ed3ff925fc177a</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Metadata</type>
      <name>getEditMetadata</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a1ab4e8c9bad9f0c1e3f5eddcfee5e5d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditMetadata</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a2e9a47849861e2b66cbce3ec30f3f3a5</anchor>
      <arglist>(Metadata)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getAutomapState</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a52f5a57f699c876567999cea71d77958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerManager &amp;</type>
      <name>getMarkerManager</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a531d155566c3a35692bf9f0e8d6e134a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWastedMidiMessagesListener</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5888cbd353e6c165a03ba73675e463f8</anchor>
      <arglist>(WastedMidiMessagesListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWastedMidiMessagesListener</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a75883de7153006b5ff9d30b3243cf773</anchor>
      <arglist>(WastedMidiMessagesListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warnOfWastedMidiMessages</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af42583941be8ff88ddd7c7c3959ed74f</anchor>
      <arglist>(InputDevice *, Track *)</arglist>
    </member>
    <member kind="function">
      <type>SharedLevelMeasurer::Ptr</type>
      <name>getPreviewLevelMeasurer</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>addb430aca5d99e467b1f842da84839c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreviewLevelMeasurer</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8d8998ec631269827dd56b3fe69682d8</anchor>
      <arglist>(SharedLevelMeasurer::Ptr p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>getMaximumEditTimeRange</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aaf310d748aefa05806c720817bde63e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingFile</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aa71874dce2060c9c0fbd71ad9e5f7589</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, const Edit *editToMatch, bool tryToMatchTempo, bool tryToMatchPitch, bool *couldMatchTempo, juce::ValueTree midiPreviewPlugin, juce::ValueTree midiDrumPreviewPlugin={}, bool forceMidiToDrums=false, Edit *editToUpdate={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingPreset</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>aefd9fa1638e1596824d67b436ee83e7c</anchor>
      <arglist>(Engine &amp;engine, juce::ValueTree, const Edit *editToMatch, bool tryToMatchTempo, bool *couldMatchTempo, juce::ValueTree midiPreviewPlugin, juce::ValueTree midiDrumPreviewPlugin={}, bool forceMidiToDrums=false, Edit *editToUpdate={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingClip</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6de6025405bc39e34c82b73ccdb5a6ef</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createSingleTrackEdit</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a9f48942c719f86f158195e066a27fd92</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getDefaultNumUndoLevels</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a06eab9db975716477b26bc72a5813fbe</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6c49136df25c3ab97ac75a9411a8ab2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File()&gt;</type>
      <name>editFileRetriever</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a99e66b47a1986fe5f293ca3b56b248a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File(const juce::String &amp;)&gt;</type>
      <name>filePathResolver</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a69d14ff09c1b7c36634ce664e67626fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemCache&lt; Track &gt;</type>
      <name>trackCache</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ad65992e2a4b032a669381bdceec818b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemCache&lt; Clip &gt;</type>
      <name>clipCache</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac00bcd416e1eb4c47973bda2580578f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence</type>
      <name>tempoSequence</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a230ce439af8fcb4351a8073cde813654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PitchSequence</type>
      <name>pitchSequence</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a00e946d9db376309336e371aba533225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>lastSignificantChange</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>acbbeebe54cd573d9015be26e00836287</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>masterFadeIn</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a1f138d4670ab72649d6fb46a5ec348d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>masterFadeOut</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0a5549f521b081d11ae3c8566398dfdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>timecodeOffset</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a38e768eb17394648f49a12ac598c6177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>videoOffset</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6c1fd42986d3372543cc7244e8942af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>masterFadeInType</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4e5bda6998af31c444430321d6c5bb51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>masterFadeOutType</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a708ff8f0f09ab27ede38e08bc5d968e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>midiTimecodeSourceDeviceEnabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a5a2b278a7966bf3d1744403356507041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>midiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a97f0e275bfcbc087ce3c5aad7a3281bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>videoMuted</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a52732184fb37b74361de32c9387ddbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackEnabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a7a24b4e6911da09154c843c1c35494e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackEmphasiseBars</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>af370f4f0235d8c0bb8eef3b9aa2c4be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackRecordingOnly</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>ac5c174b2ccec14eecafaaf07fcaa11ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>recordingPunchInOut</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a8ba00d779dc988f4d6804c49d8719ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>playInStopEnabled</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>adc80097b42b14d79314b593698393af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>clickTrackGain</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a6e5f652d75287766622091803b553076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; ProjectItemID &gt;</type>
      <name>videoSource</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a4b57db5d52ac43b843451c9a94435054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a89f536183e258fbe11d7c94ab6435bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>inputDeviceState</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a0d9b57654c0b6b788785d09509e41ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ARADocumentHolder &gt;</type>
      <name>araDocument</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a1d5d39076676e49a28bd696c77387748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>maximumLength</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a526cabb0d77a344a3b549a6a9e19bbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ticksPerQuarterNote</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a81e0b3f8867805159943252a68634f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>TrackList</name>
      <anchorfile>classtracktion__engine_1_1Edit.html</anchorfile>
      <anchor>a64bcfd48754f370667ff0543e82f59e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditClip</name>
    <filename>classtracktion__engine_1_1EditClip.html</filename>
    <base>tracktion_engine::AudioClipBase</base>
    <base protection="private">tracktion_engine::EditSnapshot::Listener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a24f28dde4666d198dff0167a74759e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditClip</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a037bff6490cf9cf458a7bedf2b425ecf</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;, ProjectItemID sourceEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditClip</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a8c5daee318040d1a799fd1f27ff01a9b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getWaveInfo</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a20bd9365f8135ccc84e2eed2982db2a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EditSnapshot::Ptr</type>
      <name>getEditSnapshot</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>acccb9434efa56c012695d71b71a14f40</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ac3e2438350cf98175a63fb82c2caaa50</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a75a41f470a1ddda1baa1f91b82f31d47</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ac78e0218f8cb27d015d6be7bf4fe65ea</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a062f8861117794e46a183786052d7c88</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canHaveEffects</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>af88f821ca82af593f52e4c8e8c8f5293</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentStretchRatio</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a6d060edb6bd6aabede4cd6e46dea6761</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a0a77fdaae3510d10474042a903d6d893</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a54c53b0692622a68662b86f56fab1b18</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a5c419f32ddcfc3c29f14bade2629068b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a45dd1fb48e35c413d51bd5fcd8c40a6c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTracksToRender</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a32561151e21d0ac3f24505d3f5905a87</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;trackIDs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>aca6dc42114b69c67780a33bc9f3d817c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ad81d126e7307ac89f2dd9b5d3ba8f413</anchor>
      <arglist>(const AudioFile &amp;destFile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a27781efabf45ef996a821a0abbebd7fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a74ec2144b1eaac1cef15cedb61490c5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClipMessage</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ad523f4b8f039e351129a47c3bf9af4ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a2dd85b360877c41decdad1f84731bf58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a6058529e13a3719cf3f1880c27679a5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a48e29d1f1cc4be80c26ccc2d12a927b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ada8e0e13790456f069e0812ba2eb5bd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a80c2a997bbcd2ec88a2f6beba24f349e</anchor>
      <arglist>(const AudioFile &amp;af) override</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions &amp;</type>
      <name>getRenderOptions</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a414bc04631f2c7b51ae443335e74dfe0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createUniqueCopy</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a0903ae4fc1b714a3f6b89448e04f6831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>generateHash</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a793cf50995d46abffe038d0c00670b13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>copyColourFromMarker</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>af862bc5ec8285c674478bfd09d0271e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>trimToMarker</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>a07364e270a5e55dc3b64e5821198d303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>renderEnabled</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>ae74db6d40023976ac61d8ad1e370f0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1EditClip.html</anchorfile>
      <anchor>aa3b9586040680cc8dd3c2f658f786df7</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditDeleter</name>
    <filename>structtracktion__engine_1_1EditDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>~EditDeleter</name>
      <anchorfile>structtracktion__engine_1_1EditDeleter.html</anchorfile>
      <anchor>a6e218558fa49510a489d11a2f7e3a3da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEdit</name>
      <anchorfile>structtracktion__engine_1_1EditDeleter.html</anchorfile>
      <anchor>a6fac71a7ec0e05503d4c8a7a0dc6775e</anchor>
      <arglist>(std::unique_ptr&lt; Edit &gt;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>structtracktion__engine_1_1EditDeleter.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditFileOperations</name>
    <filename>classtracktion__engine_1_1EditFileOperations.html</filename>
    <member kind="function">
      <type></type>
      <name>EditFileOperations</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a78733bed587d2bb638f68530e19c4881</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditFileOperations</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a7fe61f95ca51ea1ae0e44ff4a8dc70e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFile</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a7627bc90856d81b0a3385958b0d725ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>aeb3aef38867471c0a9d5c33b62bbee6c</anchor>
      <arglist>(bool warnOfFailure, bool forceSaveEvenIfNotModified, bool offerToDiscardChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAs</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a26ece59e55eabd6a111341eb6c350c0e</anchor>
      <arglist>(const juce::File &amp;, bool forceOverwriteExisting=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAs</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a0ec9fb06f27060bf829e4998c84a9ba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToFile</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a3f50cf1dfd29c55aac21ca5de3020ccf</anchor>
      <arglist>(const juce::File &amp;, bool writeQuickBinaryVersion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveTempVersion</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a7e1bf785cc8f35ba42ec6a48b1b83262</anchor>
      <arglist>(bool forceSaveEvenIfUnchanged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTempVersion</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a6850fb6d8ff069c73e526c56b174af94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempVersionFile</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a6c6b04dc98658b87b53747a41692c7d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getTimeOfLastSave</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>ab94324474063e08c8bfd3f434b2d308c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getTempVersionOfEditFile</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a5360195479fa77636fdcabda7d176232</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>updateEditFiles</name>
      <anchorfile>classtracktion__engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a716896dacff74218c94053f48997c2d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditInputDevices</name>
    <filename>classtracktion__engine_1_1EditInputDevices.html</filename>
    <member kind="function">
      <type></type>
      <name>EditInputDevices</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>aa42ecfbb08093df5450b32dca2671eca</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditInputDevices</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>aa3b5ff84fb5e91298a27938ceae3f183</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumInputs</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a925d7c1a49855ebd80c38c9b58622eba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInputDeviceAssigned</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a4f54677f08c4a764d9ead4cff940665f</anchor>
      <arglist>(const InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllInputs</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>aedb103ef1940a4a7fba0b78fa0513b82</anchor>
      <arglist>(const AudioTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInputsOfDevice</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>aafa335d983323bca6f1db4beb27f5f1c</anchor>
      <arglist>(const AudioTrack &amp;, const InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getInputInstance</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a9cdb4757c9d0b6c20d3673c3ef7a1276</anchor>
      <arglist>(const AudioTrack &amp;, int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getDevicesForTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a7e750ee98a4e1b8c8e51732d82f3de73</anchor>
      <arglist>(const AudioTrack &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getInstanceStateForInputDevice</name>
      <anchorfile>classtracktion__engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a5a185e13aac8c48009992fb9fae7acbc</anchor>
      <arglist>(const InputDevice &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditInsertPoint</name>
    <filename>classtracktion__engine_1_1EditInsertPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>EditInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>ab1c168605e4d67496108c8e847be2ea1</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>ad74e7df717d7b3053446e134e5da12aa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a6ec0913e953cf2b8d0320bbc82a405e7</anchor>
      <arglist>(double time, const juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a22e3da293d82566b97f36871153d9dda</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPointAfterSelected</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a3a67b88a19fb91b19b41af4dc2ebb472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a668bf3a23161b53de322aada658449d9</anchor>
      <arglist>(bool lock) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>chooseInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a861938d13dfa5692f7276ea39257ad82</anchor>
      <arglist>(juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;, double &amp;start, bool pasteAfterSelection, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chooseInsertPoint</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a3fa2466d4fb1324bdd37e855b82ac9dc</anchor>
      <arglist>(juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;, double &amp;start, bool pasteAfterSelection, SelectionManager *, std::function&lt; bool(Track &amp;)&gt; allowedTrackPredicate)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a0a8a1650307b9b0019439606974ba139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>nextInsertPointTime</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>ae20e1a6ce0030fc676d0801b15c36755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditItemID</type>
      <name>nextInsertPointTrack</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a320b934819583b18d98c276bc56c8f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lockInsertPointCount</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a4ff6495428273f3bbbb90afead7b0a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>nextInsertIsAfterSelected</name>
      <anchorfile>classtracktion__engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a64af8570c83cbf75b5c8b39793457c43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditItem</name>
    <filename>classtracktion__engine_1_1EditItem.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItem</name>
      <anchorfile>classtracktion__engine_1_1EditItem.html</anchorfile>
      <anchor>a719e69acb5831081ad98053f402a66a0</anchor>
      <arglist>(EditItemID, Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditItem</name>
      <anchorfile>classtracktion__engine_1_1EditItem.html</anchorfile>
      <anchor>a2562217a42c512f7786fd67348e89634</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1EditItem.html</anchorfile>
      <anchor>a3fe4e7a94fa2b384dfe98bfb7c898634</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1EditItem.html</anchorfile>
      <anchor>a7f378d2f09328864df05ea71913ce244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>itemID</name>
      <anchorfile>classtracktion__engine_1_1EditItem.html</anchorfile>
      <anchor>a8a630ca2335f020f4c902ffced561424</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditItemCache</name>
    <filename>structtracktion__engine_1_1EditItemCache.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a9d5c632ea76a53d80c4c43e567de849f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a739512ae6c39c6558647f6ca66fca4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EditItemType *</type>
      <name>findItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ad3a7d576cb810b54428c3417dca8443a</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a2655651891406b0f91142026c4fc9eb4</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ac5b5b3faf371be8466161e190dcb0bcb</anchor>
      <arglist>(EditItemType &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ab5fecdb2f7c7e7273fef6a136fedf9e2</anchor>
      <arglist>(EditItemType &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditItemCache&lt; tracktion_engine::Clip &gt;</name>
    <filename>structtracktion__engine_1_1EditItemCache.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a9d5c632ea76a53d80c4c43e567de849f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a739512ae6c39c6558647f6ca66fca4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::Clip *</type>
      <name>findItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ad3a7d576cb810b54428c3417dca8443a</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a2655651891406b0f91142026c4fc9eb4</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ac5b5b3faf371be8466161e190dcb0bcb</anchor>
      <arglist>(tracktion_engine::Clip &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ab5fecdb2f7c7e7273fef6a136fedf9e2</anchor>
      <arglist>(tracktion_engine::Clip &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditItemCache&lt; tracktion_engine::Track &gt;</name>
    <filename>structtracktion__engine_1_1EditItemCache.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a9d5c632ea76a53d80c4c43e567de849f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a739512ae6c39c6558647f6ca66fca4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::Track *</type>
      <name>findItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ad3a7d576cb810b54428c3417dca8443a</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>a2655651891406b0f91142026c4fc9eb4</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ac5b5b3faf371be8466161e190dcb0bcb</anchor>
      <arglist>(tracktion_engine::Track &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion__engine_1_1EditItemCache.html</anchorfile>
      <anchor>ab5fecdb2f7c7e7273fef6a136fedf9e2</anchor>
      <arglist>(tracktion_engine::Track &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditItemID</name>
    <filename>structtracktion__engine_1_1EditItemID.html</filename>
    <member kind="typedef">
      <type>std::map&lt; EditItemID, EditItemID &gt;</type>
      <name>IDMap</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ab0805fd7a423fe0c76ce8cc15990d00e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a0a8d71cf68900fd08d1a4c96ee7beabf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a25878523e7c8ddad65ca3faaa9885f05</anchor>
      <arglist>(const EditItemID &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>EditItemID &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ab51db456f86d56937af20bc2cb5e4470</anchor>
      <arglist>(const EditItemID &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ad548fa388f0fdf94a52191b2ccd5bed9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInvalid</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>acb2cbf43b4f6f106ec46da3840ce23f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a0b7d174835b4cd117a37dc6dc3a94a36</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ad2e7282cee5039ff4f92fbd98e80d156</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;, juce::UndoManager *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXML</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ac6d45682d6db5efe6534c0d7551f9ceb</anchor>
      <arglist>(juce::XmlElement &amp;, const juce::Identifier &amp;attributeName) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXML</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>aa66ae2b61c4b8ae806d8b329096048e4</anchor>
      <arglist>(juce::XmlElement &amp;, const char *attributeName) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator juce::var</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ad84d730d7bde1b762c998423962b18d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::var</type>
      <name>toVar</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a367f3734c1bb140609d99238f76e124f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a14b47265b4960954e8a83000387adbc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getRawID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a28713bec4ab3541647d949df33462912</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ad9933d5c70020850b05e39162ad2455f</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ae1e56a82a403867da5b6db7cc7280024</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a6f821bb413cf7a0c79e74e3607e42e52</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>aa856f16bd918cf7470386a06a6f83c56</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>readOrCreateNewID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a2adc2e4a6051fba86f635a00eda335bf</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromVar</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a274ff5c9e2a7557625d134e2d07a18da</anchor>
      <arglist>(const juce::var &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromString</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>ac1c4aac1ca7e21096347ddf36896a3cd</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromProperty</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>aba39ee05bb9affb3ff18c49c5ab39a35</anchor>
      <arglist>(const juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromXML</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a3cea7bc048ad5e4224fb6b1d1ee409c1</anchor>
      <arglist>(const juce::XmlElement &amp;, const char *attributeName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromXML</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a0291732eddd5f15365d5f955e0681ab2</anchor>
      <arglist>(const juce::XmlElement &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>findFirstIDNotIn</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a95f24124a801dfb332fb3e98174be2da</anchor>
      <arglist>(const std::vector&lt; EditItemID &gt; &amp;existingIDsSorted, uint64_t startFrom=1001)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromRawID</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a673fea955c15c57d1bd6901e761266ad</anchor>
      <arglist>(uint64_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; EditItemID &gt;</type>
      <name>parseStringList</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a38f6f7ade196117946172eea3ff3f67f</anchor>
      <arglist>(const juce::String &amp;list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>listToString</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a396468f897eb16f879d31620d20a8537</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; EditItemID &gt;</type>
      <name>findAllIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a41f92848d6abdb937b07b5a0f5e239e8</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; EditItemID &gt;</type>
      <name>findAllIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a7b973200ee8737b2fb44979e954c5b1a</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a2ebccc9b93c0ad9b487e2ccacfa41c3b</anchor>
      <arglist>(juce::XmlElement &amp;, std::function&lt; EditItemID()&gt; createNewID, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>acbb192c96ad4dfe93ee232701ca5299a</anchor>
      <arglist>(juce::XmlElement &amp;, Edit &amp;, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a297bef61e901d44d10d629ee89486a57</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *, std::function&lt; EditItemID()&gt; createNewID, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a3181b6d23cf5d627c484351ee5211bc8</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *, Edit &amp;, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::function&lt; void(juce::ValueTree &amp;, const juce::Identifier &amp;, const std::map&lt; juce::String, EditItemID &gt; &amp;, juce::UndoManager *)&gt;</type>
      <name>applyNewIDsToExternalValueTree</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a30da206498144d93318cba31d101287e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::function&lt; void(juce::XmlElement &amp;, const juce::String &amp;, const std::map&lt; juce::String, EditItemID &gt; &amp;)&gt;</type>
      <name>applyNewIDsToExternalXML</name>
      <anchorfile>structtracktion__engine_1_1EditItemID.html</anchorfile>
      <anchor>a242163ea6f75a7fd091c2eeb7a0c567c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditLimits</name>
    <filename>structtracktion__engine_1_1EditLimits.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxNumTracks</name>
      <anchorfile>structtracktion__engine_1_1EditLimits.html</anchorfile>
      <anchor>a989a175a0353bebdc25694a002cff504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxClipsInTrack</name>
      <anchorfile>structtracktion__engine_1_1EditLimits.html</anchorfile>
      <anchor>a6c47732aab74d19bab7fbcae99c0e58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxPluginsOnClip</name>
      <anchorfile>structtracktion__engine_1_1EditLimits.html</anchorfile>
      <anchor>ae06f37068398a7ad65b5905a82221bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxPluginsOnTrack</name>
      <anchorfile>structtracktion__engine_1_1EditLimits.html</anchorfile>
      <anchor>a019646a3419d257cee1328aa141afe5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxNumMasterPlugins</name>
      <anchorfile>structtracktion__engine_1_1EditLimits.html</anchorfile>
      <anchor>a10efdcba12d849f68e76bcbafffa605f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditNodeBuilder</name>
    <filename>structtracktion__engine_1_1EditNodeBuilder.html</filename>
    <member kind="variable" static="yes">
      <type>static std::function&lt; std::unique_ptr&lt; tracktion_graph::Node &gt;std::unique_ptr&lt; tracktion_graph::Node &gt;)&gt;</type>
      <name>insertOptionalLastStageNode</name>
      <anchorfile>structtracktion__engine_1_1EditNodeBuilder.html</anchorfile>
      <anchor>a1805686bc6492f16ed43de6f3f97a250</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::ContentType::EditPastingOptions</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>EditPastingOptions</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a03eeb6c4b30abf32816b6b6ed2a987cf</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditPastingOptions</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a262996262bf9a98a56a7c3e8550126b4</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a1161b69f5aded0fbdcfde024a9b05588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditInsertPoint &amp;</type>
      <name>insertPoint</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a9aac8fdd93cd4f26f919687eccf0d8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>startTrack</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>aded4dc90ec07e4c369376c2f6623312c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a994d5e791f0ff7b9d51c087a3d7c6171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectionManager *</type>
      <name>selectionManager</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a38196ce2d20430d8e0333428e93ffbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>silent</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>ab566a9a22ec4fd7dfd7f27284d498812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FileDragList::PreferredLayout</type>
      <name>preferredLayout</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>abdf2600ec603fdd74f45465e90240dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>setTransportToEnd</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a42728b466c39497c6ab154933690ba45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditPlaybackContext</name>
    <filename>classtracktion__engine_1_1EditPlaybackContext.html</filename>
    <class kind="struct">tracktion_engine::EditPlaybackContext::RealtimePriorityDisabler</class>
    <class kind="struct">tracktion_engine::EditPlaybackContext::ScopedDeviceListReleaser</class>
    <member kind="function">
      <type></type>
      <name>EditPlaybackContext</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac9cc0b32606328091e7ef21eb5f7361c</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditPlaybackContext</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a8b9995868b6c9baf18266a93b0cc9516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInstanceForDevice</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>af4b3fcf5eac021b8d5de2921c79f2de7</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWaveInputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a526d990d86720f346df644c5eae5a9b0</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiInputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>afeca3c04024d8d69214862ea104d08cb</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNodes</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a65566ddb551091774fcee0151333838c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlayAudioNodes</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6c40090e5f8ee0ea7f8451b27ac3adc0</anchor>
      <arglist>(double startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlayAudioNodesIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a9bd74566327fa7bd310cbd64f0921018</anchor>
      <arglist>(double startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reallocate</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab8b54bdb7925bbc8228b829252e79586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaybackGraphAllocated</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab1df8913064c40bbd41e9a5d2e37b1ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForPlaying</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>afb8cd8d3d8a60d782e9eef4825866571</anchor>
      <arglist>(double startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForRecording</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa992b263adb32a97348985521e70e14e</anchor>
      <arglist>(double startTime, double punchIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syncToContext</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ae623f236b5a6370841b051b1d830d0cd</anchor>
      <arglist>(EditPlaybackContext *contextToSyncTo, double previousBarTime, double syncInterval)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a0e26576d1213597e1a5a26d426dcfed7</anchor>
      <arglist>(InputDeviceInstance &amp;, EditTimeRange recordedRange, bool discardRecordings)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>recordingFinished</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>afb7b31b9615539fcc46d2c7abd2f1bca</anchor>
      <arglist>(EditTimeRange recordedRange, bool discardRecordings)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a9728e15e807d570de384c58bdecfd856</anchor>
      <arglist>(juce::Array&lt; Clip * &gt; *clipsCreated=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getAllInputs</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a904b81463bc0abc8045e0738979b1bdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getInputFor</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa87a6e890fb734f46b30456745b1e422</anchor>
      <arglist>(InputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDeviceInstance *</type>
      <name>getOutputFor</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aba247a63758a41c0aff43648026157b7</anchor>
      <arglist>(OutputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a0cf1f83fd41a8941552222734a55bc24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a4ba026cf32ac6392335764a5d1305537</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDragging</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a149a1f7f7fabe6fc2ae671e23c7fb7ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6646f7abcceb7102d73c417da2915130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a7b872bee721175350e3cae6a63465c2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getLoopTimes</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>afc10105319a272fef8eb53a4321e6f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencySamples</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a062ff294131170b3217b4462c04fcf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAudibleTimelineTime</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aca5c9a6968823cd935cb6d1b2956cb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a7c7541f86649472ec9ce05c6cdd3fa1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumCPUs</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ae285d72f33571e50f28dab6df9bce0ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeedCompensation</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a114864a99f3f7382549f811c861b107c</anchor>
      <arglist>(double plusOrMinus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postPosition</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aee77a04f3b3399d7478af78a71d25fbc</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>adc8149690c69de00baf052c33f8ae8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac7144612bb3dc1bb8ade08db12f393e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>globalStreamTimeToEditTime</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a46ab166f7b60db60b570585d983d1286</anchor>
      <arglist>(double) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>globalStreamTimeToEditTimeUnlooped</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a1889055d73aa8b74da8514a6a6fcf112</anchor>
      <arglist>(double) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resyncToGlobalStreamTime</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a326c0b06418bd7fe31488a51b33b3ecd</anchor>
      <arglist>(juce::Range&lt; double &gt;, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::PlayHead *</type>
      <name>getNodePlayHead</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a809f6c62d67d4651e67090927760ed17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>shouldAddAntiDenormalisationNoise</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a4e285943e25ae7f914adcde46640d65c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAddAntiDenormalisationNoise</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a8911ee48f106bcb688f69415c3bbdc5d</anchor>
      <arglist>(Engine &amp;, bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setThreadPoolStrategy</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a5ef39fccd5c3772c43e0e9f01a74528c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getThreadPoolStrategy</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a1749b4a428810692021f3384890a3b3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enablePooledMemory</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab445e4d14a28eb336f3cb415e98c8fbe</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab8acaf03f7c40d4032c5117209226efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>transport</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a5a7d177b8b332b7d723e128d3eb89410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>masterLevels</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a99ecf1ceef476dca68b1734249eb90c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiNoteDispatcher</type>
      <name>midiDispatcher</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a1aaa29bc4eaf2b40166cde497ee6c45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion__engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EditProxyFunctions</name>
    <filename>structEditProxyFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestStartPlayback</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>a03abcff3e1a56a70b52a0c21634e9c07</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestStopPlayback</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>ae13fcdc8c9671f4a4ffe67cbbe7303ed</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestSetPlaybackPosition</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>acafae0b38cee0192e67b76def1c95f0d</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARATimePosition timePosition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestSetCycleRange</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>aa4a085af51a53fe9b54df9a3a02668de</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARATimePosition startTime, ARATimeDuration duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestEnableCycle</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>a630dc6a64945306631dd09afcfebf6ff</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARABool enable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditRenderJob</name>
    <filename>classtracktion__engine_1_1EditRenderJob.html</filename>
    <base>tracktion_engine::RenderManager::Job</base>
    <member kind="function">
      <type></type>
      <name>~EditRenderJob</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a2009eb1997b0bffd260106360485eae8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const Renderer::Parameters &amp;</type>
      <name>getParams</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ae10933ea0a6217498b77d9181919190e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioThumbnail &amp;</type>
      <name>getAudioThumbnail</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a7658e43d3b95f23c1a739b98b6c29ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a53d2f3dd3354b786ab5a852a042236a1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Renderer::RenderResult &amp;</type>
      <name>getResult</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ac938fe6d9478f64544c728e534eec57e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLastError</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>af2a90afb53ed89b2fd1e2566461e8d58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>aca047020f493733543f83ce39da86ee3</anchor>
      <arglist>(Engine &amp;, Renderer::Parameters &amp;, bool deleteEdit, bool silenceOnBackup, bool reverse)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ae97db09b06f3a51a80d15c05f7fb4167</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;destFile, const RenderOptions &amp;, ProjectItemID itemID, bool silenceOnBackup, bool reverse)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a67f5aa5bfd3a12203ddd07edb5e35f99</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a1b0a324248639eda9bf6b21c67193789</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a71e75689525594b3c6334513483be6ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLastError</name>
      <anchorfile>classtracktion__engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ac26b02b6aa6e66e2b6e079eeb5989b59</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EditSnapshot</name>
    <filename>classtracktion__engine_1_1EditSnapshot.html</filename>
    <class kind="struct">tracktion_engine::EditSnapshot::Listener</class>
    <class kind="struct">tracktion_engine::EditSnapshot::Marker</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EditSnapshot &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>abf05f1a5dce67a983674db223feeb723</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditSnapshot</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ac2c3accb474e793f332f909b337d4e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getID</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a677c1536702cbcd8fa989bc283600dc7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aec86fb2ea742d0c41661f3e1a9d1c3fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getState</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>affeaf0d1ff51357adaf1f0582cafaaaa</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a6e7b7fa495d247a16fc972a6a549c929</anchor>
      <arglist>(juce::ValueTree, double editLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a24e321d8a9257bbe6bf2d0d5cb82e6a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFromProjectManager</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a5b54ec021165582b45b754722e481c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshCacheAndNotifyListeners</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>adb061a58338db327dd029d24d3df1eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; EditSnapshot &gt;</type>
      <name>getNestedEditObjects</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a551b4cf5fda754d2265e733759114937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a44ac3d9714548a1282f38925f74c1e1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTracks</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>af12b246e87d6623b653f10248e69e3cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumAudioTracks</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>af8494fed167da8e0f0993c0521e5a1e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfTrackID</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aadcf55705bbeea99b23a237f452fd3bb</anchor>
      <arglist>(EditItemID trackID) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackName</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>af8336773356aa478926eb01bb560ffae</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackNameFromID</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a65dc039f724faa0d6640b4896aab34c8</anchor>
      <arglist>(EditItemID trackID) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a39a6dd2c0c73a51218a797d765f6eca4</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackMuted</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a6c12df574810d3afc67cf4b82bf328aa</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackSoloed</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ace57303660038bc8e713e33f5b81d96d</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackSoloIsolated</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a1b5cc6fef0ec4efec81c9e2d0db24005</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>audioToGlobalTrackIndex</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ae3056e2b630d4ee462863b257b11ddf8</anchor>
      <arglist>(int audioIndex) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a11efda5bf7390ce83ed59a9c4732d64e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMarkIn</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a94984062098e033f7754fcdbc8f6dff0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMarkOut</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>afe96914ac644a5aadefd5485bcfc2be4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMarksActive</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a7802ca4648c3cc0ad9c575b71a8172c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTempo</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a384ad12397bdac62f3aff29d40d06f58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeSigNumerator</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ab916fb04f8d4009e5b18c4c7ad002c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeSigDenominator</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a3e79d61448071ec66a5b7dccc426c5c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPitch</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a17d277cfe5a50f64a0b068dd0ded8a9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Marker &gt; &amp;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ad890c39572b39fedcc5cab14ff7af3e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; EditItemID &gt; &amp;</type>
      <name>getTracks</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ac61e6157d3f1d34b533b95d7ac3a1f7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProjectItemID &gt; &amp;</type>
      <name>getEditClips</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a677618ab85b011c12d12ca258cf510d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProjectItemID &gt; &amp;</type>
      <name>getClipsSourceIDs</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a37d6e14783a925242e6dde8d93b41cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a400c1741b860f3da7518b0f0b6b4483e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ab1290aad3e50ea0b1a32cbfe3113d2c3</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>afc6d99b30da067d46a0fc887a0effa51</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getEditSnapshot</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a200f95fdfd6d31dedf7669e0680e1742</anchor>
      <arglist>(Engine &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aef331d19d7dd72ce9ca366cd6907e33c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditTimecodeRemapperSnapshot</name>
    <filename>structtracktion__engine_1_1EditTimecodeRemapperSnapshot.html</filename>
    <member kind="function">
      <type>void</type>
      <name>savePreChangeState</name>
      <anchorfile>structtracktion__engine_1_1EditTimecodeRemapperSnapshot.html</anchorfile>
      <anchor>a1c612a5dc99f99bcce62b43cf9894acc</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remapEdit</name>
      <anchorfile>structtracktion__engine_1_1EditTimecodeRemapperSnapshot.html</anchorfile>
      <anchor>ad99f93bef69dd2e5cd7b5f58b9c60597</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditTimeRange</name>
    <filename>structtracktion__engine_1_1EditTimeRange.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a18dfb1864772c2deb8d982e67af8fcd5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a16aa6ddeb36ee27be17af25d658c555a</anchor>
      <arglist>(const EditTimeRange &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a0d422c1f9c1ea6d49b5db8eb0f2869e2</anchor>
      <arglist>(const EditTimeRange &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ad3ad31050d009d00416e6b2f3d65ae8b</anchor>
      <arglist>(double start, double end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ac71a02ab163f34da9b70f0feea717f5d</anchor>
      <arglist>(juce::Range&lt; double &gt; timeRange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>acd957a9a7d9c0794f5e07840bd80e3ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a96902f9f916f0f2ce1ebc3a8119954b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>aa4c59e76e011432fdd416b9e88f8bfb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCentre</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a296523eaf994d9bde37fbd2030ee3d2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>clipValue</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ac606cbde95289f422de7991fd18a677d</anchor>
      <arglist>(double value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ab1bfded5117d152cb849a5686ad5a282</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a65402b9af8cf38a9b25a7d5bcc3eccfa</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a640e580baa95ae9d41cdf4342b37250c</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlaps</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a05f2d17c135e4a40ef517300c5d33326</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a5d84b345dbbde70a8f6bb362961f1adc</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a952ff2912e9109213568ae9e6312f61f</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsInclusive</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ab6100541cb8b4a00176997ef25c28da2</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getUnionWith</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a41cacc0e9d4ae6e85cd605f4ab2b24a5</anchor>
      <arglist>(EditTimeRange other) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getIntersectionWith</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ae49d096d28d842920356024d827631b5</anchor>
      <arglist>(EditTimeRange other) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>rescaled</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>aa26d926afc2c6b80bbffd527a4d3ef7a</anchor>
      <arglist>(double anchorTime, double factor) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>constrainRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a3981858b668144a63a5e2c97548e0bf7</anchor>
      <arglist>(EditTimeRange rangeToConstrain) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>expanded</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a134581488a477b1e244b39b26fd57a57</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>reduced</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>aa3888b220fe130cf7613d7c9fbcd3c54</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>movedToStartAt</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ac5b4a81c2fa8d0fc73a362b64956e454</anchor>
      <arglist>(double newStart) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>movedToEndAt</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ae920c597a60f0089102fc85d03789610</anchor>
      <arglist>(double newEnd) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withStart</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a0fb456d070c70196d5f6101ec968145f</anchor>
      <arglist>(double newStart) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withEnd</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a5faa1f03813a584c81875079bd8241ca</anchor>
      <arglist>(double newEnd) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withLength</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a6bf0e8b65225405c5a9c470d6d6e3181</anchor>
      <arglist>(double newLength) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>operator+</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ad65c1a5e23e1e97152bbc29121efbf5e</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>operator-</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a56de539e1bb0e64b63c5f7056a014375</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>between</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a403964bd6f7372bab3da97932434c847</anchor>
      <arglist>(double time1, double time2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>withStartAndLength</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a2519625560656347b67ba644f4d439c3</anchor>
      <arglist>(double time1, double length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>emptyRange</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a0eca852faf347f479a0c888754c231da</anchor>
      <arglist>(double start)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>aac71dd5bbeebd86dd059c8522ba52cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>end</name>
      <anchorfile>structtracktion__engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a5cfed4314d173defd295691ee4e85709</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PlayHead::EditTimeWindow</name>
    <filename>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTimeWindow</name>
      <anchorfile>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>aeef0d9fd59e387073f2c0748abb540d7</anchor>
      <arglist>(EditTimeRange range1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeWindow</name>
      <anchorfile>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a7f2af4ca5e5d50a08fbbac47807cf110</anchor>
      <arglist>(EditTimeRange range1, EditTimeRange range2)</arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>editRange1</name>
      <anchorfile>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a47f2c94ba2fdfecf31c2e481d3e548af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>editRange2</name>
      <anchorfile>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>ad171574581afb8cbe432ac12a5555b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isSplit</name>
      <anchorfile>structtracktion__engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>ab0d940854626117eb57a626f1ab55bc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TimeStretcher::ElastiqueProOptions</name>
    <filename>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>ElastiqueProOptions</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a5c1e97e13f3c41bdda41834757f0cb58</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ElastiqueProOptions</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a33ff94800dd780dfee57014d215d5ef1</anchor>
      <arglist>(const juce::String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a0cc046c4712c35ff8a6a0646a5b6c8e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>ad596737a45f64d30740743d74f630a44</anchor>
      <arglist>(const ElastiqueProOptions &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>ad1896c2166e41d85d326eeb661f09d99</anchor>
      <arglist>(const ElastiqueProOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>midSideStereo</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>afa0bf369e7dd4951fa56441c084b830a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>syncTimeStrPitchShft</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>af7922be1201ef960a4035aa487a912c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>preserveFormants</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>ac174f9ada60950dcfe55e9dcc9907b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>envelopeOrder</name>
      <anchorfile>structtracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>aa1293d915b0fb452731940f8cc6db8ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Engine</name>
    <filename>classtracktion__engine_1_1Engine.html</filename>
    <member kind="typedef">
      <type>juce::WeakReference&lt; Engine &gt;</type>
      <name>WeakRef</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a437a2a51d647b379f64a4ed42244d7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a846cc9d62ff0c89c294c848f23b6be32</anchor>
      <arglist>(juce::String applicationName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a6d1420652278db6ce5412506b01efa95</anchor>
      <arglist>(juce::String applicationName, std::unique_ptr&lt; UIBehaviour &gt;, std::unique_ptr&lt; EngineBehaviour &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a79b57f606265dd64cb2a0e0e62f29cf8</anchor>
      <arglist>(std::unique_ptr&lt; PropertyStorage &gt;, std::unique_ptr&lt; UIBehaviour &gt;, std::unique_ptr&lt; EngineBehaviour &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Engine</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a8f922275da74460f75ebbf6675aabc15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TemporaryFileManager &amp;</type>
      <name>getTemporaryFileManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a5043cace43a744213d8a9f4e7a4f392a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileFormatManager &amp;</type>
      <name>getAudioFileFormatManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aedb67b839116bfbb994a12744939aef0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PropertyStorage &amp;</type>
      <name>getPropertyStorage</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>af6b6f0807f5cbe1e21a060adda9b8ab2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UIBehaviour &amp;</type>
      <name>getUIBehaviour</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a2840e73c8a9f100e91b4e02e535d1eff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EngineBehaviour &amp;</type>
      <name>getEngineBehaviour</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>ab0e9f96abaaf5f8fee187b54d6b169d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceManager &amp;</type>
      <name>getDeviceManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a41d59161c3d49a7cfda55b140409b031</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiProgramManager &amp;</type>
      <name>getMidiProgramManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aa777ce9b1ad37c522d5480ea7939e217</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ExternalControllerManager &amp;</type>
      <name>getExternalControllerManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a586c318802368aa62300109b9cac251a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RenderManager &amp;</type>
      <name>getRenderManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a3c3be66b16b7eb7e4423d0e4d93a8ce9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BackgroundJobManager &amp;</type>
      <name>getBackgroundJobs</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>ade5893809dd778ade23c30bf99f6bb78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileManager &amp;</type>
      <name>getAudioFileManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a3608cefa7ba3cfeba95880348707cb3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiLearnState &amp;</type>
      <name>getMidiLearnState</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a5374f380013a40fa2a1f5408175afaf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginManager &amp;</type>
      <name>getPluginManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>af276f98b4a2396640b22771a0ae74286</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditDeleter &amp;</type>
      <name>getEditDeleter</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aaacb8c3dd79a73e620966abbf732661f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RecordingThumbnailManager &amp;</type>
      <name>getRecordingThumbnailManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a483d6f015f0c8e1bc47122d49293deab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputRecordingThread &amp;</type>
      <name>getWaveInputRecordingThread</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a7a1777de56740e41199f216f94df7045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActiveEdits &amp;</type>
      <name>getActiveEdits</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a108164be372a2d622c0844947aab6fbd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>GrooveTemplateManager &amp;</type>
      <name>getGrooveTemplateManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>ae317f57b23089ed1bd4b91ff2efa2c76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompFactory &amp;</type>
      <name>getCompFactory</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aad2181df0fef35c810dbd695d17edff1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeFactory &amp;</type>
      <name>getWarpTimeFactory</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a64e2e4b8f9633ec0b332da313cdb2d60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectManager &amp;</type>
      <name>getProjectManager</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>a7ca6d5450ee168023b77271e85770251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getVersion</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aeaaf24f7a54a87076f6088dd79ccd10e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; Engine * &gt;</type>
      <name>getEngines</name>
      <anchorfile>classtracktion__engine_1_1Engine.html</anchorfile>
      <anchor>aa94ca6498820e79047b2d09ec6de3fa0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EngineBehaviour</name>
    <filename>classtracktion__engine_1_1EngineBehaviour.html</filename>
    <class kind="struct">tracktion_engine::EngineBehaviour::ControlSurfaces</class>
    <class kind="struct">tracktion_engine::EngineBehaviour::LevelMeterSettings</class>
    <member kind="function">
      <type></type>
      <name>EngineBehaviour</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a197ec5c0ef472d0978796d0ca92c5f00</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EngineBehaviour</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ae31f7a195ffab63f1a1bec7afd97b72e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>createPresetRackType</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aec9fbae75ed7f473778560d5583997b4</anchor>
      <arglist>(int, Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Ptr</type>
      <name>createCustomPlugin</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a643ceeaa0dec13dd801d4ade86a8b722</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::PluginDescription &gt;</type>
      <name>findDescriptionForFileOrID</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aa629320b476a29ea66b219c2308286f2</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPluginDisabled</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aa7856a2daf7b0955d0b7ab2639f22ec1</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPluginDisabled</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a490ea648572ddb42a81e28880dc4ddd6</anchor>
      <arglist>(const juce::String &amp;, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldLoadPlugin</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aea67f28e2abd5835eea99d91d4b7a467</anchor>
      <arglist>(ExternalPlugin &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doAdditionalInitialisation</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a31d3d454835a27dcc11a9b997e6de597</anchor>
      <arglist>(ExternalPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Exportable::ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a56f47e37a519b93ce407846ede9bac8d</anchor>
      <arglist>(ExternalPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aecf47c305db00c62f916e263c8762112</anchor>
      <arglist>(ExternalPlugin &amp;, const Exportable::ReferencedItem &amp;, ProjectItemID, double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldBypassedPluginsBeRemovedFromPlaybackGraph</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a713f3f9c43e38f54c122bf8f776baf5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveCustomPluginProperties</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ae6b9f88882a144a1cd5b95ff86e77231</anchor>
      <arglist>(juce::ValueTree &amp;, juce::AudioPluginInstance &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canScanPluginsOutOfProcess</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aab3b9d12b5e5ac2551ebc88b722b4ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>autoInitialiseDeviceManager</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a3711264b196f50dc12c4eebbb2b26a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMiddleCOctave</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aa20ea4e4d7d897728b48ddf8061b1091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMiddleCOctave</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a74b3245e5d9297e43796a6ff241dde38</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDefaultNoteColour</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a7ea7dff9bac1313730b30f0bf96c39eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>editHasBeenSaved</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a69dbcf4e2c2777ba228f588eb6f6d41b</anchor>
      <arglist>(Edit &amp;, juce::File)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidiDriverUsedForIncommingMessageTiming</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a78ffa6137c47ca6b8d738ec9551b62c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMidiDriverUsedForIncommingMessageTiming</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a39614512b389b612a9c80c860b6d3eb4</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldPlayMidiGuideNotes</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a9bf39576bb4362282f9487f0347540a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfCPUsToUseForAudio</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5be38ef38a6834e83f2c144e35cfdab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldProcessMutedTracks</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a6b28bacc0d1dc730f2df81d953ab8ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>monitorAudioInputsWithoutRecordEnable</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ace053bbb7f34491a78e64eba0aad55af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areAudioClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a92647732698a6d19d161ff94f9b02cbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAudioClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a2fb22a484aead305c5bd9c7351b38e83</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areAutoTempoClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a56f8c427351c3f54914a51542248ca01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAutoTempoClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>abb6eb39a7a52c5d25d90d6514e965df5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areMidiClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a86a6e39fd0ee54bda29e71dc2dfb0736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMidiClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ad0c09d4d243420dd28cf82408d668773</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>arePluginsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a299927f6737fdee15ae40041f5b89544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPluginsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aa362dfbbc7a480f1dc07759414515928</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EditLimits</type>
      <name>getEditLimits</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a84fb0c7d3b014333bea194d74dc86164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>lengthOfOneBeatDependsOnTimeSignature</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4f38b64d05ab5af9d4fb2f9f9c169415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LevelMeterSettings</type>
      <name>getLevelMeterSettings</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afc94d243b7f9abf25ac4ed92be9c8247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLevelMeterSettings</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a207a99bb13a1a6b72ccdc3eccf4678e1</anchor>
      <arglist>(LevelMeterSettings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProcessPriority</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4341941210734eac1e2459fc4c687954</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDescriptionOfWaveDevicesSupported</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>af4489775804bffcf666185549c422ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describeWaveDevices</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a367e30845035def0fae328970aabd521</anchor>
      <arglist>(std::vector&lt; WaveDeviceDescription &gt; &amp;, juce::AudioIODevice &amp;, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::MidiMessageSequence</type>
      <name>createPlaybackMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a6259e605d1c0d8a273e6563cacbe0624</anchor>
      <arglist>(const MidiList &amp;list, MidiClip &amp;clip, bool generateMPE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDefaultLoopedSequenceType</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a3fcd7495806d6373d5b2052ccfaaefbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>autoAddClipEdgeFades</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>abfada92e19fc3f8885df20a599fa0539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ControlSurfaces</type>
      <name>getDesiredControlSurfaces</name>
      <anchorfile>classtracktion__engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a20496169f6d1d5e42b122e750b8e73ac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Entry</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Entry.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Entry.html</anchorfile>
      <anchor>a484f67009313aec1258b90c2be6c45c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Range</type>
      <name>range</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Entry.html</anchorfile>
      <anchor>a85179ffa721dcd11a6dcaba7f1536990</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileUtils::EnvelopeFollower</name>
    <filename>classtracktion__engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</filename>
    <member kind="function">
      <type></type>
      <name>EnvelopeFollower</name>
      <anchorfile>classtracktion__engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>abd54dbce0f2dd3e5ae17f8d792c29a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEnvelope</name>
      <anchorfile>classtracktion__engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>aff6a9a22cbbaca9ac431d0c2a28dceda</anchor>
      <arglist>(const float *inputBuffer, float *outputBuffer, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefficients</name>
      <anchorfile>classtracktion__engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>a144a4d2fcc3220270762bc45f5e35001</anchor>
      <arglist>(float attack, float release) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EnvelopeFollowerModifier</name>
    <filename>classtracktion__engine_1_1EnvelopeFollowerModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::EnvelopeFollowerModifier::Assignment</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EnvelopeFollowerModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a2912ea23917ae2439066cc33eada4437</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; EnvelopeFollowerModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a796cd0e021c65eda09bee945fba34ed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnvelopeFollowerModifier</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a16dd5de02269a2905e9ae661f498f8d1</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EnvelopeFollowerModifier</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a427d8e57cfa5e4a1cb7bbc26599abaae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ae50c402c441a8f4dd4fc7fb3e4fce240</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a78993ab7569ae94acf63a6fe571a81f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ae070bb9794cb2326ef5416ea6ec05354</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getEnvelopeValue</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a206eb4dfbc095412df10a0bf232e1a29</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a59d7831ce37e15e520d8eb74e7388ea6</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioInputNames</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a6189bf7969d8c2fc6729c33b1e2f4577</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a65c15a56095ccf96f580a2697521f8a3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a1c42a09b2975e243edf50baf96140ee6</anchor>
      <arglist>(double sampleRate, int blockSizeSamples) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a9feff7d3c37944900c164b84e686ddbc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>af624985f982edb0f40ba9e1a5ec6e5b3</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a03cc11ec539b4ab064b6388fcc99f22d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainDb</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a8ff26efd997391af2eb62554f53ff314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>attack</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a76cd2390d54c85fadb4aaa0ade1f9650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hold</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a1e375ddab03ead0aa7efe30473528862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>release</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ae909d6c9f1728ef6cf28a4bdb7b60a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a5b502415b95a4fcc636a2594a9697963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a491a93427e854ea51783aadc39fe6d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>lowPassEnabled</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a260d0fee711294f50348acdeb45eb632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>highPassEnabled</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ac6e57d6172c327230497854d598d7b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>lowPassFrequency</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a78511ecc08097cb775034556a7a3f2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>highPassFrequency</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a53e407e2132218840676e7eb55b06f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gainDbParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a41dbdaad1ff23a8287e8cb8162f5d77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>attackParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a2fdd6f1253bb416f3a64d4b21137c433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>holdParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a02dffa25d300e42c498c2031f126cb53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>releaseParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a61955aeb61b8d5419fe9e64dd821ce4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a11b6203f939e2249cbd78bcdeba5c822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>offsetParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ab1e5facc5803e3d9d36983f01f098198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassEnabledParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a26586b73c3fa8066c5b2d7bdb7057c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassEnabledParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a046c9b3d6ce78fa5c25c638514f66e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassFrequencyParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a35a2c0cd9f3b2bec6a6249529f02c3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassFrequencyParam</name>
      <anchorfile>classtracktion__engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>aa0b52ded06fb8c35e213fe5e7918a7c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::EqualiserPlugin</name>
    <filename>classtracktion__engine_1_1EqualiserPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>EqualiserPlugin</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>add4a60437265cec461ddcb45442bfc7c</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EqualiserPlugin</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aa9d273f1cfc7d7d57366b1fcfb7334e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDBGainAtFrequency</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a20474591f2b545bc74b22a230381d780</anchor>
      <arglist>(float f)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a05cb391e7498c6b5baef5e8d622192c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a698a1e6ba02bdf87ef8c1dbd6dcbf959</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a077d917eda34975502883f573bf67408</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a6541c33ea21eaff8c55e6ace9c1713e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a588944d1d1daded1f87fd79ff0029051</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a7060a4e381e03193e4e1a012225ee6f1</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a5548acd18ce53e4a7857044cb3868660</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a60fc4de643299e99c73fef31e598bb57</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a00a911a4b17e4b2a9de447dbebed20e9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ab061df405e8f853d68e5dcdc0f309d3e</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>abb783f746c57eefbcf756155dce7ad7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aade4cb4a89e7a58dfb9f3ec6e24c1703</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a5bcf20b7772ecd81be80aad944fb2a58</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>afb6408a922149d72b675ba1ca75df158</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aa7a862931b96a12d94c46c0545f10960</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidGain1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>acd9ce2b946c95ed0defcc8800aa11cfa</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidFreq1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a5030a927b50a7e3fff7cde478d6828ff</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidQ1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aa3dc36f5e978a4fc547f965385312982</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidGain2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a6dd670ed39e0a0af7740b3a74fd276e1</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidFreq2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>abe65cc805bd956783cbf0bb2e3363d24</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidQ2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ae71516f748a372828323c092c408df3f</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ada62c91fb73f12499bb09fde97b75e0a</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a79bfafedd0e1ef944cb5bbe075117172</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a362ffcc0e2e0a52ff557ea6704fb550a</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ac84fa1e17c43d1f365cc7d6ce8ad0c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loFreqValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ae3a899c7a6db952220333c97f83d7ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loGainValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a909922f90e403615d75ebc4ff154de44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loQValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a360b34de8075c61011eade7edd181093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiFreqValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a3cc270281498c73cbf0e7020f7feae4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiGainValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af1ec5aa39cc1010da4ff80e6aaa07e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiQValue</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a881a23941ec1f4c10e15bf464c2631ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midFreqValue1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a4a6a2f532ab0acbcf79e81998cbc5fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midGainValue1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>adf80964a938d9bb275f398926454da83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midQValue1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ae59eaa525bcde561ad3009666864f576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midFreqValue2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a29f7745577bd3740f77f3776aaa17394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midGainValue2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>acd6598a95abfadae52d82b89e91083d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midQValue2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a294943d6b770aed17d2725f14ad9eed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>phaseInvert</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ab26e017bfca382ba2236f0ef1bc83151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>afa9db92dd5f755b7dec996da4cbae0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a7abd0e8faddf06ef34b27c6102494127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a066280414a382ef599685906dcc2b94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a9d1929f84421ba1aef552e8b07764fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>afd4f3f58b31c28ceef12abfc9458e520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aff4d5feb65a39e393ea74d9f4bfbf0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midFreq1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ada2fd63fd5142adb3ccc652998343964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midGain1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>adf15ebb1b0ed743528e7b29f12590e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midQ1</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a96955f0140a54d2694f83d5358fd9339</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midFreq2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af2aff3f94935d6e4f89d975de113b52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midGain2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a8df501093834995300f1370128aa50d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midQ2</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a42a1432030763ae8617ccfd59f5e23d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ad9c202ec93973aeb8d6ce07278db2f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ada8d63099c20b16fd00954978ccfa0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxFreq</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aff01a7506ad9408e6c72e944de357026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>adf2e21b0945b7318ae83d9b0361c68c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxGain</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>adaa49f24a4a30227e136d5a453b41484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>addd72f0edb081af3c928413ff036a954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxQ</name>
      <anchorfile>classtracktion__engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ab81f6b4f72e4f0e6330b4a092c4061dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExpEnvelope</name>
    <filename>classtracktion__engine_1_1ExpEnvelope.html</filename>
    <class kind="struct">tracktion_engine::ExpEnvelope::Parameters</class>
    <member kind="function">
      <type></type>
      <name>ExpEnvelope</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a6eada72f4607a4219b1bb8ac35b1c067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>adc8e97ca13dbccac6d210d1cda3794c8</anchor>
      <arglist>(const Parameters &amp;newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>ae6692cbf9ae3a822ff2efdb08e0a429f</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>ad43261259b910a977198ecde908078d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOn</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a1a8c7272453da53479287ef609a7a8d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOff</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a3e358b2f8d022470c397efac0bda29b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>ad79dca479d59ac6fe32d893b5c632dc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextSample</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>aa6488a5381cbbe816e43259be87666cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEnvelopeToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a46eeb141958f9adc91411b31528530b3</anchor>
      <arglist>(juce::AudioBuffer&lt; FloatType &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnalog</name>
      <anchorfile>classtracktion__engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a92c1bb4bf51fce2ef3fcde87d0888aa0</anchor>
      <arglist>(bool a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Exportable</name>
    <filename>classtracktion__engine_1_1Exportable.html</filename>
    <class kind="struct">tracktion_engine::Exportable::ReferencedItem</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exportable</name>
      <anchorfile>classtracktion__engine_1_1Exportable.html</anchorfile>
      <anchor>a735f9ee23dac6bd89de28d9f8da6440f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1Exportable.html</anchorfile>
      <anchor>a243881f563227f28871f5db8de8bf836</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1Exportable.html</anchorfile>
      <anchor>ac2b41967cab8e5c34de148d63d477d7f</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; Exportable * &gt;</type>
      <name>addAllExportables</name>
      <anchorfile>classtracktion__engine_1_1Exportable.html</anchorfile>
      <anchor>a141fa3ecd7c28ccaf51ea5b7887dbe36</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExportJob</name>
    <filename>classtracktion__engine_1_1ExportJob.html</filename>
    <base>tracktion_engine::ThreadPoolJobWithProgress</base>
    <member kind="enumeration">
      <type></type>
      <name>CompressionLevel</name>
      <anchorfile>classtracktion__engine_1_1ExportJob.html</anchorfile>
      <anchor>a97726a9aa945ec15f88aae82c44add63</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ExportJob.html" anchor="a97726a9aa945ec15f88aae82c44add63a90ac1172c9ea271784a5efb8fa7aa101">lossless</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ExportJob.html" anchor="a97726a9aa945ec15f88aae82c44add63afe42c92aac580ced7226bc271b3fcdb9">highQuality</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ExportJob.html" anchor="a97726a9aa945ec15f88aae82c44add63a928af7a23396651ec8eb67a63833fd19">mediumQuality</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ExportJob.html" anchor="a97726a9aa945ec15f88aae82c44add63a2e896e1dfdd12c20ad7372b5f40fa6ce">lowestQuality</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ExportJob.html" anchor="a97726a9aa945ec15f88aae82c44add63adfd25ff244b001be7beece9729517779">uncompressed</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ExportJob</name>
      <anchorfile>classtracktion__engine_1_1ExportJob.html</anchorfile>
      <anchor>acaf8ee28b57fa59ca9cf050f8b9c646f</anchor>
      <arglist>(Edit *, const juce::File &amp;destDir, const Project::Ptr &amp;newProject, const Project::Ptr &amp;srcProject, TracktionArchiveFile *, double handleSize_, bool keepEntireFiles, TracktionArchiveFile::CompressionType, juce::Array&lt; juce::File &gt; &amp;filesForDeletion, juce::StringArray &amp;failedFiles, bool includeLibraryFiles, bool includeClips)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExportJob</name>
      <anchorfile>classtracktion__engine_1_1ExportJob.html</anchorfile>
      <anchor>a420860165035ab7ea77143b1bef639f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classtracktion__engine_1_1ExportJob.html</anchorfile>
      <anchor>a77f681284ae88d72679cc948d03fe53b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion__engine_1_1ExportJob.html</anchorfile>
      <anchor>aa31363056881e07c5d6950c2806ceb0e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExternalAutomatableParameter</name>
    <filename>classtracktion__engine_1_1ExternalAutomatableParameter.html</filename>
    <base>tracktion_engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>ExternalAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ab71fb65e02179758bb883d8c9bbebb14</anchor>
      <arglist>(const juce::String &amp;parameterID, const juce::String &amp;name, ExternalPlugin &amp;owner, int parameterIndex_, juce::Range&lt; float &gt; valueRangeToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalAutomatableParameter</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ac3f2d25d9dcfdd62c50fb6b018b07458</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAsListener</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a73897bd8728ef199c1ec9077a6664165</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAsListener</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ab78d6a4d0b287ce09704c77cc61eacc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDefaultValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a54bb9faf02409d397df42717be518dec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a67b73a572cd29fff848a15b8336564c2</anchor>
      <arglist>(float newValue, bool byAutomation) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginParameterChangeGesture</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ad8063318d9e97e3c661d22e448e3ac7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endParameterChangeGesture</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>aa4fd4ec31c7449b0420daee305b5d26c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a8332ba0ca123cc5438398dfb08a8d747</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stringToValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>abf353e57a1244393d8d63e3714f0601f</anchor>
      <arglist>(const juce::String &amp;str) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentValueAsString</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>acf4dfc08b0c499c7c865ce98074c90db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabel</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a0a66760e12f6c71f5dcbffab477460a8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueChangedByPlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a4942845516681aa48f8bcc088e8b2f5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a94915a6cf653d21fc66e50ad200ada09</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getParameterIndex</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a0519d94516e922a0eeef4b1041cf2a65</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterShortName</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a72e7420fe742d26b570ab0801933c2e0</anchor>
      <arglist>(int suggestedLength) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayName</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a8e2f1e5b44d7841e52f2df13a978f9f6</anchor>
      <arglist>(const juce::String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiscrete</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ad7baebef131763298c7471f52b59a31b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfStates</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a52113c7bb2c08d592c8d1f04d57d28bb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueForState</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ad100b96cab7f5aeceae52ffa32f2a096</anchor>
      <arglist>(int state) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ae4a98ab506d35d02a04dbfd6e91e02ed</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a53c0ff008c01f731bf0b839c6ac8d5d4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>snapToState</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a46638080d6b6adf48b41920ee186cc0b</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLabels</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a94faa112bd3b97655833db1ab6c19ecf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateForValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a632900a6c3453e40b80b9f6a4c66f396</anchor>
      <arglist>(float val) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExternalController</name>
    <filename>classtracktion__engine_1_1ExternalController.html</filename>
    <base protection="private">tracktion_engine::SelectableListener</base>
    <base protection="private">tracktion_engine::AutomatableParameter::Listener</base>
    <member kind="function">
      <type></type>
      <name>ExternalController</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a22dc0322f39bce8cdc6144e6a3aae99e</anchor>
      <arglist>(Engine &amp;, ControlSurface *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalController</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3b1b18bff91dbcb7e379169500037f22</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a9cb0b2d56e10fb08b024e63403b35f96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a84f1059e36e1c8fbca123ad4a9eb9237</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsMidiBackChannel</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a47dbfd414ec7c6ba6bc2844e338fedef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDesiredMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a5089ff7a42ff941c1dd963a0379a12ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDesiredMidiBackChannel</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ab4eb52cc4d08a8640986deba4f64f169</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsOSCSocket</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a54ec491796dd50cf30b456c395236cf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumDevices</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a46d4611ed5661b4359d4831b889a5e42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumDevices</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a6cab4b5f354466ed3321a3d7fecf552c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMainDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ac53bffad3258edf7cd85aa5c69c161ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMainDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a4157f0a7c7b5a63d69b0bf8b416e95dc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a592d19cfb95e7f88d2f4afb1754d6a99</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a2903c77c3c5e1d48f3e796708b7c061a</anchor>
      <arglist>(int idx, const juce::String &amp;nameOfMidiInput)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBackChannelDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a6df3d1a7009eefaf66abc6a001609384</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackChannelDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>af83975dd85909fb0f3684edde4e2fb82</anchor>
      <arglist>(int idx, const juce::String &amp;nameOfMidiOutput)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingMidiOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a789139da0ebb5a0f7149d5d2ef3677bb</anchor>
      <arglist>(const MidiOutputDevice *d) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOSCInputPort</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ab8cdff2d0f3c9cbb725335f772378a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCInputPort</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a0755299c4e7b7c439b5a8f2960c75dd0</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOSCOutputPort</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a1ac1cfa23cc8182ebffb1938468c39ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCOutputPort</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a6a37a40bf2edef9c34b9ee78a9ce3c60</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOSCOutputAddress</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ab635e074d63394712367ec357fdda0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCOutputAddress</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aecaed18eeec753377bf33d567b5822d7</anchor>
      <arglist>(const juce::String addr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a182a95c1655054fdf9fb11ccc2124d63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a6640a5ddd1ae1848f89fc78751fe4ead</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeletable</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ab09d0c3a84d585d5b8ce9a486fb41b87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ade7d9762d9bab9057154152ad15f3da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMidiClock</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a7b27f11399776dccd384b213bd00ef69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentEditChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a05c14b445a9b3e8e540d82561719164e</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a989397c218aae39c5dc17e33eb7b5f08</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterFaders</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a7a3f86e15d66c6ac0781e4161f5ea8bf</anchor>
      <arglist>(float newLeftPos, float newRightPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a411793272c4ea79f82e505c5c085513d</anchor>
      <arglist>(int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ade4a1e5424dc06b8c251a98b5d78d1df</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>adbf83cb687e30304893e22f9ca624d24</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a2e887846d893e11e1b31856bbbb2ff89</anchor>
      <arglist>(bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a9abd235f53d643f9b0a19535664ac693</anchor>
      <arglist>(bool isRecording)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationModeChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>abb7d74a99d9eb880981e91d75bbdd9f8</anchor>
      <arglist>(bool isReading, bool isWriting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a2713bae25de5db554028a533ea7bb7be</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>af045286f88cf7cbbd9a812b32044e9d5</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a68822d71cd8395a0446fe195e3b55516</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>af7a64e59cacbfa3577f11cf78a886676</anchor>
      <arglist>(int channel, float l, float r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aedb0c32bf0a7575a841e7302dde61c9d</anchor>
      <arglist>(float leftLevel, float rightLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa66d04625dea05f13845d7a891d109c4</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelected</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ad88d839d166e61f479c8ec4cc30d8be4</anchor>
      <arglist>(int channel, bool isSelected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObject</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a4352bde419f5291aadfcc158081036a9</anchor>
      <arglist>(SelectableClass::Relationship, bool moveFromCurrentPlugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a00034f0d4997073db719111990ab1f51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePluginsInTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a4bcd7c341b996487becbc1f85e20a785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changePluginPreset</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a38061945ba7d875bdb4d032e158cf429</anchor>
      <arglist>(int delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloPluginTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa3567a040e09132534f13acce17d8496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxSendLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aefe3649ca1c4aa67f887395efc50780e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a38bc8d0b946be72e1c7ca150ab40f1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameters</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a6c82e5227a0d8f6617c42074517823ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMarkers</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a48224d83fedcaa3530d16596b26e534b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectedPluginChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a7e82f0b9a8b33e5d6cbbc1d21c0825fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a147eedf5a0d98cf3da14f7fd5b2e37ca</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a613185a3c85bf0460d6522f37e10bae4</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a2f3a08bd4ba52ae927917a804e4b5d1f</anchor>
      <arglist>(AutomatableParameter &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentValueChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a361ca54fb8ceaa64606158a37eaf54d0</anchor>
      <arglist>(AutomatableParameter &amp;, float) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackSelectLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a9b36f50d65e7a0600021cd3501edb7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackRecordLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a18c052bc85afa59e6c9b608c94ca7714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePunchLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>af11cbac632b2b7e2b74ebbb8aa63e7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateScrollLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a5ed77ace70ceb74795df996f4bc27f5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateUndoLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a8784164a607dbe30d3efa8e4acb3e2d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFaderChannels</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a5ae496b390a0616c4c2f7abe3b56805d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderIndexInActiveRegion</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ad3a3812a55bbeaa0a3a65a7b3525663c</anchor>
      <arglist>(int num) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getActiveChannels</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a160a737ca7fd374c1d61ceea4643abfb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumParameterControls</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a92a8d6951fc51919e92cd466c9dc0f96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getActiveParams</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a940a856ad4927290a2a9b55b32f33a87</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiInOutDevicesChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a284e49fb531a3ad2383355ce1b7e946a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oscSettingsChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>afd61390f4efa4cedd73e0adea478d578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa6a9142d61ec8b1f3cfc607ce7467a5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a44a12f610e1a4af084ed85382bbda3ed</anchor>
      <arglist>(MidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a2c5e3941c0404970937e69893cce8f59</anchor>
      <arglist>(MidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a5b4d1878efdc479217c802efd0d0b28c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a5fd9d2cdba7e94027188b9c5a752a466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a159467504f57cd7246ccf74407ca4dd9</anchor>
      <arglist>(bool eatAll)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getSelectionColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aec96011be7d4c802b17fafce6c7eb1f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowSelectionColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3cb554945863ad8b3be5be762c3e52ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa2b890d9c2d2fa8ad5cd3dc829ece7b9</anchor>
      <arglist>(juce::Colour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowSelectionColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aae6964757dfee55ef90aeff2be7f7578</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeColoured</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa107355e06bfd2f4e7597eeeff132ffc</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getTrackColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aac57bed67daefd621c5270dfbf869caf</anchor>
      <arglist>(int channelNum, juce::Colour &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPluginBeColoured</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a9423933492743a7c74db340b92a25166</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPluginColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a4ee795c9928151dc3bcfae730bc2769a</anchor>
      <arglist>(Plugin *, juce::Colour &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintParamSource</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ab2b801c9b15760f861afae94191cc020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawTracks</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a41f686744e6d1c97b66c3eac9a680f51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ControlSurface &amp;</type>
      <name>getControlSurface</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>afa4630abb1dbd458696c5d4075124548</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type *</type>
      <name>getControlSurfaceIfType</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3f86af50a748489f3b3b56785cb4146d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ExternalControllerManager &amp;</type>
      <name>getExternalControllerManager</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa34b49aacac1cbe93040ae60d949302b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a665c7a04daa12fc4b912a4143387c5af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TransportControl *</type>
      <name>getTransport</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>aa75bcca09af641f6da764f8676908a7b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getInputDeviceName</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a68e25150e1373f5ff901883919c66178</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputDeviceName</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3449e8d012c50b218b07c276c1c67ddd</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiInputPorts</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a23c8468bfcd339f77b685042dc6b0a96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiOutputPorts</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3100c3500da2069f76bcc1fd67d0cb7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>shortenName</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a16a67b33499b292dcad2987fc7f7d65c</anchor>
      <arglist>(juce::String, int maxLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNoDeviceSelectedMessage</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a18321b26da88b200083b150aa209e7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a8831357d15744faae68f392538a333a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExternalControllerManager</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3a6e324aa96b37fe6274a839429a5033</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ControlSurface</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a3f4fcfbc4410b1fe7f335cb44f08d9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MackieC4</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>ad5dad8a0414596093afc2592a1809e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MackieMCU</name>
      <anchorfile>classtracktion__engine_1_1ExternalController.html</anchorfile>
      <anchor>a8d7976b5b33c481511d7420b74a4e303</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExternalControllerManager</name>
    <filename>classtracktion__engine_1_1ExternalControllerManager.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Protocol</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a630c77e754712fdee07922815d7708fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a630c77e754712fdee07922815d7708fba63c50838a3e955763659c46fac478f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>osc</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a630c77e754712fdee07922815d7708fbae5583b8a52715827447e9fbd5bcae62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a630c77e754712fdee07922815d7708fba63c50838a3e955763659c46fac478f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>osc</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a630c77e754712fdee07922815d7708fbae5583b8a52715827447e9fbd5bcae62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalControllerManager</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a11444ef209139b5a8d8362166645a504</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af04327b9099b8fd1b5a827fb1dc011de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae9a3f54e025ea9f46e64ced795108c26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentEdit</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>acdcb21e0119025cc3ca4355fbd3b3671</anchor>
      <arglist>(Edit *, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromEdit</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a2f8b1b218ca7ffce336248f0efa59c1e</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromSelectionManager</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a9d1029e78e4d817ffacb188c2878d636</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToEdit</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3b20ffaa11f4f8fcc0dc8de1b3127bde</anchor>
      <arglist>(const Edit *) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToEdit</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a35041d676fed4bdddd00a28099533232</anchor>
      <arglist>(const Edit &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>getSelectionManager</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ac826524ec31ecf902435f522770912eb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::OwnedArray&lt; ExternalController &gt; &amp;</type>
      <name>getControllers</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abfac275f1efb716ca72b57860efbc53c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllControllerNames</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a16d5a08df6c6c4de42bf6041e88585d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ExternalController *</type>
      <name>getActiveCustomController</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad73e295e0becd061ea646733344a9d5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiInOutDevicesChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a1a2af458fd3119bfcdb7e5ebaa9837ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createCustomController</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3c23a2bd0a52bbe24d0500e222efc12a</anchor>
      <arglist>(const juce::String &amp;name, Protocol)</arglist>
    </member>
    <member kind="function">
      <type>ExternalController *</type>
      <name>addController</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab378da0ac6ec85484a4d8e18ff17b55f</anchor>
      <arglist>(ControlSurface *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a54b906f7b291ef912b5608c8d4510d62</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af7443dff508e4d9b685ea26b4ca5f435</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterFaders</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a885a709f1ad06924e286f260ea05c01d</anchor>
      <arglist>(float newLeftPos, float newRightPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a94d1eb5f4c829ef0ebc3e166ef264a1f</anchor>
      <arglist>(int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a74178186f07bc9610d331fd012771d19</anchor>
      <arglist>(bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a98a8e20a4b6a73c0816d9ca93dabf53b</anchor>
      <arglist>(bool isRecording)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationModeChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad7f260375aba5202adb4d982f2573ebf</anchor>
      <arglist>(bool isReading, bool isWriting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ace6318ec4e7c56b6ad7691c756aeafb6</anchor>
      <arglist>(int channel, float l, float r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a37d307720d9df20b914b4ece165dce04</anchor>
      <arglist>(float leftLevel, float rightLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3d126e6416c174b97fcf626e69b8d164</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editPositionChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6eb458bf9ed41e4e48c67c4eb00267d2</anchor>
      <arglist>(Edit *, double newCursorPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVolumePlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6602140e6b4bbe7c9ab7a8701dc2c106</anchor>
      <arglist>(VolumeAndPanPlugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVCAPlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a028929a698eb67dd744e6ed24312ad69</anchor>
      <arglist>(VCAPlugin &amp;vca)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a805fd18d04ae521836311c02648c4117</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a8af22dd7c95d676928ee8af39f4218f5</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab3bf8d52deb0cdec5c4b49fbe7f0e798</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxSendLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a09476c9298e63467fad9b18fe8394518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMuteSoloLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aea4bbe8f976108e65b46e6aebb214ee7</anchor>
      <arglist>(bool onlyUpdateFlashingLights)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a57e6104c2df85007e80218cb9d5cb9c1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeListenerCallback</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af808bb5b00eaf3385c4efa22c451435f</anchor>
      <arglist>(ChangeBroadcaster *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeColoured</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3e86ca7efb63f4857d31690b52853e1b</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getTrackColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a45594be1b4790e6110e2e7308508b1af</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPluginBeColoured</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a2761f41c4bfeba6e049579674592945e</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getPluginColour</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6e4a8ddd5b19e7c6c7dbe58910c4804b</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAllDevices</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a1930a8a29665036cb637621307d69c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameters</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a871078069dc2b9f49a6e5312c6c05772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMarkers</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aecf94dfdbd6e0607465a73259ea9fcab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackRecordLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a4921a44372e19a5f2254d37f6d261371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePunchLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a204817c83e8ac4c1c788e27398de93bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateScrollLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a1ea96043f53b4501ce30f80caf5e01d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateUndoLights</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a525c4ed71354731722cfbdc0413b9d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannelTracks</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aed401cf8cb3c62465e57e1a8db160d0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getChannelTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a699141745783b76ce2713fc0eb52d8d7</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapTrackNumToChannelNum</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad1d34033751d6df460aeff2cce906a7a</anchor>
      <arglist>(int channelNum) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXTCount</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>adab033cd7c4e8f96f4d3dc4958f06107</anchor>
      <arglist>(const juce::String &amp;controller)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXTCount</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a8383fa94d0b3534710e20d77e121cf60</anchor>
      <arglist>(const juce::String &amp;controller, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshXTOrder</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a13d8aead75287b8cc97cad62da0e8c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedFader</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a2dfd9d0bef97168d2c5abcaf954a0728</anchor>
      <arglist>(int channelNum, float newSliderPos, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterFader</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a38ed773338d4b90724162f32e46f2dc4</anchor>
      <arglist>(Edit *, float newLevel, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterPanPot</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a1f89de5c68a033a8f5706c99e6f2b14a</anchor>
      <arglist>(Edit *, float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedPanPot</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a5bf18aec19fdcecc45f2a2a2c57ae83a</anchor>
      <arglist>(int channelNum, float newPan, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSolo</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a8cffe9840fb53d1eee2b43786b46e14b</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aa394b5875b2d537b1196558c979d084c</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMute</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abc163566ad62ab7ae0000f6752b5bc55</anchor>
      <arglist>(int channelNum, bool muteVolumeControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab41d891dcd4e229d1e5581a0950a6353</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedClipInTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a66af29a3f4d0d3ca4b8fd1985ae4a900</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedPluginInTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6026b6fbae2f286d63e1e2f6a0d650c1</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedAux</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad9f0afcea058325a3e9fb513ec5d8718</anchor>
      <arglist>(int channelNum, int auxNum, float newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAux</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a2a156ed44ee2639bab9f8bb2e67651c9</anchor>
      <arglist>(int channelNum, int auxNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedQuickParam</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a93c5ac37f824363624853ee2a83ca7e1</anchor>
      <arglist>(float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aa3be0285f34b70eb1f31886da3122e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintTrack</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a37182d3ab03191a3a976b587b9214c8b</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintPlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aafebdd4d7e0a102a54632927bc40e578</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(const Track &amp;)&gt;</type>
      <name>isVisibleOnControlSurface</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3f4c6f79409d976aec12de4e02445760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(FolderTrack &amp;, bool)&gt;</type>
      <name>setFolderTrackOpen</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab7e48cdac26eb9ff835d30270ddf2301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(FolderTrack &amp;)&gt;</type>
      <name>isFolderTrackOpen</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a9d15d1069d924f97b05798d37237d189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Edit &amp;, bool)&gt;</type>
      <name>setScrollingEnabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a80adb77317ac6ac3fff176d5a0b967e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(Edit &amp;)&gt;</type>
      <name>isScrollingEnabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a07c12b5b37858af735bce54bbf7358ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a200c7077411d3433ddae09b2db1ea454</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExternalPlayheadSynchroniser</name>
    <filename>classtracktion__engine_1_1ExternalPlayheadSynchroniser.html</filename>
    <member kind="function">
      <type></type>
      <name>ExternalPlayheadSynchroniser</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a31422816b78efbc509468b25129ea3c0</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synchronise</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>afe8fe353f1c77d4b41338f0722c28012</anchor>
      <arglist>(juce::AudioPlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synchronise</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a8ac060982b1d3927e079932c5e02d2ad</anchor>
      <arglist>(juce::AudioProcessor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getPositionInfo</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a427f34e1aa32dbbe3d6351bf32a906b9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ExternalPlugin</name>
    <filename>classtracktion__engine_1_1ExternalPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ExternalPlugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>adb75dec931eaea9dc652c9ee62297010</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExternalPlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1bc9dfa52527075ed1019cb40be98bbd</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalPlugin</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a03b5884808e82c5c701bc693af709cf3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getIdentifierString</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af2f79ff355888fc3a0f191c31d547b01</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a78c673d150ccd9227a370341ea78737e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processingChanged</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a397fd6e3c8c5be84e948c0587c5865e7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>afcb60ae4252de458022e3e4492140634</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceFullReinitialise</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9136f61085b420bae78104f7554a894d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af46aa6862c97164d2c024477d30342a8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushBusesLayoutToValueTree</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ac8dd03ef75e9d3d094ac1053aca252d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a0a06e195dd5aff918024a3ff62ecdcaa</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPluginStateFromTree</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2c62d57d296abca080b7de23f12e306e</anchor>
      <arglist>(juce::MemoryBlock &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromMirroredPluginIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aaac4179660de017d550f0ba9251fec72</anchor>
      <arglist>(Plugin &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2034fc6daaa11f70a2529d4be6ba4a46</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9d7ee859014bb11fca8180b338eedad5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a54e5117d12da38eb21e0c95086de66a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a8d3a814ace968b53fda9c16bb0dfd69a</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Exportable::ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a589336155f06a2173b0330741c6023d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1b93c983b291e50cf93c99774f7c5cd8</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aad6629a8b50a92f91ffe89e9d83ff6db</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a8d1fa8a0108d58b4029d54c6c398a404</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a5a750cd936ca7a442c40db4e301e79b2</anchor>
      <arglist>(int numInputs) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a67e380eccf38ef292cf4aad39e7549a4</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVST</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a0caaad7705b651e35ed438a5f81f0cc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVST3</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a37b070d8a80a7b9e3783685e990279a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAU</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af9e3da8359cb2c2e8d421af9f1169f98</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a84a87d27dca811634d579373e3252201</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getVendor</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4c0dea2f56d89506f863ac9332beeda9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a8569bb3c88e87d81552c726a8228e8fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a83c5c9a338e7599ee16779d3401444a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4ea93a0e6263132de9a3715bd28ef1cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a40b076ece4f111846f1bc44cca4e35dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1cd07e7ea3696fae4368520bd6a4a313</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMissing</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a347177e6aaa7bbcd436985be752ce03a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDisabled</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a7103757aef61328e9c320fae5b3406cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a3e1f50b12790c6a00b263f96cf8a019d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noTail</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a3081c6f691614eed6c218f4ca0023a18</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ac6dfec83866d3f411d3fbcfe8e0c203f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4decd1044e051f74953ee4aec35a8399</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioProcessor *</type>
      <name>getWrappedAudioProcessor</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>abbc3809e0ec69835217ab84d7ea09182</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFromParent</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4a75f808729c0bdb1d74df1294977a29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>acba1a23f121020ebdeeee632d766beca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a63acc37225cdc66400a88779aeef6b6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginUID</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a887ad9aad209dd1498712e23e203f621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDebugName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aab6977857a4cad56221edef7140803a0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputs</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a796e97a66f659328deb950b0be1e59c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputs</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1fc8e851fcd6742fb1b8c95fbb9c0d19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBusesLayout</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a29ea4304a6770d34b37ddfc73e6c6a92</anchor>
      <arglist>(juce::AudioProcessor::BusesLayout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBusLayout</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a21df6334e0296aad9e39a750b9d1b7dc</anchor>
      <arglist>(juce::AudioChannelSet, bool isInput, int busIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPrograms</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a451261d816487ee9ae62e448c5165620</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentProgram</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2d3cebeb256eebe3b8636dcb1c4736bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a213c3792370dfc47e196154763ca11ae</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNumberedProgramName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>afb49e748c8e47257ea253355f8d873dd</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentProgramName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae24631e20e9666671b8aa4cc0337fd73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a99775296583be5ffa30e2b7ba62d2130</anchor>
      <arglist>(int index, bool sendChangeMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a11d638c49bfc7cea34a635a9afaaaab1</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiProgram</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a362201f070470726e02725dbfee58b37</anchor>
      <arglist>(int programNum, int bank, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ab71e3cf73423af8b85df6c6c51b45d4a</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const VSTXML *</type>
      <name>getVSTXML</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a7618c66f2f78de6081921e252d216bc4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPluginInstance *</type>
      <name>getAudioPluginInstance</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9d7cfbd3aaf03c6b891c98b17f96feaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActiveNoteList</type>
      <name>getActiveNotes</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad1ff194e68924e9aef03b23285c3e9e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4eb7a384248eddb9a34e91cd810db3ff</anchor>
      <arglist>(Engine &amp;, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::PluginDescription</type>
      <name>desc</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>acb68fb8aa42eeba345455fade060ad0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad433c13d45cc5f94e1e0b29a7a10c32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a8b720715f054b0ac1be68ccc2da72373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>acaa052dac6c1bceec8eed12b58941d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a55116a134cb02446cf569063a9f438c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aae3a85b6284acadde9fe9bab25313697</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FadeInOutAudioNode</name>
    <filename>classtracktion__engine_1_1FadeInOutAudioNode.html</filename>
    <base>tracktion_engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutAudioNode</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a9b8842e384074b30669d8db3d4c6194f</anchor>
      <arglist>(AudioNode *input, EditTimeRange fadeIn, EditTimeRange fadeOut, AudioFadeCurve::Type fadeInType, AudioFadeCurve::Type fadeOutType, bool clearSamplesOutsideFade=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FadeInOutAudioNode</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a66c5bd81053a68b8005ce651918f2bb3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>aabcd0dd6aeb7f76cb5684bdd697b636f</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>af94e392dce6906daa15c977b34725ffc</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a878a99e3d4e7b697712275b686ac8c18</anchor>
      <arglist>(const AudioRenderContext &amp;, EditTimeRange editTime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioNode *</type>
      <name>createForEdit</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a305368e60419f9cf7ca871674a1ef9d8</anchor>
      <arglist>(Edit &amp;, AudioNode *input)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FadeInOutEffect</name>
    <filename>structtracktion__engine_1_1FadeInOutEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutEffect</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>adaf4ad048a2c1263c0e6791a6e258420</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeIn</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a067041007d95cedb95c85d706963f26f</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOut</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a371bf00d2c437174001788f532d906e1</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a0133fd63517b8c8e5cd474ca18d6923c</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>fadeIn</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>af93c0e8d068309fdcce351048140ad9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>fadeOut</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>aa0371d0e8f05384581b0ea3ec1e6c300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeInType</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>ab6a6e1804de4f8260fd88b91ee8624b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeOutType</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>aa0ae667ea0f20e1027f10128508bb862</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>ac7b783f83608be9c353f340036e83d15</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FadeInOutNode</name>
    <filename>classtracktion__engine_1_1FadeInOutNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutNode</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a46dacf7387f47268b3f4190b5234a1af</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; input, tracktion_graph::PlayHeadState &amp;, EditTimeRange fadeIn, EditTimeRange fadeOut, AudioFadeCurve::Type fadeInType, AudioFadeCurve::Type fadeOutType, bool clearSamplesOutsideFade)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a4f3ec1fd29ee8f1ed42fdf58c90054f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a77688723ba5d8a02650069f15dd2a3e1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a6a8a51d4e7796bc5a4894a32112e53e3</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>ac6821ec13d4d744f3b5eca4c7cce0733</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a46ef2a9a3c90c1366e007df875f28838</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FileDragList</name>
    <filename>structtracktion__engine_1_1FileDragList.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PreferredLayout</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ab75aa51166149f86fc6b8ddf588ae857</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>horizontal</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ab75aa51166149f86fc6b8ddf588ae857a6276258b51ea7efec4ebc3ef52386794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vertical</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ab75aa51166149f86fc6b8ddf588ae857a393a53cd4b2e2d65694046eae0ddbc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; FileDragList &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ac28ae8a5391d090c6089fc98d8e4ad19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>horizontal</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ab75aa51166149f86fc6b8ddf588ae857a6276258b51ea7efec4ebc3ef52386794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vertical</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>ab75aa51166149f86fc6b8ddf588ae857a393a53cd4b2e2d65694046eae0ddbc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FileDragList::Ptr</type>
      <name>getFromDrag</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>a152aa85e300b38388e94750558b593ee</anchor>
      <arglist>(const juce::DragAndDropTarget::SourceDetails &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>create</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>a88bbd5d00b0eb70a0cbd36a37ef69d7a</anchor>
      <arglist>(const juce::Array&lt; juce::File &gt; &amp;, PreferredLayout peferredLayout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>create</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>abe32e2681322b85e4c359b0422ada5fd</anchor>
      <arglist>(const juce::File &amp;file, PreferredLayout peferredLayout)</arglist>
    </member>
    <member kind="variable">
      <type>PreferredLayout</type>
      <name>preferredLayout</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>aa6489a4d331ac04515d0de3bd33c02f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; juce::File &gt;</type>
      <name>files</name>
      <anchorfile>structtracktion__engine_1_1FileDragList.html</anchorfile>
      <anchor>a6981c241861406b94afa22aebbb5f080</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FloatAudioFormat</name>
    <filename>classtracktion__engine_1_1FloatAudioFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>FloatAudioFormat</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a4d89904fd7bf420c55136fde8809273a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FloatAudioFormat</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a491cdc1aab97cbd291685da307581b61</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getPossibleSampleRates</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a2a1645a411a3288ed6e93f1c7951c3a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getPossibleBitDepths</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>af6585d17c110c156b0990d590beb5033</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDoStereo</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a1ed0aa3e3497e0f8eb507e125e220028</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDoMono</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a03f6fec84f226526a7be60725bdb51eb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canHandleFile</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a1068f5335dad83fcf290eb14f2d13a97</anchor>
      <arglist>(const juce::File &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormatReader *</type>
      <name>createReaderFor</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a1fea660abc86bb71389350a001068fde</anchor>
      <arglist>(juce::InputStream *, bool deleteStreamIfOpeningFails) override</arglist>
    </member>
    <member kind="function">
      <type>juce::MemoryMappedAudioFormatReader *</type>
      <name>createMemoryMappedReader</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>ace9c7da4bb123a44703ee0438e04ea93</anchor>
      <arglist>(const juce::File &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>classtracktion__engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a8ab071c7c706ae930e5ab62242d3486f</anchor>
      <arglist>(juce::OutputStream *, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadataValues, int qualityOptionIndex) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FolderTrack</name>
    <filename>classtracktion__engine_1_1FolderTrack.html</filename>
    <base>tracktion_engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; FolderTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a321692b2aebab9c1b61a3613d95d4b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FolderTrack</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a2b9278578b8e8ec889da790ceeea5a1e</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FolderTrack</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a90dd978bdc171f7f4402fd2717e930dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>af4dd8e116f9247c95a831b83c5a4ee39</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a85bb07c8eae5465ffef1c939bd835fb6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>afdcea06fcd5f2f58928ec5eb0a0cdf9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>add332a00d5de110c277a513b2bb7da7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a93db3b06b13d33660d8d9a927406270f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFolderTrackNumber</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>ab657edd09e271b12506f525f17fddc36</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubmixFolder</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a4153f1644851a5fc662cc9e94c2bce35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getOutput</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a2b28c05a78447a790afb6fb30832daad</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>adddcac80f7fe147e935ab241670cba9a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a363748d2b8e978efa7d83c6253dea216</anchor>
      <arglist>(FreezeType) const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVcaDb</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>aaa40192c2d81aa716439926fdf8e8a99</anchor>
      <arglist>(double tm)</arglist>
    </member>
    <member kind="function">
      <type>VCAPlugin *</type>
      <name>getVCAPlugin</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a3e8d4d0ce63b01bfe1c611fae232feb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin *</type>
      <name>getVolumePlugin</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a0746c5970d8178b1c1348386342f03a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateCollectionClips</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>ac0a6582b51f4bac9b6fefa32057a2e54</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a073066e3c527fdd8777bc5aaaba31739</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCollectionClips</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a3258bde7bb00293b1eaba50468e103cc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfCollectionClip</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a08a99787ebe83f9c6103605079036f01</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextCollectionClipAt</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a965a622b8475359658b40ca75c5bb800</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getNextCollectionClipAt</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a108c1c4ede8c4f928fb14008525e7dd4</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>ad1a5535ed3036110a9f265cf3cb2d2c0</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a8f9daeb8f848d9700a34abd4ddc930b4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a402102518e81e166cc1194bca08badf5</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>ab0942cae1b3d9c9ba3cd1023227d2aa2</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a8b72dea8f113792be361b5ac04781ab5</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a5edd2a233c90d962ca7e2da3ff97fc71</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a5bed25721ce7efbd00a3aef99116310b</anchor>
      <arglist>(bool includeMutingByDestination) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a8b6def5b24176186f9688d544bb9fd56</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a574d934a88a69fbd212a1db8f4247718</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>aad78d85c6ec4482bff357e66e6d4480c</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a5b6e7e6db13d83d26a69a290c304f230</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a1bc51ed5de86db468675406b9203071f</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirtyClips</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a95b1f0b02bafaacd8f049f2f22ab377d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a04e30bccb8e814a685eab90a91e2b7b3</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>willAcceptPlugin</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>af0805261953d64d37559e9ea49420102</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>classtracktion__engine_1_1FolderTrack.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::ForwardingNode</name>
    <filename>classtracktion__graph_1_1ForwardingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ForwardingNode</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>aa4ca2b59fbd361e94561109feb285cc1</anchor>
      <arglist>(tracktion_graph::Node *inputNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ForwardingNode</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>a184a9e3e381f49fab318e3dda7080c44</anchor>
      <arglist>(std::shared_ptr&lt; tracktion_graph::Node &gt; inputNode)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>abeea95567baa98f1ba9bc5f44166fa5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion_graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>adfd0549bd911f6408d94dc69b2a74136</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>a415be3da01cb156e87eb1e5bdf26dd21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1ForwardingNode.html</anchorfile>
      <anchor>a6b0199ee6bf36df2a0c8598d3c21132f</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FourOscPlugin</name>
    <filename>classtracktion__engine_1_1FourOscPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <base protection="private">tracktion_engine::LevelMeasurer::Client</base>
    <class kind="struct">tracktion_engine::FourOscPlugin::LFOParams</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::ModAssign</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::MODEnvParams</class>
    <class kind="struct">tracktion_engine::FourOscPlugin::OscParams</class>
    <member kind="enumeration">
      <type></type>
      <name>ModSource</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dabe259119c7a0d19ea9ac9bdc64d32566</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo1</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da64d913ad5cabd016761a17e4bdd85e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo2</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dab49914ca0e981c1eb34a70baf158a3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env1</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da710080afd6f58e1985bb1a2e63560650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env2</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dae0d06a637750dd15417ed62dd4e66885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpePressure</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dac39f09a664f73c505a60bf0a363f51be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpeTimbre</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da23c4bcd04f5a0673c38fdfcf81d01459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiNoteNum</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dade8a71c767f1ae90e35efa5ef22d0dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiVelocity</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da5093289c73f3f270a83df5e7e8dd26f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccBankSelect</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dacb054602bb0a439d6d5dfbfd0a8fbcc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccPolyMode</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da5464612cfe301c49cf3cd1004b10d92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numModSources</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9daafcb4c3f6c7227a0a28e92fb7d50724c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dabe259119c7a0d19ea9ac9bdc64d32566</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo1</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da64d913ad5cabd016761a17e4bdd85e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo2</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dab49914ca0e981c1eb34a70baf158a3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env1</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da710080afd6f58e1985bb1a2e63560650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env2</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dae0d06a637750dd15417ed62dd4e66885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpePressure</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dac39f09a664f73c505a60bf0a363f51be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpeTimbre</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da23c4bcd04f5a0673c38fdfcf81d01459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiNoteNum</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dade8a71c767f1ae90e35efa5ef22d0dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiVelocity</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da5093289c73f3f270a83df5e7e8dd26f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccBankSelect</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9dacb054602bb0a439d6d5dfbfd0a8fbcc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccPolyMode</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9da5464612cfe301c49cf3cd1004b10d92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numModSources</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd9fd2c168fd8b282fff0fdffaa2de9daafcb4c3f6c7227a0a28e92fb7d50724c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FourOscPlugin</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af3f1d6aa35114d94cc230d9cff00aae4</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FourOscPlugin</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a292fb8e47e7d28245d124401380a7430</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMono</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a103d4d75b8bef8df5ec386c5bfc60d93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegato</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad90f24ea8cf43f454242ca882c6c7239</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPoly</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab07adeb873bb6fd0c41565629054ccbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a31ee5b5ab5e895bee245324662c8cb4a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af9ec187b148bec0cf5f994ed366cea72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a89d84bb28f338426637c3dfb584d46dc</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a687b299fdfbbb8aea6ec7a9f445de8a7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4d17c2f9850695de370bf3f9824d1e79</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9ddd344782a3eb385498cac558ecf292</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad277208ef810ab0d6a0fc034f507d895</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6992e024dc374dc8c5ff815d03f59708</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac9c72b1760ec9e9681a7d02fe1684616</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a580e4953ee4bcd9601caf8f5f83b1ddd</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acf15b6c42af922546cf5a096fedfdcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aeb56118c09a0aa3f228fe23b802e8a04</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a83489964d0e3eb390abe4c059bede483</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a838bc91e79f34ed9f360b0dee8ee0de4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aeb29a73dcbf515c8a70cc6f8345aaf88</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aadff98f8a7302d6aea1bb1546a27fa54</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTempo</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab4fe2dace14ab2ce022c3820e4dbc273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>modulationSourceToName</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a925557b59c1e0c98978dfbbba7f45728</anchor>
      <arglist>(ModSource src)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>modulationSourceToID</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afb3fdfc01095095377fe067ad6b2a33a</anchor>
      <arglist>(ModSource src)</arglist>
    </member>
    <member kind="function">
      <type>ModSource</type>
      <name>idToModulationSource</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3b23426affa5c89d65ea24d571daab89</anchor>
      <arglist>(juce::String idStr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModulated</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aebe2bd9856da0712b15654f2d239b5a2</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; float &gt;</type>
      <name>getLiveModulationPositions</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a970fde3da3b168dfa45b9235832bfd4b</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModSource &gt;</type>
      <name>getModulationSources</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4601da4798975cc211cce87822015ca3</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getModulationDepth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a60c2a49f0953794e22f3878a3242e52c</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModulationDepth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a34770ed5ba4f0e0e9bf1038696d08f5a</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param, float depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearModulation</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af173ae47b2cb77351d1c0d9cb1475136</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLevel</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a8000d85e37e01c6ace5c29318655167a</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4cdd6b88d5a7be7cb2f5370a9745896f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; OscParams &gt;</type>
      <name>oscParams</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a1b0d4d260d15a0472cc5a1aa2a05eae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; LFOParams &gt;</type>
      <name>lfoParams</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7905a4a288e0a8c5cdd65b0ce33dc7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; MODEnvParams &gt;</type>
      <name>modEnvParams</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a5d8d4e8aef431fe27f4f90246bf36538</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampAttackValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a045f897ce0122926e21cfd1697efafef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampDecayValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a663cb7bbb44884cdba608cfc21f97a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampSustainValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad69a0543a9d87a4184740828a9d46440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampReleaseValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aaa0ef96f013f5f5e7c339eb244bf3a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampVelocityValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a43ce4fb12d1c45517be5f99ae2ed7e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterAttackValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a1417d237fb6363d48b99c13a4bb5723a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterDecayValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae1428dd919ae65e9f72bcd9b1f25e2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterSustainValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a835707eb55f7b9236b0c907d3988a662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterReleaseValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad558f83f0a6432559488077c7e45f4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterFreqValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7798011f4db6fa7ae4e1177cf1ea2dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterResonanceValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aafd8adb387582935497d308a196fc9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterAmountValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aebfecf0a74c889b713b1f9a1b95661e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterKeyValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7b2c5999a9c94ab01bdadd2023642f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterVelocityValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a67c4f09ff85f1e1e1007e6e234e7f2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>filterTypeValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7ac4868cc0ea35ce6fbaa73005c5f3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>filterSlopeValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9ec8c9df2ade4b18b16f867edaa5d8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>ampAnalogValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a49030a826dbccc6c522972236d50baa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampAttack</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a355269086a2b615e217dc22894120393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampDecay</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>adb0f3976e00b943c1768073162cb250b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampSustain</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae7d9edc9db54dc9eb19325c22b3334d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampRelease</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af29d12d2c25fa3fa6c45c56b97eb9452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampVelocity</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab1bb313716d9e1422916f3e1f77fea0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterAttack</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af0ea487b22c408a1dbd9b1254c940067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterDecay</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a254769d7e91139c3a368f99bc7938164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterSustain</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af44bdd04e801062fd05c4f2591979e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterRelease</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afc018cf25c33776e3e99488b21bc7c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterFreq</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a09886a6d941290563c8a3417b0c6e0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterResonance</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab3d8a72820be56bb219d8dc0831128eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterAmount</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a457ba69ec64a3480da38379654f6a572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterKey</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa845452bb2a8033fc40715d71ab61587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterVelocity</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a80619f7cb7a4f35bb18052d55b98a5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>distortionOnValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a85ab0d70a86caee89a6fcef180ed59cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>reverbOnValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa9591be08452a6d8803d7523471c77b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>delayOnValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a8ddb5585856dc15d061d734084e9f4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>chorusOnValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a019ddbccb424e950ac4ae2abc4c9623e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>distortionValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2056d23f07ce6191a02ebb2f870a2138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>distortion</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9a050493e6f18e9c2449bd8662bf12b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbSizeValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acb5645aa3b82ba6839f64adb939b4cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbDampingValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad08ef0ff4bad0dc3a5a2fb0f7e608850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbWidthValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a844dea865618189ab5a29b1b167ac374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbMixValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a00afbde9d41c7a31326188ba26ed3866</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbSize</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a660e76e0c1b321d283e2478aab441887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbDamping</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aaaa9388739a0b7799fc04593e84ce2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbWidth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2edac89aa17fa9381584046683ba3831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbMix</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6bfdec3bece89d2b6cf5cfac95030730</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa7106b40057c34bc68e06ad2e5ea7111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayFeedbackValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab732ebb1f248b7f6d7d0cf98b8211998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayCrossfeedValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6926b58bfafbae94e93bbef11a90e156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayMixValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a00bb08836ad86dc8c38161c1733dc136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayFeedback</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a11f89a5c7383c100514736c9b0e3a9e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayCrossfeed</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac16b57a39336367e9de302dfba4618e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayMix</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a734a02bb36c928492de69cbcdf6ef710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusSpeedValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a73393b77aac285e5dd0fcea6367b17a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusDepthValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7ee455cd0b58fc2c6e6fb35c37879645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusWidthValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab0ac54a1d91b1f233a7b74b82a4f35c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusMixValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a635f8a76469be5cf3d444ccb202c66f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusSpeed</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa9380ad4ac6b443a069d934dd04a0766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusDepth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7690e3ac3a246a420b3dfd27d8e05628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusWidth</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab4c85b52e5fb1c47d04b79633056463e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusMix</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acd0cdb5b14edaa6edf7d469c23116a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voiceModeValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afdee6311b11018c62fbc76d57915f289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voicesValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae799f7cf3822b3868dfe755225d224c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>legatoValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aaeb787cbd5ec132bf09a4c959bb8a3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>masterLevelValue</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ace72642601f52195ec40050f3f5ac9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>legato</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abd38bc099ea3b6fcebaa712acaa16191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>masterLevel</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a18cd732c19b90f1c6dd9d61e0aee266a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; AutomatableParameter *, ModAssign &gt;</type>
      <name>modMatrix</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a72106e7bc3bcd7aa5639ed8edbd33340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>controllerValues</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a0fbd2c2db1c4c76dbd0ce9b1913438f5</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2af4f7815bfb825197476a6a91da3521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::FreezePointPlugin</name>
    <filename>classtracktion__engine_1_1FreezePointPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedPluginDisabler</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackFreezer</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackSoloIsolator</class>
    <class kind="struct">tracktion_engine::FreezePointPlugin::ScopedTrackUnsoloer</class>
    <member kind="enumeration">
      <type></type>
      <name>Position</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beforeAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbeae4cb9d25482721952a4b476346762d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>preFader</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbea1402fdd2982bb35ad8bec36e4a874afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>postFader</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbeade20739f37c0a5982297cf3668b93d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beforeAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbeae4cb9d25482721952a4b476346762d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>preFader</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbea1402fdd2982bb35ad8bec36e4a874afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>postFader</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a32460f5e433d63b58b7bb49793c6cbbeade20739f37c0a5982297cf3668b93d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FreezePointPlugin</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ac42daa43b117dec911a24d93d7c66a43</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FreezePointPlugin</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a01344a9c44570e605514004050431f86</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a6ddbee15c3606320a3ac0458339ecaf5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a27f6b1cbc2ce3d04266a10b7e2d4d901</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>af3fc77747e2cbd390035da3985057db0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a30febc9bf0ee69d951d0bfbfd6631025</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a17b9240d4e51664fc89be296cf24f3e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ab83eb8f80caee37471f83510c77b8121</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a160fef003e636a8250d40ca3a9207915</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a36544ffc6349d97e9be3ce831f496674</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToMaster</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a83cf7d8dda921b6b63278a3a2d6894b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a3c7917db7527106f7a5fc0d5af80e6c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>afcbd0c5044acf5c5da35dc775b683572</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>afb906a3041ccb47330cb5f972aa4fa28</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a11b8c51b29445e00a6aa59ed71ee92c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a12c763160b184fad1a8344c29f6429c2</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>abe19cc0c963ae35620f2f2727baa9671</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackFrozen</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a6fcb780035e1dfde5facc461ad1175c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freezeTrack</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a0a2a656c5e8bb2b41f2eb9a46a039db8</anchor>
      <arglist>(bool shouldBeFrozen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; ScopedTrackFreezer &gt;</type>
      <name>createTrackFreezer</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a51a92b36ce23e1aa57fe85e9b86b2999</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a6cb49d1dc76ce46251c66fcb3304f0ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a7c7de9ae2d5239046c0f25a7d23af201</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ad7ab7e926c05291bf758f3df05ede12a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioTrack::FreezePointRemovalInhibitor</name>
    <filename>structtracktion__engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>FreezePointRemovalInhibitor</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>abb22dad00ace5e15ca54259927e39c79</anchor>
      <arglist>(AudioTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FreezePointRemovalInhibitor</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>aecb3cb36706c1d63fa519ff582a2b5d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioTrack &amp;</type>
      <name>track</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>a0f6ded546a7e9d4daf65a8c96bd88be8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::FunctionNode</name>
    <filename>classtracktion__graph_1_1FunctionNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>FunctionNode</name>
      <anchorfile>classtracktion__graph_1_1FunctionNode.html</anchorfile>
      <anchor>a426d197e30dba4004151c077b5049422</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, std::function&lt; float(float)&gt; fn)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1FunctionNode.html</anchorfile>
      <anchor>ae7b3e59b4788163e5b4e29e2203b3796</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1FunctionNode.html</anchorfile>
      <anchor>aa2eb73f16a3fcaab2e90218eebb6f75f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1FunctionNode.html</anchorfile>
      <anchor>a8067076afd0aab5eb86971080ae9ff6d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1FunctionNode.html</anchorfile>
      <anchor>a34714953d6f270d23874d0ae872061b5</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::GainNode</name>
    <filename>classtracktion__graph_1_1GainNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>GainNode</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>a9850dae540116949c39c4e2ec78c04bf</anchor>
      <arglist>(Node *inputNode, std::function&lt; float()&gt; gainFunc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GainNode</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>a040f9c618fb8f3b80e0ae6562f512ff7</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, std::function&lt; float()&gt; gainFunc)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>a41ea1d00d82d96128a90781828004bdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>aa0e7e5273ec6180a5b8d0c7b2eecd50b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>ad664e4562ace0fa429a8cf6a2e643195</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1GainNode.html</anchorfile>
      <anchor>a376fe28eb68b7a043aecf32ec2568570</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioProxyGenerator::GeneratorJob</name>
    <filename>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</filename>
    <base>tracktion_engine::ThreadPoolJobWithProgress</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; GeneratorJob &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a33854c90110bbc28ecaeded3321178c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeneratorJob</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a3a7180a6cf75a998793f8f9d8b0bb33b</anchor>
      <arglist>(const AudioFile &amp;proxy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GeneratorJob</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>ad02d3d65e14e5f18a22d38db577efba9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>render</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a33bf5dbe8208736e034207c568eae8cc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a71013c6a83ca84b660136ac3f07dc7d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ThreadPoolJob::JobStatus</type>
      <name>runJob</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a37501b1061d1faf1d4853d377b6d5a69</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>proxy</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a41a59caf2106a4d11c6c9b85608948cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>structtracktion__engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>ad69ce4edd39844cdca58b042652b5aa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::GlobalMacros</name>
    <filename>structtracktion__engine_1_1Edit_1_1GlobalMacros.html</filename>
    <base>tracktion_engine::MacroParameterElement</base>
    <member kind="function">
      <type></type>
      <name>GlobalMacros</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1GlobalMacros.html</anchorfile>
      <anchor>a000a27c3bd998b0546a39a2c930cbf1f</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1GlobalMacros.html</anchorfile>
      <anchor>a0557bc8c569b5f2b00200b6cc36a029d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::GrooveTemplate</name>
    <filename>classtracktion__engine_1_1GrooveTemplate.html</filename>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a552c68c70a15e74b709bd1657e12642f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a569842fbe90eff73213784c6995018ee</anchor>
      <arglist>(const juce::XmlElement *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a015434fc29131c944d275bdf1cb566cc</anchor>
      <arglist>(const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a970ab9b9ddc8c23939b1e738698e0739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a3d884e439623278e343afd44e88b78d4</anchor>
      <arglist>(const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>af0a6c2f2afce9ffe06faf7eff13dee92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterized</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>ae929634ef19441b13ac5cbb9993e7767</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterized</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a168b516413b05025ccf51f5f96eb9bfb</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>beatsTimeToGroovyTime</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a4387a1408ea2fa9d7fdf3cae0aac5c24</anchor>
      <arglist>(double beatsTime, float strength) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>editTimeToGroovyTime</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aca9a8ceecfe5b9e85c57c4b1ae0f0e62</anchor>
      <arglist>(double editTime, float strength, Edit &amp;edit) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a681597909a06fa9ed9533f27ac3b0434</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a6837406ad67a8dd462981178fc88c787</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNotes</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a3fc567e215fb753a9dcb7d5ff4862a9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfNotes</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a3ab7b681d5d57c27e529863ff4b579ae</anchor>
      <arglist>(int notes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNotesPerBeat</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a57d940e982a04f679724b2912e7c8374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNotesPerBeat</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a0db4e9467994708f4f3f6c12543b9041</anchor>
      <arglist>(int notes)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLatenessProportion</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a470fbcf90a96730ba8338a2d2264983b</anchor>
      <arglist>(int noteNumber, float strength) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatenessProportion</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>abd419099f5cd9e3d0b9a73a09eba1fb7</anchor>
      <arglist>(int noteNumber, float p, float strength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLatenesses</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aa9da63ab2c2d3c7b42539ec89a49752a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>ae69f80de8d0ea2c16aa37f41eda33472</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>grooveXmlTag</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a6d453a092c3aff346fb47756df3023e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::GrooveTemplateManager</name>
    <filename>classtracktion__engine_1_1GrooveTemplateManager.html</filename>
    <member kind="function">
      <type></type>
      <name>GrooveTemplateManager</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a34c452393641e9893a20e74151519807</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useParameterizedGrooves</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a7f3d54e6bf1e49ca0e49f731c1b49e7e</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTemplates</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a42e3abd9654b584d6f3b6da5c335efee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTemplateName</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>ac52f6e0b29ff63e42116557fe746be3e</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTemplateNames</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>aa0751a0fc41ec49324f127c3511d3398</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate *</type>
      <name>getTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a8541a714b605edb90170ef4a53714fbc</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate *</type>
      <name>getTemplateByName</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>aecded4ac3e0f1736910ddf4f31310722</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>addcfd457d0edcbf5b6e75a33370bf16a</anchor>
      <arglist>(int index, const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTemplate</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>abadd608ff84a7f320384841da127882c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classtracktion__engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a0ca6ffdbe544c3d37d29657cd911fa42</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Group</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Group.html</filename>
    <base>tracktion_engine::VSTXML::Base</base>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Group.html</anchorfile>
      <anchor>a1bf0f5b2340f0a88047864f215d884d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Base &gt;</type>
      <name>paramTree</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Group.html</anchorfile>
      <anchor>a7db6e081f9515cb7c28bc237ba96d613</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::HostedAudioDeviceInterface</name>
    <filename>classtracktion__engine_1_1HostedAudioDeviceInterface.html</filename>
    <class kind="struct">tracktion_engine::HostedAudioDeviceInterface::Parameters</class>
    <member kind="function">
      <type></type>
      <name>HostedAudioDeviceInterface</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a3b4d03803b0c7a3da4a5bc30cb68773c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a200aee2831b261d777d5ad5f02ff873f</anchor>
      <arglist>(const Parameters &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a42e334ddfbc1d13412f61ee9b99c45c2</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a05c815ceaf1d24357e09a11d845f8138</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, juce::MidiBuffer &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isHostedMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a53e025a8fa913125e31fe09f3301157e</anchor>
      <arglist>(const MidiInputDevice &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedAudioDevice</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>ab864dd4a5140fc0a9fe4a2136b735d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedAudioDeviceType</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>aa0a2b7cc98433cd45dfdd3590326b644</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a1d39141227954cd002351f7274edc856</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedMidiOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a849f64ff2779ed80057e468d55c1a4f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::HostedMidiInputDeviceNode</name>
    <filename>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::InputDeviceInstance::Consumer</base>
    <member kind="function">
      <type></type>
      <name>HostedMidiInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ad625a746f8104b620053fb9f71051efb</anchor>
      <arglist>(InputDeviceInstance &amp;, MidiInputDevice &amp;, MidiMessageArray::MPESourceID, tracktion_graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HostedMidiInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ad426dfa6726b8e546b5a938ab2010d15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a7aac01aeda96c9556d70b69b0f050767</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a1f918564d83187a4ed585a4f10f9b048</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a4a6b4d0e00a13d4c1fa9bbbfcb62cbfb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a1adcec38cb4b15901a5d301b1a6ddcb2</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>abb1de85ebaa7d64f471f030a9b840c99</anchor>
      <arglist>(const juce::MidiMessage &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::IconProG2</name>
    <filename>classtracktion__engine_1_1IconProG2.html</filename>
    <base>tracktion_engine::MackieMCU</base>
    <member kind="function">
      <type></type>
      <name>IconProG2</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a05d342b2f26c01edbcd347021789d5e1</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconProG2</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>ae73997e2437b6952a6ab30e5b3cecb24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessageInt</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a57749a815d7d5ec51fd554c6da78fb7e</anchor>
      <arglist>(int deviceIdx, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a4c6dd6ead34752e09b52b51dd61df94c</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a376d92d4385d94c7e2362b5ad8bba539</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>ad672c31147801e055e9f5efb44aad258</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>acb3f63c86ca106ff09c438be053c5b65</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a212c3c3789b08f3721fae895f6ad1696</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>aca686627d5c470b2f1a8d4b3c8e235fd</anchor>
      <arglist>(bool isScroll) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>abaa4b19ddb32ebb478298dc7177d0010</anchor>
      <arglist>(bool undo, bool redo) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a9cdc59c638028feb1368b7a02e919861</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>aa251d1941f937efcff877fa90db7e506</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAssignmentMode</name>
      <anchorfile>classtracktion__engine_1_1IconProG2.html</anchorfile>
      <anchor>a168fcca426ef0bb1b34546c1458d444f</anchor>
      <arglist>(AssignmentMode newMode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ImpulseResponsePlugin</name>
    <filename>classtracktion__engine_1_1ImpulseResponsePlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ImpulseResponsePlugin</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a29015fb39c75b6367779a48ff6b67ae1</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImpulseResponsePlugin</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>af96db9e44cbfbd210f55248bdf1fa5fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>acd71c6e27fa1e93ffeda95029e1cefe3</anchor>
      <arglist>(const void *sourceData, size_t sourceDataSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a48cd82da523002d4761d092a3540b8df</anchor>
      <arglist>(const juce::File &amp;fileImpulseResponse)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ac3269ccc9bd9bd3f2bf8c05cc9e9c943</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;&amp;bufferImpulseResponse, double sampleRateToStore, int bitDepthToStore)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a73edd3aa0b73c3098a517544b37a1c1e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ab1a918352a695db79606294723c89672</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a0257f60d297f308e28c2025f2f73284a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a11773b0365c1075422c6f6be495c3f84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a8d6bccd33bf039a1b83d08b167a92e41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a5c5c12e0339cd1ea0bf5e350af34649f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a1afaac11a742eeea32fce4ec876e647b</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>af5beb3999b17df831e8fbd96b3e060a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a676935593b0a82a2006d64f02efd389a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ad899799fb6c3b3c01f7ba147f2f42cf5</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a5bedecadc6000fbd44a6bc6f890cd0eb</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a2a2e5a4607f73f0507506d417bd8baf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ad4c19ec5c837e30c736b717baef7672b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>normalise</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a2f12087d874479cb950a9677368772fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>trimSilence</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a58c8feb4d1d18eb4ba0d281e823083f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassCutoffParam</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>afc5f071d40648b6b112dd078d2a3cfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassCutoffParam</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a4e18496769b4d3051349047ec5f0d800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gainParam</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a516949c7b5255cfa0d2a0d74a744d679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>mixParam</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>aee6a1b53d206b35a1dabc2434c999ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterQParam</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a94755018922148cbb62ffbe1143106bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a96dd5db4cca86e81d80ebaf6793a3df5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TracktionArchiveFile::IndexEntry</name>
    <filename>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>IndexEntry</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a9142e770291eb1de0e4c8f7bc877d0eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexEntry</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a3442ff85482c0a135dec2333d981d975</anchor>
      <arglist>(juce::InputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IndexEntry</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a71db821a1bc2ec377043b032e17b72bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>aa587618ff9f4c3e968928c0ac722061a</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>originalName</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a5af9c7661f02adade6f32d572f1be9f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>storedName</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a3aa2a9343b42f344aa6b7628630d539d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>offset</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>ad3d9fc0366b1408097af25fa7a68f17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>length</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a780116bfb77063a57cde6e0a5181d528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>extraNames</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a8b4ecbed4f7e0e0888e051b0916336db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>extraValues</name>
      <anchorfile>structtracktion__engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>afbb3f260e95706152c423ae8b16933bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InputDevice</name>
    <filename>classtracktion__engine_1_1InputDevice.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a45cada7c2dce2d78091c2cf1b2ee0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackWaveDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a2ee55baf53d3209b2709923f09d6a956</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>physicalMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a0817577dbf8a5500fa0282bd004080f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>virtualMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0add434a7440b6fd062be6894b7103e92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a65592ad4715d5a295510679ae338df73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a45cada7c2dce2d78091c2cf1b2ee0005</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackWaveDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a2ee55baf53d3209b2709923f09d6a956</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>physicalMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a0817577dbf8a5500fa0282bd004080f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>virtualMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0add434a7440b6fd062be6894b7103e92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a315fe0cecf76906c7c0c6f32a3a435f0a65592ad4715d5a295510679ae338df73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>afe7de7efff6eaf078bf46bfcc2203813</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;type, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a4ead911b0a636402296da0181a2f4ec3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>aae7c9f5c9743210bf753bf8fdffe5f82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>af0d4d1548e6fa2a1834ee72fb1b992b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a86ddd3eebccdbd18310d30b53f106937</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>adb60b17490587e3b28091e2c2ddd8473</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAlias</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a75bd91c4ceb2ffbe79897ea74ec300fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlias</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>ad5be2963a505b8634c6737bf427c368b</anchor>
      <arglist>(const juce::String &amp;newAlias)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDefaultAlias</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a132ee34b264ed93a577a7ec66bd6e9b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAvailableToEdit</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>ad23308c90dd4af31d298a9031c6d8925</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>aa378613fa68bfa043270a5de74bdb982</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a637e8fdadfea5e6dc3f3bb4513ffa54f</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a9ab56f38f154d3065c9299902eb68d0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEndToEndEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a99d52a3414f6b4aee903de0944a21711</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flipEndToEnd</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>adfda0eb24bd40364ba712d87a99c4a73</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a0b2c34109794fb4dc3653cb2ead55c42</anchor>
      <arglist>(EditPlaybackContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a9631360a84f57c10e012d0a682f22932</anchor>
      <arglist>(double time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a8674a66820075d48a07b812f0d5d602b</anchor>
      <arglist>(double length)=0</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>abd9641a366d2b1c7549db806ba0aef0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getGlobalPropertyName</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>aa86508a8d0c3e2ddafa6a0acbd9b92d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRetrospectiveLock</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a3e9814b25c78bb2549a2168a7465f30c</anchor>
      <arglist>(Engine &amp;engine, const juce::Array&lt; InputDeviceInstance * &gt; &amp;devices, bool lock)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a3ac64d15d1263e5e5334a8394c5ce1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>levelMeasurer</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a542892b58cfb223f580d0c5ce65ca653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>enabled</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a8e82f386536ed35b280dcd005f3a62de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>endToEndEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>ab909d1e633217961a2d6c62b37b9096c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>retrospectiveRecordLock</name>
      <anchorfile>classtracktion__engine_1_1InputDevice.html</anchorfile>
      <anchor>a3814937beab2ae16d214a2e850a535d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::InputDeviceDestination</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>InputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>aad4f0fc2524aba532ec4df6b7cc8e2f7</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>a73e86cb2b0029c220b70f0f750d6fb0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>a881596083ff4447dea588bb78f157d1f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>InputDeviceInstance &amp;</type>
      <name>input</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>a3c111797829c20a024ca580174b464a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>a1ff69a4e48c2853450ca29fcff3ebcfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>recordEnabled</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>ab54d396778aaae8031a8f8f5562b66fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>targetTrack</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>a93ab14cd7541bf6ba9c0e87c8a10da19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>targetIndex</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestination.html</anchorfile>
      <anchor>ab5eb4ed8124888b86bebcf216e99a91f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::InputDeviceDestinationList</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</filename>
    <base>ValueTreeObjectList&lt; InputDeviceDestination &gt;</base>
    <member kind="function">
      <type></type>
      <name>InputDeviceDestinationList</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>af0debb33d6ec33cb5ff5d22362202140</anchor>
      <arglist>(InputDeviceInstance &amp;i, const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDeviceDestinationList</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a9bb22445179b579295ca7685abdf37db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a9344710589efd447f762a84a4e9eb816</anchor>
      <arglist>(const juce::ValueTree &amp;v) const override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a504e520b25c3cb1d95af915671f35e64</anchor>
      <arglist>(const juce::ValueTree &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>afdf4be2ec02acc2c987a9b6f100eb86f</anchor>
      <arglist>(InputDeviceDestination *c) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a71dc5edf29d9f8c543a12ee78b2a1c1b</anchor>
      <arglist>(InputDeviceDestination *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a263306fbbc99e9e00bf4e693d0cf38b1</anchor>
      <arglist>(InputDeviceDestination *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a5279147e793ae3b7438e431798ff5b5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>InputDeviceInstance &amp;</type>
      <name>input</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1InputDeviceDestinationList.html</anchorfile>
      <anchor>a099dfc430da059baed63e14eadc8cee0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InputDeviceInstance</name>
    <filename>classtracktion__engine_1_1InputDeviceInstance.html</filename>
    <class kind="struct">tracktion_engine::InputDeviceInstance::Consumer</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::InputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::InputDeviceDestinationList</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::MidiInputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::VirtualMidiInputDeviceDestination</class>
    <class kind="struct">tracktion_engine::InputDeviceInstance::WaveInputDeviceDestination</class>
    <member kind="function">
      <type></type>
      <name>InputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>afe23693430bd3299e577993af7aa808b</anchor>
      <arglist>(InputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>af80f6c266324e82df72757062688b8ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDevice &amp;</type>
      <name>getInputDevice</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa3966805c542f970087b77e17a4fe4be</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getTargetTracks</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a817e30c367e30b13aa9dfbb0e5c1d7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getTargetIndexes</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aecd2d5e85c3303e688ffe6f6e7fe6a36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a128871fb6bc75e17f42b964897e48d8c</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a33d51d51d40d90c6ebabfa171cef1e55</anchor>
      <arglist>(const Track &amp;, int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a662d60b5e6f7bab130198a4a7bbb8ca7</anchor>
      <arglist>(AudioTrack &amp;, int index, bool moveToTrack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ae4cec0f664965b953c4df636c10e170b</anchor>
      <arglist>(AudioTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>abc2a1a410e686e16943abd91fdabde5e</anchor>
      <arglist>(AudioTrack &amp;, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTargetTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a2fabcfa81c83d45e7bc24dd4e2eab9d7</anchor>
      <arglist>(EditItemID, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearFromTracks</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa478613c2c1a11081cd7246831f61fc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToTrack</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa576a7e74b189c69f38b1a19f8fdeb4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isLivePlayEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a7b924abd1985e6284c93f8d33e2a318b</anchor>
      <arglist>(const Track &amp;t) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRecordingActive</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>adb7a2d2cbf8208364daeafac07c0dd79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRecordingActive</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a4da61233e3d42d6b61be94987a3330b2</anchor>
      <arglist>(const Track &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecordingEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa62b3a2c7d7f5afb91131b87cc06ab06</anchor>
      <arglist>(const Track &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordingEnabled</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ad1aa458f919765eaf46529cd0ea161b2</anchor>
      <arglist>(const Track &amp;, bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldTrackContentsBeMuted</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ad7fafa363cbd74e5b81829187520faa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>prepareToRecord</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a38f477abcd3c0e65a208ca8d92e45a3d</anchor>
      <arglist>(double start, double punchIn, double sampleRate, int blockSizeSamples, bool isLivePunch)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>startRecording</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ab31b3e0dbfa136eafaad7984c109fd1c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRecording</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ac78b5f72d3260adcb9fe698a4aba01ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>abd7a1f2bfefbf87ecec496a60732bab1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>recordWasCancelled</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ad1c7df81d7e4b8a62e849df9100bbff0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getRecordingFile</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a419af8e1f4efcf08ee9059e45c668474</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareAndPunchRecord</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a8a7598926d0af9e62ca5d72f30b92444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPunchInTime</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>abf54e36ede3f493819eaa238715e266c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Clip::Array</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa552075ed148b93cf7b061a4ae869cc1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Clip::Array</type>
      <name>applyLastRecordingToEdit</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aec6c0bc06596c277ca40debea27bf490</anchor>
      <arglist>(EditTimeRange recordedRange, bool isLooping, EditTimeRange loopRange, bool discardRecordings, SelectionManager *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; Clip * &gt;</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a2fab8850c9ed6d75431aedc6e752abe0</anchor>
      <arglist>(SelectionManager *)=0</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *</type>
      <name>getDestination</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ab65719b1399751be82a7119d2448b210</anchor>
      <arglist>(const Track &amp;track, int index)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addConsumer</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aed097af358d727551b91da56fc4d6a01</anchor>
      <arglist>(Consumer *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeConsumer</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a8f1eb3da3409da58faf3fa97e79e9f72</anchor>
      <arglist>(Consumer *)=0</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>adf2350840a83595370764158d19bf9ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InputDevice &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a6924822b0014cbdaeb5c5ec31bf86537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>context</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>adf55b468b2b77ec44b1fced85944db9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a0c81bdd11313e81991f41611171aedf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InputDeviceDestinationList</type>
      <name>destTracks</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a42be8c5d35edef87c59887cc32b86b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a9f5a2b3472fd701d09d47b53ec7be5c0</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a167c371d6c58fb4dca8c482cde512c30</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a63da8b7a6e5fdc3d8ae588794ed7e482</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a28d3f77881130e7dd9e123af44bc5773</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>af717d9ea5c4c49888fcbf9fe89359677</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>activeTracks</name>
      <anchorfile>classtracktion__engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ad002a2b2a1cb193a30313cd1ff9aa731</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputProvider</name>
    <filename>structtracktion__engine_1_1InputProvider.html</filename>
    <member kind="function">
      <type></type>
      <name>InputProvider</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>ac84769dd5f62b3a4ff11425eae9cbae4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputProvider</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>a4179a736d19e050b6fc7c278e0f7a68e</anchor>
      <arglist>(choc::buffer::ChannelCount numChannelsToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputs</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>a66edacd30a43ebf9d4fe044f6ada40c9</anchor>
      <arglist>(tracktion_graph::Node::AudioAndMidiBuffer newBuffers)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::Node::AudioAndMidiBuffer</type>
      <name>getInputs</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>ac22f1a6297af1b11325d398694957ec5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContext</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>acf511b8c8698fc306b0908b958e3511d</anchor>
      <arglist>(tracktion_engine::PluginRenderContext *pc)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::PluginRenderContext &amp;</type>
      <name>getContext</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>aaab327c91c41b88de4ca6707efd4416c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelCount</type>
      <name>numChannels</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>aaa4deffe249630f4e3f709f4ff6a112d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>audio</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>ad74c3d6dd4a6d8f2302ce10f9b09a0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::MidiMessageArray</type>
      <name>midi</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>ab7d105c488638f007fde634d0a6527d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::PluginRenderContext *</type>
      <name>context</name>
      <anchorfile>structtracktion__engine_1_1InputProvider.html</anchorfile>
      <anchor>a01a11039e290beb41f3934a7f6723900</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InsertPlugin</name>
    <filename>classtracktion__engine_1_1InsertPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152abce140a7ac0a559679fdfae1c704db62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>audioDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152aaecc7f00f777f87ae4cb339ac7a4bc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152afa0d888ac6f1afbec6f0aca7457a04d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152abce140a7ac0a559679fdfae1c704db62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>audioDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152aaecc7f00f777f87ae4cb339ac7a4bc00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4d622d8b795bfd9789f23c9d80d0e152afa0d888ac6f1afbec6f0aca7457a04d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InsertPlugin</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>addb5e3b80d5d3d223c7b69ff29b2b44c</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InsertPlugin</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ade83116888f1cff386c7e0cb50a087ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a5bfcc8889a53222411844a55c8feea0c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a5f15dbd2cd8d8aaadfb61f9c067dd947</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad90b77b0617ff2cf96b652d0d3b77dc3</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ab2726e2d2d0acad1c85fdabeabcc6897</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>afa7a5aa0f83983c040756ddebbacd3d2</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad5174a12f5d148136931f45065abdd9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>aefffe2cc42e25fd4a8070bb046cc6111</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a164cfe13427ed0d4794b0024031b70c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a91c8e4ea1e96560924eaf09a41754f7c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a227b6c48dbb41550caf6104119b78ab3</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ab318406a085d66e96a081a3f866f1e56</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>abd42eb10db51d55f23b646f0f2fd55ea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>af61ff32f21115e3fccc48615a22ab920</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a3b4bfce71e08602ec4464262327bb060</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a019c471255685e15fd8764feed45b352</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getSendDeviceType</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a9722d057c0349e573ef8fb313c1ab7bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getReturnDeviceType</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>acf291c8625c5ddaee91f23a66266e539</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceTypes</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a34d66696b84bc32fdbf4dec1a7b7d7b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showLatencyTester</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a8efa7bf633ed662a5d6c5c659ffa2478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a3f8ad7f15b656509059b361982673518</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad1f0df689e3d2454ce8cb9ffdf9a75a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillSendBuffer</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>af50ea24eba100d380a8b14f4b9c52d77</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; *, MidiMessageArray *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillReturnBuffer</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>afdeea964e8cfc2420f878ff0d8b2eacb</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; *, MidiMessageArray *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a9b05b852d39ad507448c173fdca79d4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getPossibleDeviceNames</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ae0d628143ee1a8533f9f741c24577165</anchor>
      <arglist>(Engine &amp;, juce::StringArray &amp;devices, juce::StringArray &amp;aliases, juce::BigInteger &amp;hasAudio, juce::BigInteger &amp;hasMidi, bool forInput)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ab76fe9142c8c2073868ec965d1f6586c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>inputDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>afe3d3cfa026a5789d759940999281f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>outputDevice</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a744e75190cb1b521e5b87b51bc34e3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>manualAdjustMs</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a786d7808acfcf6b4f0c6ac399a416a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1InsertPlugin.html</anchorfile>
      <anchor>abb1c2ee71a4732e65ddd1e79b230bd81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InsertReturnNode</name>
    <filename>classtracktion__engine_1_1InsertReturnNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>InsertReturnNode</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a3f6e37018756fa9aaa5837e7a2f6d007</anchor>
      <arglist>(InsertPlugin &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>InsertPlugin &amp;</type>
      <name>getInsert</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a2e0ca4d8754c326856ee5e83ff6c0976</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a3312d49802b208b0135c3e472942316b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a6b5e63f5194ff28f1889efd395f81855</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>ac6e1374dc56b750f65c2dc28cfef36d7</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a5144fe9fc1884485756fe635c663ab65</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1InsertReturnNode.html</anchorfile>
      <anchor>a91ab9acc026a624db417ae5baa2d1f77</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InsertSendNode</name>
    <filename>classtracktion__engine_1_1InsertSendNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>InsertSendNode</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>ac15ad73ea84f360e02fb185044f296d5</anchor>
      <arglist>(InsertPlugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InsertPlugin &amp;</type>
      <name>getInsert</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a662f479977d74c44b5a29a4d62f6c2df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a1de6818ad9e92ab2e73071bd65dba1ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>adc454f215e84684553698192bd291b0c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>aa603dc91a9eb989cae75aa444b53898b</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>af69a378bbcf28d7faa26013ebd23e35c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a3da06d212a5d2cdaf06bc21bfc69b6a2</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::InsertSendReturnDependencyNode</name>
    <filename>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>InsertSendReturnDependencyNode</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>ae2d8d9ba0fd5f3c084e0712577c3b8cb</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, InsertPlugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a85a94890d0c53a18283b048bbbcadce3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a51e56a837a2f89594b71c21fdb946cf5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a33a1568a674473df0f82dc14948fc331</anchor>
      <arglist>(Node &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a2110752a1d52c2317516eca3f3ea4032</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a22b89eef17e2200d781fc0338a59edf5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1InsertSendReturnDependencyNode.html</anchorfile>
      <anchor>a20bbf774cf6835b4812fc8ea785b4bc8</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ReferencedMaterialList::IntervalList</name>
    <filename>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</filename>
    <member kind="function">
      <type></type>
      <name>IntervalList</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a8f325af3cbeae92e087421c743126f24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumIntervals</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>abb5547625bb0951ce44ce75ffb800148</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a1556e299e58933f22da91c41aedd6d71</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>ab90e1437aa42d5218e33096777d3acc4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>adcb68c3cd4483a1e3a5018fb6a9c3eb3</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInterval</name>
      <anchorfile>structtracktion__engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>aa5d2e256883cd1a666ab501f48ea856e</anchor>
      <arglist>(double start, double length)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InvertEffect</name>
    <filename>structtracktion__engine_1_1InvertEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>InvertEffect</name>
      <anchorfile>structtracktion__engine_1_1InvertEffect.html</anchorfile>
      <anchor>a382303a175c400ed685d17b801fdf65b</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffect::ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1InvertEffect.html</anchorfile>
      <anchor>aabdbd2c2990c5442b038268ddd1b783e</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::ProjectItems::ItemInfo</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</filename>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>itemID</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</anchorfile>
      <anchor>aec15db7d2b0c834e06838ba7561f4d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>range</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</anchorfile>
      <anchor>a751caf5eb59abd2c943095aee2ac5c76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectionManager::Iterator</name>
    <filename>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a195c6eba9dec3cfe62010e692b7f84bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>next</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>af43235c4e413e5c80badcee8163117a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>get</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a9f12d52d2d352064a790b6e3bd9ef1d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>operator-&gt;</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>ad12c5511e503bb136b910fe606868dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a8e6a73de15076c57d8b1e8456fcd6272</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RenderManager::Job</name>
    <filename>classtracktion__engine_1_1RenderManager_1_1Job.html</filename>
    <base>tracktion_engine::ThreadPoolJobWithProgress</base>
    <class kind="struct">tracktion_engine::RenderManager::Job::Listener</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Job &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>abeec0555fdc63e2dc98166ad8f173ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Job</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a4acfaf887bc9879bf8a6c7741144d5fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a0d4fdea638b46b7d428a2d1cb706eb5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a8258e4f06721b9fa0d97b55c46cb99e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelJob</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ab2bc78455453805e5cf030c793ff2ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUpDanglingJob</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ab97d337764257a58aeca499df1354dc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incReferenceCount</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a43a96569aa60cbd7103d6f1e1605aef4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decReferenceCountWithoutDeleting</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>aa603a6fade9b06d4e51498dafd000bb9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReferenceCount</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a0bfec555d3e47d309aaf71b1e26036f5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>abe086226c18a42cbd3c9db66f48650b4</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>adad390e91948c010ef3db4aab77f65a4</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ac6c04ed8c7923102110aa0086a9489d2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a6fc55d91a9fcee0ecbe99a7ee2454d83</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>abd1961725681ed269e835d9d3f155585</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ad0e2e0d5dd8e0fe5f137bdcb346b9cfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>proxy</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>aaff7ce440a0ef98ee5f57c80da019ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a3757963bd2513cb5d4ee5bf0edecb313</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Job</name>
      <anchorfile>classtracktion__engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ac1c095314905ca8b41ec6403c3622fa0</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;proxy)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BackgroundJobManager::JobInfo</name>
    <filename>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>ac86a8120239d8ed85912c371d47234e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a86546dd96f6428a3351b4bd94dbd5028</anchor>
      <arglist>(ThreadPoolJobWithProgress &amp;j, int id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a54b10642b726052122df9249a73462db</anchor>
      <arglist>(const JobInfo &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>JobInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a379e7bd4228a5c0cb1cc5a7f23d0f60d</anchor>
      <arglist>(const JobInfo &amp;o)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>ae47f8d024da8c919abb7931aea99f5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>progress</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>ab6c3e67cc5e2602e00bd7608b9c95242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>jobId</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>aa3bf74dc46487237b0c4ed8cf7d14401</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>canCancel</name>
      <anchorfile>structtracktion__engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a9209b33217a902de7d374a54017be707</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::KeyResult</name>
    <filename>structtracktion__engine_1_1KeyResult.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyResult</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>aac6c583816c8f25324e1bb8941360edd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyResult</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>aef80a1f321eeeeed98f147dbc83d6881</anchor>
      <arglist>(double r_, int k_, Scale::ScaleType s_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>a8d75c636edc66eb2e728638dd96a2c2c</anchor>
      <arglist>(const KeyResult &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>r</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>aefdd1de975dcea26fb8d753a2289b0d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>key</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>ae0e68bee61a75098e2de819ded1a7def</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scale::ScaleType</type>
      <name>scale</name>
      <anchorfile>structtracktion__engine_1_1KeyResult.html</anchorfile>
      <anchor>a1b7d144290ab13767489e73bc675172a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LambdaTimer</name>
    <filename>classtracktion__engine_1_1LambdaTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>LambdaTimer</name>
      <anchorfile>classtracktion__engine_1_1LambdaTimer.html</anchorfile>
      <anchor>a1a0a17219ce4e1acf7a4b117ff5cc453</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LambdaTimer</name>
      <anchorfile>classtracktion__engine_1_1LambdaTimer.html</anchorfile>
      <anchor>a947dba1a9009706b6f261b57aafda6b4</anchor>
      <arglist>(std::function&lt; void()&gt; newCallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCallback</name>
      <anchorfile>classtracktion__engine_1_1LambdaTimer.html</anchorfile>
      <anchor>adc51eb7c6d1fe204ef55f2447c4091dd</anchor>
      <arglist>(std::function&lt; void()&gt; newCallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1LambdaTimer.html</anchorfile>
      <anchor>aa2e7a8dc4848c60f1cbec4d9149a28f3</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LAMEManager</name>
    <filename>classtracktion__engine_1_1LAMEManager.html</filename>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getLameEncoderExe</name>
      <anchorfile>classtracktion__engine_1_1LAMEManager.html</anchorfile>
      <anchor>ae5e115f451ab46632dbf9ee0115d0aa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerAudioFormat</name>
      <anchorfile>classtracktion__engine_1_1LAMEManager.html</anchorfile>
      <anchor>a2ff0c3c5ae4ee5ee5536ddf9636b85cf</anchor>
      <arglist>(AudioFileFormatManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lameIsAvailable</name>
      <anchorfile>classtracktion__engine_1_1LAMEManager.html</anchorfile>
      <anchor>a6b58832091d48d1f5ca530475b0b61db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::LatencyNode</name>
    <filename>classtracktion__graph_1_1LatencyNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>ae9f10a6070972cb4df8f36190e6e51f5</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>aba36757e65ad52c40c15b116fba157bf</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt; inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>adc76f6cdbd7f0313ecf466e8a2c3a53f</anchor>
      <arglist>(Node *inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>aecf28d0b224f45de40189bb1a4e2b7ea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>a27417151db432f694442c01a08ba9821</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>af8454d7eecb57213cb37f398ba7dd072</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>aa35409f9639a49f43e767c90353a921d</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1LatencyNode.html</anchorfile>
      <anchor>a70049e423e2e30fe6310e43e27f6403a</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LatencyPlugin</name>
    <filename>classtracktion__engine_1_1LatencyPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LatencyPlugin</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a3c6503a32cfbab115a7b8ab493e4ffea</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LatencyPlugin</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a7c4361077830fa1b34ac082081b093fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>aabb65aa4ffd2aa05c60d24408d53e786</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ab1e0acb1092e76cb50a6ccf50aea91ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a794045ef282dd160646a3ab370de9754</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ae503c895660190018375f9e5d81ede73</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ad7de2d7ba0be3caa11e482999e630d07</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a468728ead73c380c576df8b7c31ac4c2</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>aa6126d61726cc837e8a7fe5bf8ab174d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>aba06646cbdcf4f886c3e672528e5cf20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ac93a8fba043b7e0c704950990595c855</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ae2aacf873611b49693304ac205bbd26d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ConstrainedCachedValue&lt; float &gt;</type>
      <name>latencyTimeSeconds</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a86a1de4bafb58909765b19bf6c0f709b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>applyLatency</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a45f8b452365f777d1ba52f2ad8a0b6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>acaa7cdf69340f9965e7339c120b59744</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::LatencyProcessor</name>
    <filename>structtracktion__graph_1_1LatencyProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>LatencyProcessor</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a54f7f280311a51fcde254973d1c7e710</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSameConfigurationAs</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a54a637ecb3d88205bf3f078b97023e44</anchor>
      <arglist>(const LatencyProcessor &amp;o) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasConfiguration</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a02d21c3818e199f6276d3f93de0954bb</anchor>
      <arglist>(int numLatencySamples, double preparedSampleRate, int numberOfChannels) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencyNumSamples</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>ad00192c34f56fb9f89093182fdb77b94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatencyNumSamples</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>ae5c7c3eb8256675ee8a03a52c47bd10f</anchor>
      <arglist>(int numLatencySamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>ab98063b8f2faf9e7524fa436c98d22bf</anchor>
      <arglist>(double sampleRateToUse, int blockSize, int numChannels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAudio</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a34aa8fee8d5042c7840e65bf083a856a</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeMIDI</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a3729b9f707815c6d5b6454e7a033e58f</anchor>
      <arglist>(const tracktion_engine::MidiMessageArray &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioAdding</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a543fa930a7c3831e5c6d76799c924352</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioOverwriting</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a428ff983676fc870c2ea937a845ee5d5</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readMIDI</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a11d870360a19ea82a8a796e24436a322</anchor>
      <arglist>(tracktion_engine::MidiMessageArray &amp;dst, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAudio</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>aed3f9da2af92dcad337bb7c949a2b049</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMIDI</name>
      <anchorfile>structtracktion__graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>aae2247c88817854b74c8892f9c64c91d</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LevelMeasurer</name>
    <filename>classtracktion__engine_1_1LevelMeasurer.html</filename>
    <class kind="struct">tracktion_engine::LevelMeasurer::Client</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>peakMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faaeedb685c5983e1b7a34577196ef227de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RMSMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faaae6808f57c64f8cdb8af8099b05d68e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sumDiffMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faa2ab041d6b226352200c22ba01ffb5ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>peakMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faaeedb685c5983e1b7a34577196ef227de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RMSMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faaae6808f57c64f8cdb8af8099b05d68e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sumDiffMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a72e36717aa0d4926c5a3b3995c3218faa2ab041d6b226352200c22ba01ffb5ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelMeasurer</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a8270cc24863f65b3713da50cd3884081</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeasurer</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a5ed10ac7d255164c313707692a037c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBuffer</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3e815f2aee106391220b6115a84c7155</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int start, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMidi</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ab4398ea04c4015457962e5ab7049f071</anchor>
      <arglist>(MidiMessageArray &amp;midiBuffer, const float *gains)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMidiLevel</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a8fbbcb62c782d029ffa320bc5da1f4fd</anchor>
      <arglist>(float level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ac9b51a67403cec0f8a45d51b4054e215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOverload</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a9a94c604286ea5d0a67ba9d455cc3240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPeak</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>aecb07bb76f39d8fa46fe4e97b1949a8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ad83428326d2c6555efae901d0f6ebbf8</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>getMode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a8264ad808c78733104858f0b1ec728e7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowMidi</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a7f150a5894d72b502dd61823d6677bd6</anchor>
      <arglist>(bool showMidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumActiveChannels</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ac98ac5d1db4c6b77a81b32034f3ad881</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClient</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>acc71cb51239af9f2652aa112c21c1ac6</anchor>
      <arglist>(Client &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeClient</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ab5e1133d244684aea1598911dd933a34</anchor>
      <arglist>(Client &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelCache</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ad484c068b811667f897b43d98ea2b64c</anchor>
      <arglist>(float dBL, float dBR) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; float, float &gt;</type>
      <name>getLevelCache</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a09d412068f9418c99a1a057b9a0d58e8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LevelMeasurerProcessingNode</name>
    <filename>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LevelMeasurerProcessingNode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a50505171e10efb2ab0d19c6383e00106</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; inputNode, LevelMeterPlugin &amp;levelMeterPlugin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeasurerProcessingNode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>ae158b82bd7cde03d0a4c917fa35356f6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>aeda42e8414ae87d8636ece232c5068f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion_graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a6d009ba39ed27a97f05d1aac5f168aca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>ad55d39b99abba45f9a4529ae2090f62b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a82baec9b130e468fc9db4d1d81ca22d0</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a9f2664279074449d297b8224f5a77dd2</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LevelMeasuringNode</name>
    <filename>classtracktion__engine_1_1LevelMeasuringNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LevelMeasuringNode</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a9e2be8bcd0a262c80766da632f1c0028</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; inputNode, LevelMeasurer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a7c2ab1fde020aa56024917c5efa28f93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion_graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>ad80a45d56218bcfbcfb85e5faff3a15e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a3f8f2df3e85122cf510ad5e96620cc13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>ad84d6364cde9ebaa2ff2ed5061682397</anchor>
      <arglist>(tracktion_graph::Node::ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LevelMeterPlugin</name>
    <filename>classtracktion__engine_1_1LevelMeterPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LevelMeterPlugin</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a758ac789f8d6302394f20b87d1eb4653</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeterPlugin</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a60c3a81f0e3ee504ca28e7d3e1b4ac96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a07cda6598e58c5d68ea8b807f6d53dc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>af1993521a5a7f2fdae2191b4fe1f3737</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a1361d3af27616fdab10d2374c085f228</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>af856c61baef0d963c628d2a698bf2a71</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>ad244f273107ebe17768504f24f205273</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a300b6f34d636307606e45d7795e1fb19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a2034654be42d83ab05ccb4555ea26242</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a56908fccde1fcf43cd08b02eabbe37c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a11c9f601ba55c1a8d3ba123630cb711f</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a4d9fc80fd60f362629380f549471feae</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a711834f5ad26f1e4cc716a23a6f3d17a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a308b499af983fa5674fb1349dd081af8</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a57d1b148810d57f3817120e8c31bd257</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a881c88f0b1f7fc64596e4c1ee64e8953</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a7edbeb14dd207885138925c5b17b62fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>ac81575fa57ae02bff1d8bae62acda4f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>measurer</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a73e9e1517274bc27142dfaa1bb3ec99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>showMidiActivity</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>ab84ca1a1c159322ba89084ad9f24d0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a37b6b214fdc0cea4fe2ae754e5f68eee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EngineBehaviour::LevelMeterSettings</name>
    <filename>structtracktion__engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxPeakAgeMs</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</anchorfile>
      <anchor>a5e27fc30dd3000d9b9b9254a4d40bc45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decaySpeed</name>
      <anchorfile>structtracktion__engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</anchorfile>
      <anchor>aefdd721427f4b738a0683dc31afb098c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LFOModifier</name>
    <filename>classtracktion__engine_1_1LFOModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::LFOModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Wave</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSine</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea3756d16a6325c936c927a8abf12fc8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveTriangle</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eadf622e7d465625e123b155f52bdafe3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eae8d12a824490193770cb26b0aa1aea37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea6ae643c072ccc4926f9a2e6bcb0cddf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSquare</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea2209233dc7cc175fd1ce744284d54faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eafa2fa4b6feadef2dd5659c4f522760f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea568332326aaa224793ea67d029d6b033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea360c793d3037a276efad9ec6416d668f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea462e032526aab99a3092317f188bb484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eaff0f8b07a3475512610528af8d9f8b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea2cb7c702c4e5d4793ab05f9abc89f9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; LFOModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5a608a7907e9f37c130fbc0a84482893</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; LFOModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>afd2f69882d2f89469f6f3e99d6344e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSine</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea3756d16a6325c936c927a8abf12fc8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveTriangle</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eadf622e7d465625e123b155f52bdafe3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eae8d12a824490193770cb26b0aa1aea37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea6ae643c072ccc4926f9a2e6bcb0cddf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSquare</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea2209233dc7cc175fd1ce744284d54faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eafa2fa4b6feadef2dd5659c4f522760f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea568332326aaa224793ea67d029d6b033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsUp</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea360c793d3037a276efad9ec6416d668f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsDown</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea462e032526aab99a3092317f188bb484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409eaff0f8b07a3475512610528af8d9f8b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a5616bfbfc43ade963b04b73dd8b2409ea2cb7c702c4e5d4793ab05f9abc89f9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LFOModifier</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>af36e97246bce74a9f8209abd6f164397</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LFOModifier</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a6fbcfc09722825cdfc1becf17efa39a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a0252317a73742acf8385056bc3e93a68</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a189819ea3f806fb6ef236d98a89722e9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a0cac85f1744f8387326e1a8b163673cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a981568992aedd3e2372926edcf066dbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a173ee3866025182bcb67191811cde697</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>afa6100cd9f6ff3d0bf517aecd30db050</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae7fa8766ab70ed875c52df29403a7bef</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a03891a62200c9391c87c17b59fc21912</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getWaveNames</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a3631793d1b65ef98dce37a5306c53ced</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wave</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8eac653cb05ef1d53ea49e3bd52ee073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>abf91b9284df61bdbd8f9e13b778e5872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>aef04abbb5f5a63951c8f88279648c252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a04783ae571622b994a9704f184e183f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a96e2f77c77d903e87f8fab5109481243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a7020f1ee025d27124390ef616252a986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>phase</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a2e6fa5aab77060bc73ca75b93f0b4f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>ad3dcb5a2cc386657b0a9cab701f70f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>waveParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>abf9e976438dca9dd2c2dcb16f73a47e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a990530c92556d6bb216ce3f7b8b97cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>afc4ae2d39c55f686a076d4a0c2717702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a72290ecbb3360ec47c1c87afec076fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a9dd2087acbeeecb110e698f59aaeb2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>ab803c9b493b0de471175e399a6f2e98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>phaseParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a2f06b0e5ffb1b1a5575e666a8ba7e215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>offsetParam</name>
      <anchorfile>classtracktion__engine_1_1LFOModifier.html</anchorfile>
      <anchor>a31987339379dc537b2e711ec4ae6d415</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FourOscPlugin::LFOParams</name>
    <filename>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</filename>
    <member kind="function">
      <type></type>
      <name>LFOParams</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>afcfe29ea1090ae96b7e566927af56712</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int lfoNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a9c107d6c07b00b11f4b86c5c4341bfea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a53ab965248e2e90ab012f7245f5dd2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a7e3ab3710e0aec3211a7fdfaa9eb05b5</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>syncValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>afbb83cc3339bdd9e078ea7314e61e7ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>waveShapeValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ada9860a591b3b2a17adf072ef668a44f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>abacfccc9b698fed42d5b3fe2599487fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>beatValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a1747f003ab100b1132abff5ccebbfde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depthValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a6e266aed5a951c5cde784aa756ee4465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rate</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>abf99ac4c0afcbdd41f28fdabb97015f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depth</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a53116d4dba75480b81c97f9ee7fccb6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::LightweightSemaphore</name>
    <filename>classtracktion__graph_1_1LightweightSemaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>LightweightSemaphore</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a34ebc3ce0ff3863fa8c8a5d4a7fe9cd3</anchor>
      <arglist>(int initialCount=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LightweightSemaphore</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a5a04fd77dc897bd574556a732cffbe0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>ad6f579522c41adc5473b00f574cf3b0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_wait</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>abd328dd71781a6448d9f007a3f5eab9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>timed_wait</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>af1be333a286bb3d144a251e57b560551</anchor>
      <arglist>(std::uint64_t usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signal</name>
      <anchorfile>classtracktion__graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a1928951e07decff7acc368903c39d0a7</anchor>
      <arglist>(int count=1)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve::Linear</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve_1_1Linear.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Linear.html</anchorfile>
      <anchor>a1cb7e5a4a9140c90e2fe34f259b4f256</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1Linear.html</anchorfile>
      <anchor>ab972665ad4c585594a1ecc0d3a058231</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LinEnvelope</name>
    <filename>classtracktion__engine_1_1LinEnvelope.html</filename>
    <class kind="struct">tracktion_engine::LinEnvelope::Parameters</class>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a3042e4b483b70a7f33149413dd768b79</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1LinEnvelope.html" anchor="a3042e4b483b70a7f33149413dd768b79aec2f993aec2c27fc750119ab17b16cdb">idle</enumvalue>
      <enumvalue file="classtracktion__engine_1_1LinEnvelope.html" anchor="a3042e4b483b70a7f33149413dd768b79afc7e987f23de5bd6562b7c0063cad659">attack</enumvalue>
      <enumvalue file="classtracktion__engine_1_1LinEnvelope.html" anchor="a3042e4b483b70a7f33149413dd768b79a63faabca234a29640f3344e74c0672da">decay</enumvalue>
      <enumvalue file="classtracktion__engine_1_1LinEnvelope.html" anchor="a3042e4b483b70a7f33149413dd768b79a02bc1150d41a4dfdc324849c25dce148">sustain</enumvalue>
      <enumvalue file="classtracktion__engine_1_1LinEnvelope.html" anchor="a3042e4b483b70a7f33149413dd768b79a123fead50246387983ee340507115ef4">release</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>affa9daed8885c560cd8d179555ebee13</anchor>
      <arglist>(const Parameters &amp;newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a115572eb2d3bfadd36bfa752b40fd697</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getEnvelopeValue</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a4a617ae97445081b2d35cdf54b1a86ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>getState</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a4999d17c0c8ca50a9c60062e6861debe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOn</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a98c133807ac8e910ab2110067a109086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOff</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ad2ea4420e5509547364d2e6f537014c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>addedb682555df97242e35760d054b3b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextSample</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ae214755cb44dc7ab3aeda8cdaea5671a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEnvelopeToBuffer</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a1d0feb6d6dc0c6b9e5d1803f31499d82</anchor>
      <arglist>(juce::AudioBuffer&lt; FloatType &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calculateRates</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ad87d796d62f4358c420694b783ba3c34</anchor>
      <arglist>(const Parameters &amp;parameters)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>currentState</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>aaadc1bc170b79b99c09700fe83da5f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Parameters</type>
      <name>currentParameters</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>aa0adaf5a4466a89f33d6add39daa148c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a7b252815c2efeae8b7d0ce78121aa3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>envelopeVal</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>adbbb92edf8531a9592f3cbaa80009f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sustainLevel</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a868a2eeafdede59e7aaa4819b5be0fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>attackRate</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ac241f140d6217bb14138e57409079524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>decayRate</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a6d7c5cc95ca0dda929f23c950d0672f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>releaseRate</name>
      <anchorfile>classtracktion__engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a5c234c8125898e0d5071f097299c102e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AbletonLink::Listener</name>
    <filename>structtracktion__engine_1_1AbletonLink_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a19e2bb1925e91cca4aaa323ac696be5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkRequestedTempoChange</name>
      <anchorfile>structtracktion__engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a46911e2d164cf4db4c2f2270c3162d8c</anchor>
      <arglist>(double newBpm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkRequestedPositionChange</name>
      <anchorfile>structtracktion__engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>ab9061dd8c49b5c6dd12c0439b9586c69</anchor>
      <arglist>(double adjustmentInBeats)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkConnectionChanged</name>
      <anchorfile>structtracktion__engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a9ebb33dfc807f219ad06bf104d4a99e7</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomatableParameter::Listener</name>
    <filename>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a63d17b60bf20adc03c94d1bfa0ef79e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>curveHasChanged</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a5c3c0c73fa4d5565409b2512b00ec01b</anchor>
      <arglist>(AutomatableParameter &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentValueChanged</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>ae7804734c9b9742b0c7478d30ce3fec9</anchor>
      <arglist>(AutomatableParameter &amp;, float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>af9f027f8682d68c85a8481ffcdad68e4</anchor>
      <arglist>(AutomatableParameter &amp;, float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChangeGestureBegin</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a5d1db3ef066de4fcaec310e735e33ea5</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChangeGestureEnd</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>ac984e98ff3ebf32e7d9aef026c404fd8</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiLearnState::Listener</name>
    <filename>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</filename>
    <member kind="function">
      <type></type>
      <name>Listener</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>ad3cde8e5291e4a21b632e828b6fa4464</anchor>
      <arglist>(MidiLearnState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>aecdcfc3707c836144cecf1488cc408dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiLearnStatusChanged</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>ae9dc97f784d473aeb8214a878fc11f32</anchor>
      <arglist>(bool isActive)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>midiLearnAssignmentChanged</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>a74c841d6c5236fa862f24486614f8422</anchor>
      <arglist>(ChangeType)</arglist>
    </member>
    <member kind="variable">
      <type>MidiLearnState &amp;</type>
      <name>ownerState</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>abdd5025fea6d85e339d3ae2f497d29c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TransportControl::Listener</name>
    <filename>structtracktion__engine_1_1TransportControl_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a8972c55267e3fc83d275fd67a02501c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>playbackContextChanged</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>af14fb6032703baff7ea208504b4ac326</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>autoSaveNow</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a96cfe277102097c2d260da3201a1bcc2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllLevelMetersActive</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a5dad99fd212f92452f906454fd2c0e4e</anchor>
      <arglist>(bool metersBecameInactive)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVideoPosition</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a0da0a6bb675696134a5d74e448b591b1</anchor>
      <arglist>(double time, bool forceJump)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startVideo</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a5d18a9eb8a107e0ffda8e76c361230fb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stopVideo</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a23a0a9a05256d9d75200b5e174702743</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingFinished</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a4be095c8fe344e89eaa293e5afc3c1ca</anchor>
      <arglist>(InputDeviceInstance &amp;, juce::ReferenceCountedArray&lt; Clip &gt;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clip::Listener</name>
    <filename>structtracktion__engine_1_1Clip_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1Clip_1_1Listener.html</anchorfile>
      <anchor>a9082d34d7232d7e450832946d8a3d55f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiMessageGenerated</name>
      <anchorfile>structtracktion__engine_1_1Clip_1_1Listener.html</anchorfile>
      <anchor>a8a89e67f52f38f8e6add16d7b7d05106</anchor>
      <arglist>(Clip &amp;, const juce::MidiMessage &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ClipEffects::Listener</name>
    <filename>structtracktion__engine_1_1ClipEffects_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a32818a4b2081ee403be3b0f41e14b189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectChanged</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a84a1b1a58eb0e02162dd1ff293fd648b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectAdded</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a032035a46356709474f8b0b3cb288cf1</anchor>
      <arglist>(ClipEffect *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectRemoved</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a567b1dad4dceadaf6c6b04898c4c64a6</anchor>
      <arglist>(ClipEffect *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectsReordered</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>abf48fec1a43c465727cd6856061096a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderComplete</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>ac04508a94cc7ebfdf77043ae81f3887a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::BackgroundJobManager::Listener</name>
    <filename>classtracktion__engine_1_1BackgroundJobManager_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager_1_1Listener.html</anchorfile>
      <anchor>a5b334f03011e41dc2504f6109782a570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>backgroundJobsChanged</name>
      <anchorfile>classtracktion__engine_1_1BackgroundJobManager_1_1Listener.html</anchorfile>
      <anchor>a8f7aac5df75a53c45f4aa8d67b2f06fb</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditSnapshot::Listener</name>
    <filename>structtracktion__engine_1_1EditSnapshot_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1EditSnapshot_1_1Listener.html</anchorfile>
      <anchor>ad5318f27aaa54ff9d1a1ba8c8ac71448</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>editChanged</name>
      <anchorfile>structtracktion__engine_1_1EditSnapshot_1_1Listener.html</anchorfile>
      <anchor>a04b2513445adb03fd1805eccc618137d</anchor>
      <arglist>(EditSnapshot &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::RenderManager::Job::Listener</name>
    <filename>structtracktion__engine_1_1RenderManager_1_1Job_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a5768f6d4133096b67ae36cd2e9ada62d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jobStarted</name>
      <anchorfile>structtracktion__engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a56269a5ebab1e5df4a8e638a199d34f1</anchor>
      <arglist>(RenderManager::Job &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>jobFinished</name>
      <anchorfile>structtracktion__engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a76d82af7c72eb06a948a43a0b03d37bb</anchor>
      <arglist>(RenderManager::Job &amp;, bool completedOk)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioTrack::Listener</name>
    <filename>structtracktion__engine_1_1AudioTrack_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>a4698b30653f11bc79bca17bc40657987</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>ac52bb6405b00c7ea044cb298f8140070</anchor>
      <arglist>(AudioTrack &amp;, const MidiMessageArray::MidiMessageWithSource &amp;, bool &amp;wasUsed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>recordedMidiMessageSentToPlugins</name>
      <anchorfile>structtracktion__engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>a29d168652ab3bfdb3f4ac904f90197af</anchor>
      <arglist>(AudioTrack &amp;, const juce::MidiMessage &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</name>
    <filename>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</anchorfile>
      <anchor>a778df744af3fe658a7162b451a3cf1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiKeyStateChanged</name>
      <anchorfile>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</anchorfile>
      <anchor>a95b660279e813a5231c54f60bcfd9544</anchor>
      <arglist>(AudioTrack *, const juce::Array&lt; int &gt; &amp;notesOn, const juce::Array&lt; int &gt; &amp;vels, const juce::Array&lt; int &gt; &amp;notesOff)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::LiveClipLevel</name>
    <filename>structtracktion__engine_1_1LiveClipLevel.html</filename>
    <member kind="function">
      <type></type>
      <name>LiveClipLevel</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a256e780ed252cff26ad1ab6fc97bab57</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiveClipLevel</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a55cf147a8574dd6c4dd412c117d7ff7f</anchor>
      <arglist>(std::shared_ptr&lt; ClipLevel &gt; l) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGain</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>aee5c91fbe84c5ff9c24fe1a2655fbc58</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>aacfb52489bb4f8955f73c85bbdc18551</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>ad287cb82a4cdb14c9d7fad50bcf0590a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainIncludingMute</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a43cf473f9224e769a24a0f6d296297a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLeftAndRightGains</name>
      <anchorfile>structtracktion__engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a71dd9eb5856ed9b5e315919ef87c756d</anchor>
      <arglist>(float &amp;left, float &amp;right) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LiveMidiInjectingNode</name>
    <filename>classtracktion__engine_1_1LiveMidiInjectingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base protection="private">tracktion_engine::AudioTrack::Listener</base>
    <member kind="function">
      <type></type>
      <name>LiveMidiInjectingNode</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a9525f7af48f299114e82274dba981c04</anchor>
      <arglist>(AudioTrack &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LiveMidiInjectingNode</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>abfbf58455264bfade83b2a357928d093</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>acdbe7f3fe85a4f14a5a0fa51d8be4f2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>af654a03a85595c7c2880a0669eda98db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>acc2050abb1cdd5904bbd1115876ca7d6</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>aed8660ebf30fb7e4d90d24283989ebda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a61a7aa2ebb35f8b16129d4a860d6eb69</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LiveMidiOutputNode</name>
    <filename>classtracktion__engine_1_1LiveMidiOutputNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LiveMidiOutputNode</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a7c69fd6aef723418b2c3bbc992026a12</anchor>
      <arglist>(AudioTrack &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiveMidiOutputNode</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>ad32704bafad50556e718559368cb3824</anchor>
      <arglist>(Clip &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a1142311534c2f88bf5f7dc6cfc7e59bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a14087cefcc464d602bd287a90d9c0d1e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a9cb5122b0a0ceb2111059c8f22c99999</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>afa2cdd0d623f91c87008a936fa3f8084</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a300796e0c500724f47c9728c4aab094b</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::LoadContext</name>
    <filename>structtracktion__engine_1_1Edit_1_1LoadContext.html</filename>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>afd274f74b34fe2558fad704c13d9fad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; bool &gt;</type>
      <name>completed</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>ad74cc2d60134457d4f77044a638cad3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; bool &gt;</type>
      <name>shouldExit</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>ac843030db4b4cc7dfce3334fbd459077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::LoadFinishedCallback</name>
    <filename>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LoadFinishedCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a1259817f5adf5d7bb3ec08fe436472c1</anchor>
      <arglist>(OwnerType &amp;o, Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>ac0aec9d74fa2eb96ebd819ab5deffdc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>OwnerType &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a375a2dd96003da77fb914bd894df6c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>acc95848a61ab04075dd23a63a8737ecb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LoadFinishedCallback&lt; tracktion_engine::WarpTimeEffect &gt;</name>
    <filename>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>LoadFinishedCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a1259817f5adf5d7bb3ec08fe436472c1</anchor>
      <arglist>(tracktion_engine::WarpTimeEffect &amp;o, Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>ac0aec9d74fa2eb96ebd819ab5deffdc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::WarpTimeEffect &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a375a2dd96003da77fb914bd894df6c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>acc95848a61ab04075dd23a63a8737ecb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LoadFinishedCallback&lt; tracktion_engine::WarpTimeManager &gt;</name>
    <filename>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>LoadFinishedCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a1259817f5adf5d7bb3ec08fe436472c1</anchor>
      <arglist>(tracktion_engine::WarpTimeManager &amp;o, Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>ac0aec9d74fa2eb96ebd819ab5deffdc6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::WarpTimeManager &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a375a2dd96003da77fb914bd894df6c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>acc95848a61ab04075dd23a63a8737ecb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::LockFreeMultiThreadedNodePlayer</name>
    <filename>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</filename>
    <class kind="struct">tracktion_graph::LockFreeMultiThreadedNodePlayer::ThreadPool</class>
    <member kind="typedef">
      <type>std::function&lt; std::unique_ptr&lt; ThreadPool &gt;(LockFreeMultiThreadedNodePlayer &amp;)&gt;</type>
      <name>ThreadPoolCreator</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a59df919c6b82bef74d5b58e57590aed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a08365a27a6bfc7ca5f92c2a76d6ae188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a74e2ade6133837ad1e69a0a6c8d3db2d</anchor>
      <arglist>(ThreadPoolCreator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ae94d783dd3b6e546c5df9d37d9169755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a2e84c6cd66e7315be9a61bbfd96dcbb9</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a3834d55bfb28995a424ac3613cb564bf</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a2cfef336d18985f9eef0806242a415f0</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a392cae7ebfa1c8740fd3a0916aaaaead</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab57d66c18b34a80aaf2a770c9f637c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a4513561bcbbba93a5e0899bd59f36748</anchor>
      <arglist>(const Node::ProcessContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ad92e2215c8bc2f6ec870e5bd27e5f73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a60174c68a0ab834e9f2eec0c2400cebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePooledMemoryAllocations</name>
      <anchorfile>classtracktion__graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>af5ac5224e0229c903ad0269a0bc02486</anchor>
      <arglist>(bool)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LoopInfo</name>
    <filename>classtracktion__engine_1_1LoopInfo.html</filename>
    <class kind="struct">tracktion_engine::LoopInfo::LoopPoint</class>
    <member kind="enumeration">
      <type></type>
      <name>LoopPointType</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab89eef01c09ce4d54b7358b360dad790</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1LoopInfo.html" anchor="ab89eef01c09ce4d54b7358b360dad790a3c78b35502b2693fefdfc51cba3a53a5">manual</enumvalue>
      <enumvalue file="classtracktion__engine_1_1LoopInfo.html" anchor="ab89eef01c09ce4d54b7358b360dad790a2bd9c0ed00116be1258e0cc66617d7c8">automatic</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>af9fc00c9a6c32633608b7d1c20b09e80</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a82d97eed06a1f920450c7762d527bf8f</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a23aef510300fac23ad48725930e6fb1b</anchor>
      <arglist>(Engine &amp;, const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a3f38899414295b0b681c65496342b362</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab5ee15fbde8464ea0a8fd9c6a4fb11e5</anchor>
      <arglist>(Engine &amp;, const juce::AudioFormatReader *, const juce::AudioFormat *)</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a76c2a2f9a38bf5001517f98ea13151be</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpm</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a5cf909c20896607b5f696b9f2048d678</anchor>
      <arglist>(const AudioFileInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsPerSecond</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a49218b5b8723787d276f1c60616e6de8</anchor>
      <arglist>(const AudioFileInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBpm</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a35f4546a21ceca880d8d8f54aede01ad</anchor>
      <arglist>(double newBpm, const AudioFileInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDenominator</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a14004c2feeaf71668d03b27a6bdd2669</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumerator</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ae23e2666ae896da958b0aa0b6df23659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDenominator</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a71274a4ccdc8aa31f758f19eaa34eaf3</anchor>
      <arglist>(int newDenominator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumerator</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a1cf9c4d0ecdfef5674becae18d4e565d</anchor>
      <arglist>(int newNumerator)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNumBeats</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab3e4bfa005b889f70aece7245b3a07f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumBeats</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a8f5499abe53fcf26cbeffb5369d64022</anchor>
      <arglist>(double newNumBeats)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoopable</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a0065e68ff4bfa3c1864f766a3df369ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneShot</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>af68f444acd8815a1abb60064de56ac0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRootNote</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a7db570e9aefb07908918c9d5b6a4f2c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootNote</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a17eacb336e33c8f432fff3fe25d94603</anchor>
      <arglist>(int note)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getInMarker</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a39c7b3a20f70036609a3389063e58fd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getOutMarker</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a4f7261515c2179cba66c72cf503c5442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInMarker</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>acf3ea02c3d2b2571424a6053eec163bd</anchor>
      <arglist>(SampleCount newPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutMarker</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a0245091df761a1dd988964de77b1debe</anchor>
      <arglist>(SampleCount newPos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumLoopPoints</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab5fbfd194281aac0e4fe4bf671bda427</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LoopPoint</type>
      <name>getLoopPoint</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>abd19d4cf97919f1521e5e20dd090a445</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLoopPoint</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>aa3261a60f1a10dc2c4d0d96c9c65526b</anchor>
      <arglist>(SampleCount pos, LoopPointType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeLoopPoint</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a84567d3865df3677a2ccd8b65d2ea4e1</anchor>
      <arglist>(int index, SampleCount pos, LoopPointType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteLoopPoint</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a2d7d65d0db5c95205a6afa19d68c9511</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLoopPoints</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a1bff362678939e06ed2e3b89ee32b00a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLoopPoints</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a552c98293e7fc991e07303815c4d631b</anchor>
      <arglist>(LoopPointType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTags</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>acca1bee40e4488aca5d3e608fd928bc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTags</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab1aa6eda62659a325efd33e621fecfe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTag</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a1595d01e96a19e61d88cee9230070fa0</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTag</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>ae07e078994b0aa9f585afd9b3f81305d</anchor>
      <arglist>(const juce::String &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTags</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a6c90ed7875f58032666b4be26981a23d</anchor>
      <arglist>(const juce::StringArray &amp;tags)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a52c2125420ac314f53d06e17b9cb2930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1LoopInfo.html</anchorfile>
      <anchor>a947b95491b875a7b434c1ac45ea9b4a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::LoopInfo::LoopPoint</name>
    <filename>structtracktion__engine_1_1LoopInfo_1_1LoopPoint.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isAutomatic</name>
      <anchorfile>structtracktion__engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>af106a3394460800645ef4532f634d7f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>pos</name>
      <anchorfile>structtracktion__engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>a285a083670fc8e50eecd9a25288e3fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoopPointType</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>aa3abf6c0343271b800ea2167509da08b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::LowPassPlugin</name>
    <filename>classtracktion__engine_1_1LowPassPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LowPassPlugin</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aa73b20897a5d1251c8aea45b204c186f</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LowPassPlugin</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ac737cf831516372678a5577f99183c6c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a9db604cc798b4f93063e06ed6f7b5f15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a0f0094f50c4106ed85c7bd7ef733b464</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a0cbe1dca70d171879cee73f5f8e16537</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a261e18c03a94415d350810eb9414fa61</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aae937e8e1f18be398aa87cdd16817206</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a42819d0a123d1d9d2bb04d01f3a35345</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a66baa90a9570cebfb509a9513880cd3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a6ceba33edd2eb46cc9881141c70912dc</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aa8b59055f7d88a53969be43fe69f1456</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowPass</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a44f85c6cf053b3358867e065835c0a96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a4b2638695943ae7602046f5128fb62e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>frequencyValue</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a83b11c499a8f163409521a1a75a4a4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a7dbb3c7d3d23afaa90e862e62c4c68c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>frequency</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aaac232eda78a4800005c0e204fc88f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ae4b6bc6fdb07339772f2c035340efe6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MackieC4</name>
    <filename>classtracktion__engine_1_1MackieC4.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>MackieC4</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a68cbf51d44b4a1e85de43df8442e36a0</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieC4</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>afee85a5c84e601958067519b3086b254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>af7b59bd302491c988d86851964f8cd5e</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a276863a1c79865dd5b70db542b67ee73</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a5cd69a600dda555a6beb621c69a85d67</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>af3757f94b63ce13168d7a488dab1d79f</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>ab02b9ef2ef6c54b6fee571aa3f1349e2</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>afeddd464de09c6d2eddaf3b37edce616</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a241976908345e44ac8c59746ac86b5a8</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>aa14674e4adae98d4a3c19380c997226e</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>aaf16e2da9b34d798b7961a2b5946d22a</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>ac23e45c2d7a5c5f3ea2fb50bdc89fd49</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>ac5d0f7792cec3906057d18545f44aa1b</anchor>
      <arglist>(int channelNum, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a0387206dedb55921946eaa5a8f89cac6</anchor>
      <arglist>(int channel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a9d91b63e60937eaf83ba13da6bcd26cd</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>adee4be7176035dfa220bc4293ba7c47b</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a1d68624d705b15cdb112d394b77836f8</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a9f8d40ac89963eb12eafa774e68bd541</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>adf5600fbd324d6cabc8e1b4490f6c62a</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a7613090dd77c804263a63fd3c5fda365</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a213417c8c2e037f5e8a4ffa5a103ae3e</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>adb61e48631f4775f4e864d951f239db1</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a818d82c779d0001a5019ec267dbad25b</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a1aa62730e90ae6ff0b8a312f5c34cd1b</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a0272a0d8c14d62df9450eb496a049bf5</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a83fe407b5fc4044af4cdefc4dc8771d1</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a22dde85c3e42441c8c749bba622c4bf2</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a48789a2ab5d6903258984868ad15fc0c</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a07f0530b9ddd93937a38363a779c971c</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a0ec727496d6999a34e87127abc49ada7</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>aa84832b7d1f531f8dc20180e70caad6d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a2ae2727b8ffe5723513aae575f0a55ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a4e502e0cd29b9b53328969218274ac9a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>ab2cb1c5b06cc676f592fa5976150728e</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a9e1eb117a2d90a5ba10dc940610f2b20</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a5baf1ce584fca24f20f2e6dceb7a5613</anchor>
      <arglist>(int bank) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion__engine_1_1MackieC4.html</anchorfile>
      <anchor>a780e5a6ebabe638f02fbc402f3ae2bf2</anchor>
      <arglist>(bool) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MackieMCU</name>
    <filename>classtracktion__engine_1_1MackieMCU.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <class kind="struct">tracktion_engine::MackieMCU::AuxTimer</class>
    <class kind="struct">tracktion_engine::MackieMCU::CpuMeterTimer</class>
    <member kind="enumeration">
      <type></type>
      <name>AssignmentMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a3c104c9811d282bd3095a3c24752a455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PluginMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a1f2443f8533b97a91162c80d9bd62ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AuxMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a229ff90f7614a00da1c44419274b0bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12adca48423ac55620a370f29cd1eaa69c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch1Key</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2a19a63327c190316e49e701c170ae46aa3771c0dd7b4115f54b81a37b46ab647</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch2Key</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2a19a63327c190316e49e701c170ae46a10f42778b538bc3c380752c04237ddb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSurfaces</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caaa047e0e9cffdb5475bcafc7d37fb7957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caa6e6a872c9618be953052e31e26152cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxCharsOnDisplay</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caa7d16e4fb78ff1fecaf8791663ca53c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a3c104c9811d282bd3095a3c24752a455</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PluginMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a1f2443f8533b97a91162c80d9bd62ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AuxMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12a229ff90f7614a00da1c44419274b0bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6327c439125be810ec833bb6d72a4b12adca48423ac55620a370f29cd1eaa69c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch1Key</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2a19a63327c190316e49e701c170ae46aa3771c0dd7b4115f54b81a37b46ab647</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch2Key</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2a19a63327c190316e49e701c170ae46a10f42778b538bc3c380752c04237ddb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSurfaces</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caaa047e0e9cffdb5475bcafc7d37fb7957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caa6e6a872c9618be953052e31e26152cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxCharsOnDisplay</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aac85c7f1541c67fca5c9ad41585542caa7d16e4fb78ff1fecaf8791663ca53c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MackieMCU</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aec3efa58d6547d4a9ab97a7380eca1d9</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieMCU</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a47afd7fed7b81d1ec7617f35ec5f9cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a7ec40b8cc3a51f26383ef7bf2b624015</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>abbbc0fbeb987a4613ff7f5cf2f18e279</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a739146784bfbd137f8431792544a6a6d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cpuTimerCallback</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>af7589f7541803cacf370db86eee12d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxTimerCallback</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>adb3f97c7e964fefec81cf3cbb1ed8681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1bdee137376c50b19090e75456257ab5</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptMidiMessageInt</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a585ea18290877dcb06b9b7a5be9c6313</anchor>
      <arglist>(int deviceIdx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flip</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>abfd5325a74ec0a78acd2a5729943e3e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAssignmentText</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aab8356a07e2c1ac3701e590742f43dd8</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplay</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1153e024be151e0db03a917756e19a68</anchor>
      <arglist>(int devIdx, const char *topLine, const char *bottomLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>indicesChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a384a0bcacaafe7233459e5d7d7778681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSignalMetersEnabled</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ad492af8b9f7ec819fefc2f32a33f80d7</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSignalMetersEnabled</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae1dd51221df8e09a96038aff80e43bd2</anchor>
      <arglist>(int dev, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAssignmentMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a512ab5092cabd11e486f0bf92459efd4</anchor>
      <arglist>(AssignmentMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFaderInt</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a8e76387434c0fef88ac2df65e8a14940</anchor>
      <arglist>(int dev, int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a8f8f81e34da926baf24362c315a4a5f9</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ad14049f8da7c102b6781e3ec080da9a4</anchor>
      <arglist>(float newLeftSliderPos, float newRightSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPotInt</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a78be9bfcb442de7234bacb591ae4405b</anchor>
      <arglist>(int dev, int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>abe2b648ccada4a873655f789a1c563e0</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2adb29e20d344e631eaba96222a5f158</anchor>
      <arglist>(int channelNum, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lightUpButton</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a310aa1f20fd4c728ff1427fe9c57952a</anchor>
      <arglist>(int dev, int buttonNum, bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a60dc264ffd89d410b4ded4f78851d450</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>adc3340595377e96d34ff699e314dc955</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a971e9cf4646dd63cfd18ae6d4b8279a8</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0654175c45c3f22fb6b6278aebae07ca</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2ec5c4ec4e4662ff75f5d621fa99cdb8</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a55aa233789998f046639c523fe426a65</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ab6a5e5af2e2b2369c0ef4e15c043aa56</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4cdc442005881ef8b15fc30b6aa2e0bc</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa6ed326b5fd86323853e0e243055fdc8</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a963ffaba0dbb4f088023b2ec3eed2e63</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae001170ceadcf1fc0ae9ee6926205852</anchor>
      <arglist>(bool undo, bool redo) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aeb5e34e0c8e72ccb5446d89b6ba6d280</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a767c72a058172d0022f9037c98cbd25e</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>afd5ae375f27f17a1630313a4b4cfae90</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a508766e9f39e168b851430349dd8635e</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ab435c4081b41f84933b7000fbc348f89</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae58fcc83948fdbc61804526eca1724c2</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa4e3cb273215fa208458e86111548b74</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTCDisplay</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0ab80d05bd7564d6fa14402ae5ff4a5a</anchor>
      <arglist>(const char *newDigits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1167ceecf5e92ffc27ccf7fde17bdfec</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa1995cf2a53729d3a953da03df84bd0c</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac561acceb818e7e23067cb18d5dfdfa5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aeea7c41495c7519c61b7ab4222341ab4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a82babf261e4cb5fa5590bd03e5e861aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a750ec7d84ac6db5fa267c613ad7f7b0b</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a220484471d5d205ef29a56aae2672dfd</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae45ea09fc5e7f47a065a476196bdbc69</anchor>
      <arglist>(int bank) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>adaed5d9ab68a0738c39d6f9d6c406d27</anchor>
      <arglist>(int channel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerXT</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a5dd8191d779efba95a377766477ee7fb</anchor>
      <arglist>(MackieXT *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterXT</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4a5ddd83e56b4e27e76431048ebb76a9</anchor>
      <arglist>(MackieXT *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4f22653f0e73be942872838171766025</anchor>
      <arglist>(int devIdx, uint8_t byte1, uint8_t byte2, uint8_t byte3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a26fe50d27975eb2697c1aaa3a645be78</anchor>
      <arglist>(int devIdx, const unsigned char *midiData, int numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceIndex</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>afc034c319bf6aa3da88ec383682224c6</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneTouchRecord</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a791218b908e22545c8c21d05e32d6c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOneTouchRecord</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a8c51bbc8aea7d2e885946c1d1856b803</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearAllDisplays</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a9470debcced6ebb7b85d3f65d00147b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDisplay</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a9dfac15d42c89830efbf3cabf2aed43b</anchor>
      <arglist>(int devIdx, const juce::String &amp;text, int pos)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearDisplaySegment</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1e9e5f1b243f01b9ccb731f6de60f8d0</anchor>
      <arglist>(int devIdx, int column, int row)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDisplaySegment</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>acad4bedbace6115a264bf1c07863067e</anchor>
      <arglist>(int devIdx, int column, int row, const juce::String &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>centreDisplaySegment</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a181e6d56c578fdfcd1534dbd56e1c109</anchor>
      <arglist>(int devIdx, int column, int row, const juce::String &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac6becae8e9ca578fccfeb7b47550cdfd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>acd2c070ed97b8accfeabd919afa048dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>auxString</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1451429c41f4076700dccf2f660ee407</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isEditValidAndNotSafeRecording</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa8859df93957a6dcfc0e945945434e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssignmentMode</type>
      <name>assignmentMode</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6fd9611cdd4ed6ca29e3afa12b03f334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>panPos</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a32b2f3a2d9b80465ca2394b00e059662</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>timecodeDigits</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>abef624ed8c0f234e7d918e1fade4bd37</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lastSmpteBeatsSetting</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4c57d613b244767c22c9e06d7971315b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZooming</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a19ec6561245adc4ff86af5a29c33609b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>marker</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a96a1c3d1b895d1d1b0e6c6ba777ac77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>nudge</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4e1bec652b77e52f655949985a97ac63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>lastChannelLevels</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a7b199c621a56e68cdd3394ece622e64c</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>recLight</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a73483b03b6aff3eb935a5174bfd0b9db</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isRecButtonDown</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a75b86e0d53b2c2ac43200425c3d18ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>flipped</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1646c02ea3461c0954f6ee1f6e39d17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>editFlip</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a43b37fd43a23b3be1d26f5802796a0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cpuVisible</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ad382b2720c672dd97df9dd8cc8ef0351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>oneTouchRecord</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a83ff6200787e4d735eb3ee70d97fd1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>shiftKeysDown</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2afad52699abbd0bc6d53989b33cc731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>currentDisplayChars</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a5ca7feba60cd30eda3bb474fe43c31d7</anchor>
      <arglist>[maxNumSurfaces][maxCharsOnDisplay]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>newDisplayChars</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>af9438046325830c9e959bd968019ea19</anchor>
      <arglist>[maxNumSurfaces][maxCharsOnDisplay]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>lastRewindPress</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4f31379b377e69332c68dcdae4f6c338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>lastFaderPos</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a73e22665bd3cb41fe5b9b1b9221b059c</anchor>
      <arglist>[maxNumSurfaces][9]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>auxLevels</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0ae1dd232593916fb59cf3c87bb9c97a</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>auxBusNames</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a39351a54b1ac1bb067a53e7b7364ce05</anchor>
      <arglist>[maxNumChannels][7]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastStartChan</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>aee7b66346e7f03a65dacc11b6626d053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>deviceIdx</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ade726c5d2d33bd67b3b2913fc14296f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>auxBank</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a7e946c7890fce307ffb87568bbad38ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; int &gt;</type>
      <name>userMovedAuxes</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac3786059246180a1817112af90197a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; CpuMeterTimer &gt;</type>
      <name>cpuMeterTimer</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>abb2ae583a875eac40449eddad0086101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AuxTimer &gt;</type>
      <name>auxTimer</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>af5e6b6f8c48395aa2aecb5d8089c83a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; MackieXT * &gt;</type>
      <name>extenders</name>
      <anchorfile>classtracktion__engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0eb5ba4dbeba34eff25b52e6d88f65aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MackieXT</name>
    <filename>classtracktion__engine_1_1MackieXT.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>MackieXT</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>a7a1963c89ec05f16ee78aa4c57e017dc</anchor>
      <arglist>(ExternalControllerManager &amp;, MackieMCU &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieXT</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>a36c1afc4b7530f94fe857a1e891df880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>a867d9de655f0ca57f627e63874464371</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>a99d72f5e6ef1af38bc120daf3bc7c05b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>ac3bd4bf1b029b666dfbc190aff19c64b</anchor>
      <arglist>(int, const juce::MidiMessage &amp;m) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDeviceIndex</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>a58fe64eb42df9d442d57f053d72ee86c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceIndex</name>
      <anchorfile>classtracktion__engine_1_1MackieXT.html</anchorfile>
      <anchor>afcd464da564e46a28402a2f0366a16ef</anchor>
      <arglist>(int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MacroParameter</name>
    <filename>classtracktion__engine_1_1MacroParameter.html</filename>
    <base>tracktion_engine::AutomatableParameter</base>
    <base>tracktion_engine::AutomatableParameter::ModifierSource</base>
    <class kind="struct">tracktion_engine::MacroParameter::Assignment</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MacroParameter &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>ab30b43af3f2e2a68b4a3419cdbfd9304</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MacroParameter</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a12480504e7d91b6eab68f08c4517f541</anchor>
      <arglist>(AutomatableEditItem &amp;, Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MacroParameter</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a4023f61d3df3f23142185f6412b10131</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a1c5c6cc197a158d4e802ba54234e9750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a265d5071b78cbaec65ade3a933ab1ece</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>ad0c25f793972f5deebf4b9cb869a964e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>af13c4c1399c2d9f1f0298df01a563025</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a3d93a0c27f772eb4592683e80eab4375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>macroName</name>
      <anchorfile>classtracktion__engine_1_1MacroParameter.html</anchorfile>
      <anchor>a73447e2b4a0f8ec11bd96c9c5a6be530</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MacroParameterElement</name>
    <filename>classtracktion__engine_1_1MacroParameterElement.html</filename>
    <member kind="function">
      <type></type>
      <name>MacroParameterElement</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a80665938b7fc7ee306bb88879910c578</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MacroParameterElement</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a21c29c72d99b2f342d8cd954df3cc6b3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMacroParameters</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a841f4d445c0714ab7ab0403c71c9fca8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>MacroParameterList</type>
      <name>macroParameterList</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a19928c7b0dded5ae64b3f11e7ca60bc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MacroParameterList</name>
    <filename>classtracktion__engine_1_1MacroParameterList.html</filename>
    <base>tracktion_engine::AutomatableEditItem</base>
    <member kind="function">
      <type></type>
      <name>MacroParameterList</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>ae5e09018e2afa08d25dc2456a7028b74</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MacroParameterList</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a141b1dcf5410a937f1a8e7da94c2c5a5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>MacroParameter *</type>
      <name>createMacroParameter</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a282c5c46adf7e6949f107f0a3176d1c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMacroParameter</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a7e3e2a8d4792be16f1328591b832f78b</anchor>
      <arglist>(MacroParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideMacroParametersFromTracks</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>ac91a358c6c921c3d3042268159c7554d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; MacroParameter &gt;</type>
      <name>getMacroParameters</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a3a589fc9f5e65eb62bc20c1b970fddd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>af7058d760b23a03ee353aa3a682b8e45</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a1c5e28fb1e54799691fe0fd1899a778c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a9fef0bab2c9999caea0ef681e6714f1b</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a685386ac8e2e9a45c7108188d6b5d8de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MakeMonoEffect</name>
    <filename>structtracktion__engine_1_1MakeMonoEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <base>tracktion_engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>SrcChannels</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chLR</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a4f788b572e0b9387b7448f02dcf5e1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chL</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a63bc207e15838f04e76e0748c90c9863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chR</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a6a39585160d9ae8948a4cb180ace17bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chLR</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a4f788b572e0b9387b7448f02dcf5e1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chL</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a63bc207e15838f04e76e0748c90c9863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chR</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a7914e55bca3778c39873dbaf7420c796a6a39585160d9ae8948a4cb180ace17bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeMonoEffect</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a976e53218a10be7afc8c7a08f771adad</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MakeMonoEffect</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac427aa52955515fb376e85ea4d905488</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a177167ab7224ca9b05c27d107958048a</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>aa5ae33b247837a5ca74b132a7c0da4f6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>af292ac9ce8d630b5458d1ebc65fc9f67</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a9a158cc75eba86e15ddb6ab8165bb784</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>channels</name>
      <anchorfile>structtracktion__engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ae997dc70652fb47d7b766f352f63c835</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ParameterControlMappings::Mapping</name>
    <filename>structtracktion__engine_1_1ParameterControlMappings_1_1Mapping.html</filename>
    <member kind="function">
      <type></type>
      <name>Mapping</name>
      <anchorfile>structtracktion__engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a736cd4d8c88465795481b827b9ddd1db</anchor>
      <arglist>(AutomatableParameter *p, int cont, int chan)</arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>parameter</name>
      <anchorfile>structtracktion__engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a6c9fd7cd440a9bf3ce9c9fadcc2a7990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>controllerID</name>
      <anchorfile>structtracktion__engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a610d0c646484016e072d1366c3d28e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channelID</name>
      <anchorfile>structtracktion__engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a6556e138af7588624ae95f7604f4f188</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CustomControlSurface::Mapping</name>
    <filename>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a05ce628f572aafc88a949de49558882f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>addr</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>ac7b9af17593ea1929b5c0a6a67366907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>note</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a45aefe7c27c9a934bef8351b4625ea26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channel</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a1f05aeb491d847b12b999f474f5491d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>function</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a5978c0bc86538f1b561380c3ba8156d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiPatchBayPlugin::Mappings</name>
    <filename>structtracktion__engine_1_1MidiPatchBayPlugin_1_1Mappings.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>map</name>
      <anchorfile>structtracktion__engine_1_1MidiPatchBayPlugin_1_1Mappings.html</anchorfile>
      <anchor>a9c21ea95ed3a768a8dcaf0753ef54236</anchor>
      <arglist>[17]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::CustomControlSurface::MappingSet</name>
    <filename>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</filename>
    <member kind="function">
      <type></type>
      <name>MappingSet</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a577c78676ff5c2dc42a0af64c8107cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MappingSet</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a3ca19a856eb2627f6c9544ed06962f7a</anchor>
      <arglist>(const MappingSet &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MappingSet &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a4aac554ab44e343e38da1ee28e2fda60</anchor>
      <arglist>(const MappingSet &amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>ActionID</type>
      <name>id</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a5181f80e0e10b1500db64fd7347cdbea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>addr</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a48cad6305d6dc11e0c52dc77deea85f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>controllerID</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>aa80113ec6f535d57b1a72358e33cd1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>note</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a4e2d206974a2720f7fa7f898199abf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channel</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a66a44c0fc22c18e787f7cfec9e301b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Colour</type>
      <name>colour</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a253c63aaddf2382a08a30a58786756fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>surfaceName</name>
      <anchorfile>structtracktion__engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a31a221eecb8d969f492c8631fba0046f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditSnapshot::Marker</name>
    <filename>structtracktion__engine_1_1EditSnapshot_1_1Marker.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a414669436e9e1384624bd28877d61d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Colour</type>
      <name>colour</name>
      <anchorfile>structtracktion__engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a89564ae42729366402539ec282b43396</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a6957d2758f45b3d2379e2b43645bc7bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MarkerClip</name>
    <filename>classtracktion__engine_1_1MarkerClip.html</filename>
    <base>tracktion_engine::Clip</base>
    <member kind="function">
      <type></type>
      <name>MarkerClip</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a9a431ac41cbc5b0d601753ade56b6a72</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;targetTrack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerClip</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a7f6f5555d009086b20d06b88a2ac20de</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMarkerID</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a4413b5e4d29f3cbf5a47f61d6663cf10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerID</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a5c786ea1c6c325ba70758ca7a83831ff</anchor>
      <arglist>(int newID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncAbsolute</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a8e729ee5eb6cdc33d02a06d0024b060e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncBarsBeats</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>ab78a8123c5ed2fd08415a0a73b91c22f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>af770bcf6e6862a2ec2c506d7698034fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>ac68b2829ea2379a0ca5c99ee0ff3274e</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>ae37ac6acc7debd53dba7527fa5972fb9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>af820035167e7900184e0a56c219554ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a8860309573ec3fbe8e4f2e6276bafc60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a28ae9a259bb95398cba00fe0d578d607</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>ae097cfa6bdce0c895c23b81289534398</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1MarkerClip.html</anchorfile>
      <anchor>a87c763fada54602e0f1fe7c47f95811f</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MarkerManager</name>
    <filename>classtracktion__engine_1_1MarkerManager.html</filename>
    <member kind="function">
      <type></type>
      <name>MarkerManager</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a0ab9758fc8a12e61ba26179868b3ff4f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerManager</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a6bef2decdfcdd6db3d029a1000e922bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNextUniqueID</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a4f40549889a30d3943a2564f49cff3a0</anchor>
      <arglist>(int start=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkForDuplicates</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>afd7be2054e185280595cfa0a411dd463</anchor>
      <arglist>(MarkerClip &amp;, bool changeOthers)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip::Ptr</type>
      <name>createMarker</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a5bc7f21cf890224e609be1348c11c6b9</anchor>
      <arglist>(int number, double pos, double length, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip::Ptr</type>
      <name>createMarker</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a84c29b0e76262cd974406a5a6bf36a48</anchor>
      <arglist>(int number, double pos, double length, Clip::SyncType, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::SyncType</type>
      <name>getNewMarkerMode</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a2b9abdc873395bd607733b08ece6a8be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getMarkerByID</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a5e89cf3021ba8efa6e57945c315da4d7</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getNextMarker</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a4e887d73c26d85bb9913060b6d707e0e</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getPrevMarker</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>a3cd54e0da22b5954b5b64acced41a5bc</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; MarkerClip &gt;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion__engine_1_1MarkerManager.html</anchorfile>
      <anchor>ad28692e963569de24128baa2198db943</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MarkerSetting</name>
    <filename>structtracktion__engine_1_1MarkerSetting.html</filename>
    <member kind="function">
      <type></type>
      <name>MarkerSetting</name>
      <anchorfile>structtracktion__engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a6b5c07e4f1d8ac3ee71a676517a853e9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1MarkerSetting.html</anchorfile>
      <anchor>abc92c7484e966c2ceec54166c227b6d7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>label</name>
      <anchorfile>structtracktion__engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a29d9521d96700a14facc20b82ec97d2e</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>number</name>
      <anchorfile>structtracktion__engine_1_1MarkerSetting.html</anchorfile>
      <anchor>ab28807024f300cf6a7fa33657b0ef604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>absolute</name>
      <anchorfile>structtracktion__engine_1_1MarkerSetting.html</anchorfile>
      <anchor>ad2da8d744d8fc3c5e359eb961407396a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MarkerTrack</name>
    <filename>classtracktion__engine_1_1MarkerTrack.html</filename>
    <base>tracktion_engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>MarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a260b0b49ca160fa6dfecfbab95425634</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a336019bfc7d60f4f6f89a84ca9f7a0cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>adada9604238cc90d6bc3b206d18893e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>ae6d7da543e6c8495dd9c8ea7650775ee</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a1ba2e776dc5854ad881a4b59a093033d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1MarkerTrack.html</anchorfile>
      <anchor>ae2a3e4b3c28e7c9b48aab7b440e4a947</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MasterTrack</name>
    <filename>classtracktion__engine_1_1MasterTrack.html</filename>
    <base>tracktion_engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MasterTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a81f9c42255f789b9513f1c858d7ce0d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MasterTrack</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a8006f3af209d86ce8f578ffa1819c1af</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MasterTrack</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>af6e6ac162a976d3f46d0f05c6ac0d82a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>ad16b5459701f97828c701e161efd95ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterTrack</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a1402d23d8610ce40099cb2ce0dcf7006</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a33c54388da451bb3ef4ef272d5498fdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a03bff7d0590e4e57ddf8aaacd48854d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1MasterTrack.html</anchorfile>
      <anchor>a6430d66af89e5393cf80aed1364ee91e</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MelodyneFileReader</name>
    <filename>classtracktion__engine_1_1MelodyneFileReader.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MelodyneFileReader &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a1de5e71c76dde03a2228c41cd054c35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MelodyneFileReader</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>af343441c3f64aafe3403a5768ef8c9f1</anchor>
      <arglist>(Edit &amp;, AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MelodyneFileReader</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a9d3154b27d02ec4531c6a88c7a4942df</anchor>
      <arglist>(Edit &amp;, AudioClipBase &amp;, MelodyneFileReader &amp;oneToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MelodyneFileReader</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a5bd66b3cbbc48669dfb18797eda42b8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a716a3b6e26e66a72a38cf0e1998e62b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ExternalPlugin *</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a865856fcd42f48cfb0dd8dc36172ef9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showPluginWindow</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>ab2ce9e4cb7714bccae16b2155b6716bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hidePluginWindow</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a59cf53bf1ab9546b8769dc68c41a0ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAnalysingContent</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a2208aa9c7beb8fe5a86df595a0aaa7e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessageSequence</type>
      <name>getAnalysedMIDISequence</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a2a64b21997d6f7ed92defe1056d54025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceClipChanged</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a9c39682d3c3faacd91b1c657d1cd124b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cleanUpOnShutdown</name>
      <anchorfile>classtracktion__engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>ac54d3238aa71b67a8947c2a24ffa9f81</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MelodyneInstance</name>
    <filename>structMelodyneInstance.html</filename>
    <member kind="variable">
      <type>ExternalPlugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>a0fecdc73dc76550cbc8dda6e05ae1a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARAFactory *</type>
      <name>factory</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>af2ef3a98d1e8183bee97f99b502ee53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARAPlugInExtensionInstance *</type>
      <name>extensionInstance</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>a35385f1d325e0cbaef0443829ff7f3b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MelodyneInstanceFactory</name>
    <filename>structMelodyneInstanceFactory.html</filename>
    <member kind="function">
      <type>ExternalPlugin::Ptr</type>
      <name>createPlugin</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a1955be4931b561db8a6f45565ac6c2a5</anchor>
      <arglist>(Edit &amp;ed)</arglist>
    </member>
    <member kind="function">
      <type>MelodyneInstance *</type>
      <name>createInstance</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a6652bcfec25bcb3643820facaa232518</anchor>
      <arglist>(ExternalPlugin &amp;p, ARADocumentControllerRef dcRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MelodyneInstanceFactory &amp;</type>
      <name>getInstance</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a10162f1ea54afe7e6eb2d42a32aaa789</anchor>
      <arglist>(Engine &amp;engine)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a49382ebdd4fdc4c3e3311130f0d86612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const ARAFactory *</type>
      <name>factory</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>adf6c1b045f7440163ea990c6f21a21eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MelodyneNode</name>
    <filename>classtracktion__engine_1_1MelodyneNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MelodyneNode</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a58f2595c6580e339c76396eb44a48ff8</anchor>
      <arglist>(AudioClipBase &amp;, tracktion_graph::PlayHead &amp;, bool isOfflineRender)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MelodyneNode</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a205eb922dc55b43c57009e905057479b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>ac6f1f2f3640dbf30aec7998621b4f491</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a45a9321afd6c6f65d197e40740fb0ed6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a5bd5f5e985eb3cdae09172b68cb13129</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a7e5ed4c9e2e637369f20944f444b6792</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MelodyneNode.html</anchorfile>
      <anchor>afa155fd745d446404dafc9ae92c5df25</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MessageThreadCallback</name>
    <filename>classtracktion__engine_1_1MessageThreadCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>MessageThreadCallback</name>
      <anchorfile>classtracktion__engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>ae8a14b4925d22aff3bd5c88ec1b83ce8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MessageThreadCallback</name>
      <anchorfile>classtracktion__engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>ad2c0ba99c31981d73df62515bf0f7de9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFinished</name>
      <anchorfile>classtracktion__engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a9fc9df40fa3f7131d999208ff69a1a41</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerAndWaitForCallback</name>
      <anchorfile>classtracktion__engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a9e9c96f2aa1d5f1b785ff83009dd7b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>performAction</name>
      <anchorfile>classtracktion__engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a1cc28e8c9484a261121ff2e26077a15f</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::Metadata</name>
    <filename>structtracktion__engine_1_1Edit_1_1Metadata.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>artist</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a87f7146756f211fb70cda99c81032b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>title</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>aacd0483d99a11337bff30ba82979a20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>album</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a2e50f652274d03fd46464245325dc6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>date</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>af863db35be331ee233b39d732a3aee28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>genre</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>aeeb8d62448fee3bd281c6d8d6ade513c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>comment</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>ab7eac8ea133d445b4e6370ad171e00d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>trackNumber</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>ac2687a8d28a63789bab5791794dc58dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiAssignable</name>
    <filename>classtracktion__engine_1_1MidiAssignable.html</filename>
    <class kind="struct">tracktion_engine::MidiAssignable::Assignment</class>
    <member kind="function">
      <type></type>
      <name>MidiAssignable</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>aa0fb30fb2be3fbd487a791559fd67d81</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MidiAssignable</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>aca3af869a62f6b0e3ce75e8b6fa61cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAssignent</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>aa093196384544cb659826f6268806378</anchor>
      <arglist>(Assignment)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Assignment &gt; &amp;</type>
      <name>getAssignments</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>afd6e7a3472c60fa637fca5ae4a00ba38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingleAssignment</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a4e3d83c6930789b4a23beed7ae3442ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildMenu</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>ae14b160a7d1e21c9d78f3488634d1209</anchor>
      <arglist>(juce::PopupMenu &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMenuResult</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a66f3446be1c03f79026e34f9e24fd1dc</anchor>
      <arglist>(int menuResult)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderIndex</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a4a0b4580e1a069fe729a68f234d38687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAssignable</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>acb230e38f2b624737a418d8afd8287ef</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>acb77774c11ef8c86c845b78895558ee9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Track::Ptr</type>
      <name>getControlledTrack</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a3943571a9d6cb37b0525cd0a3fd4eb1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1MidiAssignable.html</anchorfile>
      <anchor>acb7097ce52b642d24177600ae51001f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiProgramManager::MidiBank</name>
    <filename>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</filename>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a473f6d75e92b9206da5312276ae68eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromXml</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a3f92f3ca9d660069356325c60b2230bc</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a2433cd8ecaa83585006d6522ed068d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>aa0ac53394021ac62de6d82280a65931e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, juce::String &gt;</type>
      <name>programNames</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a3868bbb9e822b33db7ad6fdb8f802b27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiChannel</name>
    <filename>structtracktion__engine_1_1MidiChannel.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a6881a307eaed4134446be4772ca65830</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a6361b1f61d4f4d312a2697e9c6eb0997</anchor>
      <arglist>(const MidiChannel &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a433eb7f34cf450ccb04bba21fd8aa78d</anchor>
      <arglist>(const MidiChannel &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a1a8e5c906339cbf66c1935d225e64e44</anchor>
      <arglist>(int channelNumber1to16) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>ae708a93b9fde12d3698f823ce8400222</anchor>
      <arglist>(const juce::var &amp;storedChannel) noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getChannelNumber</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>aae713895c49a24dd53b91f371856bbaa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a2a4e2e150d0f6ec907c73cdcc478b5bf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a23588dd135fdaa845a540ea127ad474a</anchor>
      <arglist>(const MidiChannel &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>aa8d9e8c6cabfc1277c77e3f2f165bfe8</anchor>
      <arglist>(const MidiChannel &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator juce::var</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>ad879dcd8cdd116298706c407b43da1c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MidiChannel</type>
      <name>fromChannelOrZero</name>
      <anchorfile>structtracktion__engine_1_1MidiChannel.html</anchorfile>
      <anchor>a63d8f401f03c85fec17031fc30eacacb</anchor>
      <arglist>(int channel) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiClip</name>
    <filename>classtracktion__engine_1_1MidiClip.html</filename>
    <base>tracktion_engine::Clip</base>
    <class kind="struct">tracktion_engine::MidiClip::ScopedEventsList</class>
    <member kind="enumeration">
      <type></type>
      <name>LoopedSequenceType</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>abd5ed633266ab7461aa8d2431e453553</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1MidiClip.html" anchor="abd5ed633266ab7461aa8d2431e453553ad75973f0eaa6f6e708e0c4447d0267b3">loopRangeDefinesAllRepetitions</enumvalue>
      <enumvalue file="classtracktion__engine_1_1MidiClip.html" anchor="abd5ed633266ab7461aa8d2431e453553af1850633ff0d05b04b5b0d56be7d51db">loopRangeDefinesSubsequentRepetitions</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ab592218d7f15165344ea6606ba0a8b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiClip</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a74040e848f8076b92d611a615784c915</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiClip</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a95991f4e86729d527698a6f36c7745e4</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiClip</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a9495cda202831e1e42a128d359815b75</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a0cf18b6a0d7f6606fb1afff1d0e645bc</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getAudioTrack</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a0f94d6d5ca265c6f4636363eec348555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiList &amp;</type>
      <name>getSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a0f3b7c6889007fadece05c89afad9df3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiList &amp;</type>
      <name>getSequenceLooped</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a26b6a40eeb6516e3bc46454ce8cc2fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; MidiList &gt;</type>
      <name>createSequenceLooped</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a685a5a07b0926a97d4a7835dc6e8fc31</anchor>
      <arglist>(MidiList &amp;sourceSequence)</arglist>
    </member>
    <member kind="function">
      <type>const SelectedMidiEvents *</type>
      <name>getSelectedEvents</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a378015801ebca6e4e8d2b658bcc7bc1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleVerticallyToFit</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a66ecbc05a3920f6a8e84c01ec6e72513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValidSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aafbee02fa109253d6e53c35da4070b31</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ad3b184037b6003d644fbc7d8de477d38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>abe448e58184ecef71a795ebb0c9d49d8</anchor>
      <arglist>(MidiChannel newChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPEMode</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a42d0d5b92363a65027d708185036023d</anchor>
      <arglist>(bool shouldUseMPE)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMPEMode</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a9c5082636d3f539ca4c44a29be29a200</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRhythm</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>afc948cf67b219e8f119e6686e918f1e4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>QuantisationType &amp;</type>
      <name>getQuantisation</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a8c931386c5257ed11a80c80af382c5cb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuantisation</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a64931ccbdd1224154b88d46bc4141e1b</anchor>
      <arglist>(const QuantisationType &amp;newType)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getGrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a92d116f2f8c5c81196a39ff6974c702d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGrooveTemplate</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ac73a8f4a8be0830d761a9bf9ed25e8c1</anchor>
      <arglist>(const juce::String &amp;templateName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGrooveStrength</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>af2b0b73c87210557fb82071dc8e32bd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGrooveStrength</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>acbd13b946986c93b0e96182eeb3fea16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGrooveStrength</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a4fe8f88cea28f025dfd1e7e52f0d20e8</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a13e6b7a0e2706f5fc058de57b27c31d7</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a8dedafae55b00e64b385ce5fbf61a422</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extendStart</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a26b170d29d27db2d68646256f31cb579</anchor>
      <arglist>(double newStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimBeyondEnds</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a81d9dfef66a1c9634372a0ee13f7d567</anchor>
      <arglist>(bool beyondStart, bool beyondEnd, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>legatoNote</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aa104de1d62f00f67e135a2faf044b62b</anchor>
      <arglist>(MidiNote &amp;note, const juce::Array&lt; MidiNote * &gt; &amp;notesToUse, double maxEndBeat, juce::UndoManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aa960d817de03b4f63e0734bfa64f2ac3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a0588086a4a3cb86360af01a2e64a0a24</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingBankChanges</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a8156e3f00da9a1f8a426ea109dd06252</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingBankChanges</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aeb7d935045426b23695145cfda29f220</anchor>
      <arglist>(bool sendBank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a3ea30e31004730609db3ff1af5ac0495</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a6296567bad57c102dd6e4f117c104f2b</anchor>
      <arglist>(bool m) override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a99396162f15b02fd60310d9827caa754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a6cae30b780f5c0c58688b6272ba2fbcb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a55042e535b53e90ccbd8ebfa10dc4ce7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescale</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a471c65f11a8f62b63f8a12a494eaef51</anchor>
      <arglist>(double pivotTimeInEdit, double factor) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a4f014bfdb2376abdb4dd206b432cb518</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a34721aca4286006b2443329a96f80303</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>adca037e7f2bcda200c5d60a882aa0818</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a44327fd7f493b78a08e18259646a220c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>af58cd5b3273c10a22160dcd59371c504</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a47d8a740063860de58237c6d97c927f6</anchor>
      <arglist>(bool includeComps) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aa06d637969ab949b4dd52b04c472e8c3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a129f1e457f0e2ae3a4ae6f4e856793ef</anchor>
      <arglist>(int takeIndex) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a6fca5e3061ae2c6d864d6c2a437c16f2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a7b69b305195202f6b21d43918497f2f3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakesConfirmingWithUser</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a019a6671fe0e12bc5d8079643883d1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>aa77e2b3d527570134b0ecd99433be374</anchor>
      <arglist>(bool toNewTracks) override</arglist>
    </member>
    <member kind="function">
      <type>MidiList *</type>
      <name>getTakeSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ae7854cffc91296a512ccc9c900c08f4a</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>acd64adbdb89c79080e152afba1ae85d6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a03dd0d20fbbb646dabf3eca0c4538f7e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a3c7c04cf585c40a09a8bf1984790367e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>acb990d3f611b5179661e70a15a4aee5e</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a3ed2da2744549d6ac11029dace880c49</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>af4a60387da023d6158893dbfab366ec4</anchor>
      <arglist>(EditTimeRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a01ce85a3e75f30819de6dd82e26febe8</anchor>
      <arglist>(juce::Range&lt; double &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a3c64f46c896d833ef36cf87b0861c15e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ad86c8ec81222e6491a7f27f9883b6cb9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a2ad1d2357270257ccb87a90c4a9dc404</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a4f5b7a95bbb64631e9fb9bd0d259f58f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>MidiCompManager &amp;</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ab08d88317d72c3d39db00dda1db6b65d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a6de507e8aa4aff005d617152ce90ba7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a6362fd4729428b77a212e32f2a9f9d41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; LoopedSequenceType &gt;</type>
      <name>loopedSequenceType</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ace7b3f04c5f9d4a7f1f3ea78c336801d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a775cb2f4a1cfedc13b0e3273390cae8f</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>ab90f5e2642aaae1830282406a985252d</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a559fb22253bf707e2258444f43b641fb</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiNote</name>
      <anchorfile>classtracktion__engine_1_1MidiClip.html</anchorfile>
      <anchor>a28433d816ae9d06b4cc17e4e53840edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiCompManager</name>
    <filename>classtracktion__engine_1_1MidiCompManager.html</filename>
    <base>tracktion_engine::CompManager</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiCompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a4d219350872b0044b8f297ed028d4c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiCompManager</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a43b8c02e5306b4c7930ff12825700f39</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiCompManager</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a6e60c00f7e780ec855e8dd9f2eb91b03</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>ae43b123694540c003a542420465e9322</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>MidiList *</type>
      <name>getSequenceLooped</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a2ab05c7feb324774c95efa01d1a226aa</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>aa17d36eff3a0f30d812e11dede1dc43a</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>af511e5936f961dd6aac33656003d1dcc</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a2cb4c576a51478bdb0534a0011c9f45c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a3ec65f5e88d1ce6af82a4a5bc9f979f2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a23fea9f51da803d1cc880b2c9e690d2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a469a710500d702d509118f2aac05c10b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a8784049e958b6da1b8f39124e1c29dcf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a3a6828d17f4cad338cc00b9eb7bd2f86</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardCachedData</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>ab85c922b261c51ecc3445f7783b8e1fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a1d2cf9f8ffa3c00d7a7475a952db4c1b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a597e508bd0c894a70afbfb3535e04640</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion__engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a5394ecc4413c20e29ca46738f129f717</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiControllerEvent</name>
    <filename>classtracktion__engine_1_1MidiControllerEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ExtraControllerTypes</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>programChangeType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045af4580b2bf77a5cb815664840ecd8abf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noteVelocities</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a8ae110e333cddc8662f58cbb44becbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aftertouchType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a3b01a48891ecf49e3bc728e641159655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchWheelType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045ae715de9ae2080b0abb9b652ce82c0afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sysExType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a7db2064c44c62dfe620a9b1cbda222f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>channelPressureType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a66a571ca538e0dd0419381f9716b5491</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a7662eb9757b99cccdcbc80c8917fc215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>programChangeType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045af4580b2bf77a5cb815664840ecd8abf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noteVelocities</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a8ae110e333cddc8662f58cbb44becbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aftertouchType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a3b01a48891ecf49e3bc728e641159655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchWheelType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045ae715de9ae2080b0abb9b652ce82c0afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sysExType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a7db2064c44c62dfe620a9b1cbda222f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>channelPressureType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a66a571ca538e0dd0419381f9716b5491</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0abfb2b7706f1225e58d79751888c045a7662eb9757b99cccdcbc80c8917fc215</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a4194afc0d002c7205c4cfe81fc4d6a8c</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a96da06b80c140150f629a4ad2c4e3cc1</anchor>
      <arglist>(MidiControllerEvent &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getControllerValue</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a8d5a14f25982eda2bee8a7a324ec501c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControllerValue</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>adc4e479818b8e28acdfc7a4669ff0f16</anchor>
      <arglist>(int newValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMetadata</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a6e70e59ea62c71fc0f67043e7359f470</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>ae5b9aed65a341551f6f4c93f81c583ff</anchor>
      <arglist>(int metaValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>ae982b7d1c64497ae1b7afe1c7dcbc653</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a4fb01232cb1d3f710de56b77fd8040cb</anchor>
      <arglist>(double newBeatNumber, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEditTime</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a4d006a6e0f5ba5ff59ff9715b3d10533</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLevelDescription</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a9d4dc6ec1aca4798d3f1135c62bf54d3</anchor>
      <arglist>(MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a38047481f32e513344aa293ba221f562</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a4266114f25f48b84232d4f87d8f5d12b</anchor>
      <arglist>(int type, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>aa7fefacfe302af180d728ee8a86157bb</anchor>
      <arglist>(double beat, int controllerType, int controllerValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>abaec97f3a1760060d5bcd2fad0c03c08</anchor>
      <arglist>(double beat, int controllerType, int controllerValue, int metadata)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a68845b506a34fd63d9091bfbf0f6bf19</anchor>
      <arglist>(const MidiControllerEvent &amp;, double beat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getControllerDefautValue</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>abbe97a59f28f61373fbec54ce8ab1907</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getControllerTypeName</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a900f7f78574d57acd9c25e43e021b3fc</anchor>
      <arglist>(int type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>bankIDToCoarse</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a283299fa30fcb1f93a5d8ea0987568ea</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>bankIDToFine</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a85dea5931d94ad258c4ef5cceab56ce3</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>aa5a4e2cd24d8693615bf161647c55f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::MIDIEvents</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>MIDIEvents</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a03c22982c4b716771f9596125d549f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MIDIEvents</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a8a27cf36e92119665b0b73ec7c22490b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::Array&lt; MidiNote * &gt;, juce::Array&lt; MidiControllerEvent * &gt; &gt;</type>
      <name>pasteIntoClip</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>aba9167455d6a69b286cb27645f861ca0</anchor>
      <arglist>(MidiClip &amp;, const juce::Array&lt; MidiNote * &gt; &amp;selectedNotes, const juce::Array&lt; MidiControllerEvent * &gt; &amp;selectedEvents, double cursorPosition, const std::function&lt; double(double)&gt; &amp;snapBeat, int destController) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>add42c8b36b08789a9d2ff5a1e321abf7</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>notes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a13d94352c1088230f2ff59110862e654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>controllers</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a75f9f4babc1d34d3b5d385ddfe0a1933</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiExpression</name>
    <filename>structtracktion__engine_1_1MidiExpression.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiExpression</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a566bbc88d9c4fd189a217a27f9827638</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatPosition</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>ac12b740b12c2612caaee46bb005ca6c7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>afd2cd80177d685f7fc395fd2e5d8b8fb</anchor>
      <arglist>(double newBeat, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValue</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a31c345b6c9f6c437ba9d33e69a5bc111</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>aba8184d21460aeea56bdcfba6108b7e3</anchor>
      <arglist>(float newValue, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>noteHasExpression</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a9f07586844ec15804f6687b6981619c8</anchor>
      <arglist>(const juce::ValueTree &amp;noteState) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>noteHasExpression</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a87dc4f91118643572e028c832f584a1f</anchor>
      <arglist>(const juce::ValueTree &amp;noteState, const juce::Identifier &amp;type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>listHasExpression</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a6a1bff1f0bdb13d2f2e79aeec5e0076c</anchor>
      <arglist>(const MidiList &amp;midiList) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isExpression</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a8dbcb65af7623704b37f28a5cf0ac945</anchor>
      <arglist>(const juce::Identifier &amp;type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createAndAddExpressionToNote</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a9ca1cb30669b5a345454b69460f19cae</anchor>
      <arglist>(juce::ValueTree &amp;noteState, const juce::Identifier &amp;expressionType, double beat, float value, juce::UndoManager *um)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1MidiExpression.html</anchorfile>
      <anchor>a406bfa5cd563508d1d2ae3037ee36ae9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiInputDevice</name>
    <filename>classtracktion__engine_1_1MidiInputDevice.html</filename>
    <base>tracktion_engine::InputDevice</base>
    <class kind="struct">tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher</class>
    <member kind="enumeration">
      <type></type>
      <name>MergeMode</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aea8b5a0f437a390621e3b0cd9991e6f4</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1MidiInputDevice.html" anchor="aea8b5a0f437a390621e3b0cd9991e6f4af9f90eeaf400d228facde6bc48da5cfb">always</enumvalue>
      <enumvalue file="classtracktion__engine_1_1MidiInputDevice.html" anchor="aea8b5a0f437a390621e3b0cd9991e6f4ac7561db7a418dd39b2201dfe110ab4a4">never</enumvalue>
      <enumvalue file="classtracktion__engine_1_1MidiInputDevice.html" anchor="aea8b5a0f437a390621e3b0cd9991e6f4ad57c24f3fe52d16e7169b912dd647f0d">optional</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0b74909f73670f783dac1208c824f3a6</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;type, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8296370665ae414f01bef6b5fff65a7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aaae2b27980d97b777fabc9e9d11a50fc</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae4a0fa3490898c0797c0c144a4128ded</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getChannelToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8bcda8d72ecb84e284c4b478dd836967</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannelToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a95e3854572b63300968538eb52b01480</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProgramToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab28c4b87c9d35c7a6d52f3ea927a3315</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgramToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a042e24639d0378bca2f0ee625f3df386</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad67baa86030aae0084f803ccbebf3a95</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0ab503d09130e30f407c0691c5f6e7d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannelAllowed</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac54060b202fce58a6314d0474da6721d</anchor>
      <arglist>(int midiChannel, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChannelAllowed</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a1750fbb73b96e77a9033f96185fbc17e</anchor>
      <arglist>(int midiChannel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndToEndEnabled</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a55b2e3431e043a1812c7d3f7b8c3ec56</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEndToEndEnabled</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8660a334cbfc01fd36ea63808431e92e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverridingNoteVelocities</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a36cbe378c289fdb2d0cef3a4ef9c4a0c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOverridingNoteVelocities</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0b4ccee94e28c6022032239890d7a7b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManualAdjustmentMs</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad1f513de7dba93c450bae7aa40c5fbf1</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getManualAdjustmentMs</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac1cb93e4db8b4ed6caee0e02889775d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMPEDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af412646294454e429a8c25e575cba645</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipEndToEnd</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a50ff2d74523d82486ed57ffc926f38b1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae153416cfe5801e0338bdcc073634480</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionStateChanged</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a689120025c6fa67eb3df2fdcfcf619ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab5783111d7ce40784c6910721d35b53b</anchor>
      <arglist>(MidiInputDeviceInstanceBase *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a3854285600f458855a49ba5769c3fbe8</anchor>
      <arglist>(MidiInputDeviceInstanceBase *)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a2a15bfeec5e53901fd59d5bba2e1433c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0679bea577caec5ffda52afff6f230d0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>addMidiToTrackAsTransaction</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a3ea2da4825c56321304e8b342813dfa6</anchor>
      <arglist>(Clip *takeClip, AudioTrack &amp;, juce::MidiMessageSequence &amp;, EditTimeRange position, MergeMode, MidiChannel, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8fa8b58066791fe3c480312df275142c</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa717d86cb51f2748c8d14e01d1808cc9</anchor>
      <arglist>(const juce::MidiMessage &amp;)=0</arglist>
    </member>
    <member kind="function">
      <type>RetrospectiveMidiBuffer *</type>
      <name>getRetrospectiveMidiBuffer</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a5daac86574c6f511da55017e7772fd33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a1d60217c479275f87f62430868e8ab22</anchor>
      <arglist>(double length) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAdjustSecs</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae4040633d87707f8546d273e951c44f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getDestinationTracks</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad0a0caf6b7ace2dcd14f44172a2a7bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannelFor</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa7a644c1068e07a3d2872e66c32cafc5</anchor>
      <arglist>(int rawChannelNumber) const</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageArray::MPESourceID</type>
      <name>getMPESourceID</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>acb88646a90fec3d06176d279b169dcbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mergeRecordings</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a79083b700895f80fef442245d732caa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>recordingEnabled</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a03169ba2a7b5033a6aece8c7e9cef775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>replaceExistingClips</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>acefb547c90ced794d4b526aecfd8e32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>livePlayOver</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a02e2f61172ecfb2840a718255e2613df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>recordToNoteAutomation</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a4c718315e5e5c5187d048f31d9c6ba83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QuantisationType</type>
      <name>quantisation</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0fd4ead06c6c8f21baabde180e395c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MidiKeyboardState</type>
      <name>keyboardState</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab2660cedeaeb07907f6495c6f4d7e27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleNoteOn</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a97f1a4fed25bbc8a227ed1548a9be3c9</anchor>
      <arglist>(juce::MidiKeyboardState *, int midiChannel, int midiNoteNumber, float velocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleNoteOff</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a97a11dd7882a0dd3151d8d5b4fce1dfb</anchor>
      <arglist>(juce::MidiKeyboardState *, int midiChannel, int midiNoteNumber, float velocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a6327646db8c704fcce938d4e75ef7471</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendNoteOnToMidiKeyListeners</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a864873bdfef12e7241df785524c88373</anchor>
      <arglist>(juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a173dd41f88e99d2f36594b62767cac40</anchor>
      <arglist>(const juce::XmlElement *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab9f604fc00015766ef8f2b1ad4894022</anchor>
      <arglist>(juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendMessageToInstances</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a012364e413ff63d585ffd230cb573118</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a9c7315cc1be58a44e89547a71bfa431c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a4fbada473308573877191095bdd1a5c0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; double &gt;</type>
      <name>adjustSecs</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a305a3d2dcef14b6b0bfe2fee698ef7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>manualAdjustMs</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab2999914e1e7f7d9bcc98a4bd2d48c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>overrideNoteVels</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8f2a7bba11f8a8656fa5c876bda9f19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eventReceivedFromDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a656a273b873c52482ba9f258eb723c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>disallowedChannels</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a56f6493788f13a21f086d2faa1f615a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiChannel</type>
      <name>channelToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab784fa061a700cc03bc4a3274ca62527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>programToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a30c85889d0dd04ce26c728bf7a231d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>firstSetEnabledCall</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a7e038e48dfc3c48b5946c2f44ddbd65b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>bankToUse</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a2b25bb1cc4acd23bf593674a53537725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiMessageArray::MPESourceID</type>
      <name>midiSourceID</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0e67467bf3b34b09667f4d61221267fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>noteLock</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>acae2176cb863503bcf6c125721f34e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>keysDown</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab510f68af378183c6f6de0d8a20e4df9</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>keysUp</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>afdeaafdfa342a6c6856cc2a9b5b3bc1b</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>keyDownVelocities</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a175b39cdf0ee9701aea5add53b436555</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::SharedResourcePointer&lt; MidiKeyChangeDispatcher &gt;</type>
      <name>midiKeyChangeDispatcher</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa9927bb86543d6715818e0bfaee14484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>instanceLock</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a5ea224510e99092558bed27ec48aeeca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; MidiInputDeviceInstanceBase * &gt;</type>
      <name>instances</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa2d7478ffb8634ee9de779c78ebdc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; RetrospectiveMidiBuffer &gt;</type>
      <name>retrospectiveBuffer</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad424cf35f17675ae1321e2027a0ab8c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::MidiInputDeviceDestination</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1MidiInputDeviceDestination.html</filename>
    <base>tracktion_engine::InputDeviceInstance::InputDeviceDestination</base>
    <member kind="function">
      <type></type>
      <name>MidiInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1MidiInputDeviceDestination.html</anchorfile>
      <anchor>a4d9253280bb5500ce17a69fa1aca858d</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1MidiInputDeviceDestination.html</anchorfile>
      <anchor>a0f8bf065b0d4d6912064a7e383afbe20</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiInputDeviceNode</name>
    <filename>classtracktion__engine_1_1MidiInputDeviceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::InputDeviceInstance::Consumer</base>
    <member kind="function">
      <type></type>
      <name>MidiInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a17032a606286d7ddb5035c9efba4a17b</anchor>
      <arglist>(InputDeviceInstance &amp;, MidiInputDevice &amp;, MidiMessageArray::MPESourceID, tracktion_graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>abb0a3d8f9029ff5d1a7270b003cb4f9a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>ab1ca055a1418201654fe3b6696e389c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a8eca49daeb8b072e45d15110756e8db3</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a5e4f2d7a395deab008eb62d4293594db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a2d37e7b445d6bd487e923cc339ba9d7a</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>acb4b6dae7b2403b5939d834c4cb728e1</anchor>
      <arglist>(const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardRecordings</name>
      <anchorfile>classtracktion__engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a6d30702dc5a1166f612a160a99021e40</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher</name>
    <filename>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</filename>
    <class kind="struct">tracktion_engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</class>
    <member kind="variable">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</anchorfile>
      <anchor>a8b7726c5c33da6692266b7c57b6a80c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>juce::SharedResourcePointer&lt; MidiKeyChangeDispatcher &gt;</name>
      <anchorfile>structtracktion__engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</anchorfile>
      <anchor>a7e35dc50d90e29ac89a752f1a053be8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiLearnState</name>
    <filename>classtracktion__engine_1_1MidiLearnState.html</filename>
    <class kind="struct">tracktion_engine::MidiLearnState::Listener</class>
    <class kind="struct">tracktion_engine::MidiLearnState::ScopedChangeCaller</class>
    <member kind="enumeration">
      <type></type>
      <name>ChangeType</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a273c4093918a3e6aefdf2d2869ebed3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>added</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a273c4093918a3e6aefdf2d2869ebed3fafde4124c8cec0d983a75576a98c29579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>removed</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a273c4093918a3e6aefdf2d2869ebed3fa8045a966e7645c85cc589d0e8082b10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>added</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a273c4093918a3e6aefdf2d2869ebed3fafde4124c8cec0d983a75576a98c29579</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>removed</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a273c4093918a3e6aefdf2d2869ebed3fa8045a966e7645c85cc589d0e8082b10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiLearnState</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a172e276865878493b47495741df88ce6</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiLearnState</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a87aac8d3db7e94ece0dc4bfc03d6b6d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>afd4419cac4dea57dfa908f5c9a8b34f8</anchor>
      <arglist>(bool shouldBeActive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ab900465944be5305c9d5ab52021f471f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignmentChanged</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ad7944bfeda1c2e425a8554d65c2cc605</anchor>
      <arglist>(ChangeType t)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a75e6164c73afd0f9eaadd6bddc1c69f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiList</name>
    <filename>classtracktion__engine_1_1MidiList.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NoteAutomationType</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a7d84a1321e0bb5af59aa2d429cb2cf20</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1MidiList.html" anchor="a7d84a1321e0bb5af59aa2d429cb2cf20a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion__engine_1_1MidiList.html" anchor="a7d84a1321e0bb5af59aa2d429cb2cf20a63973cd3ad7ccf2c8d5dce94b215f683">expression</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad3c7c4f8512e41ba41dad2b8fcfca626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ae1854d96b2e3e9ad4cfac3e7418c0826</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a0e4fd31a09c03122acd7d6670843af67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ae92e9a401ef73b16e3f65c6a72d0ed96</anchor>
      <arglist>(const MidiList &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFrom</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a95bf18257b4d5009b785a96e9479ae8c</anchor>
      <arglist>(const MidiList &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiNote * &gt; &amp;</type>
      <name>getNotes</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a0dc277d2c4d67bcb84805fcf337c2f05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiControllerEvent * &gt; &amp;</type>
      <name>getControllerEvents</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a64adca83017caf6a2cbcb2c07ea755b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiSysexEvent * &gt; &amp;</type>
      <name>getSysexEvents</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a563df3e9f6387e0859f8ff9203918b2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToClip</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a32b8761ad10a465dea118886fb183f2e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a501247f6ca36d07a3ab95c61f951e239</anchor>
      <arglist>(bool shouldBeComp) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a010844c0f3791648886f012a6f1b89bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a92e66d167e37bccd756e9d8cc34201ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a3da353c8580a96c9f23af921522f3037</anchor>
      <arglist>(MidiChannel chanNum)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getImportedMidiTrackName</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>af07f1e41d03e2a40849241f45fe1d3f6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a7a25f5c4240e985d2d50970e3c70f06e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a58a71bd10a0397dede9f7a682f701ed2</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimOutside</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a658ab0efc92400b8fad7bd407a9a7ca0</anchor>
      <arglist>(double firstBeat, double lastBeat, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAllBeatPositions</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a02af9302e94e78e5321126390135a594</anchor>
      <arglist>(double deltaBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescale</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>afe6e8936bcae0bc56b49d67baf65e326</anchor>
      <arglist>(double factor, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a02cf76017e8430fda8fb266fcb046509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>getNote</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ab40489d1d763332b236089a813e85ffb</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>getNoteFor</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>afe1bc1750cff7e71ef6ed07b445c82ac</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getNoteNumberRange</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a43a1985d504c119621e96c52278fd5c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFirstBeatNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>af4d7a9dfc3423b555b11950a160c2537</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLastBeatNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a69cffdb62d582bea52e88d51384af082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>addNote</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>adf8093aaf0d212877e4b33041af442af</anchor>
      <arglist>(const MidiNote &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>addNote</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a49a6a55f38a9849f17d3668fe2b056d1</anchor>
      <arglist>(int pitch, double startBeat, double lengthInBeats, int velocity, int colourIndex, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNote</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a139dc3e2de169984fdb23bf28c6f2e26</anchor>
      <arglist>(MidiNote &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllNotes</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad15434a84fac05b35dc1be80f31aa929</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumControllerEvents</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ac35228d46f0db665225d7bb75f770287</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>getControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>afaa297d9523fe7e8337708cb87ff1809</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>getControllerEventAt</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad8f9a914476d9a47f9946a35b1f47567</anchor>
      <arglist>(double beatNumber, int controllerType) const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a91748255526ee83874c15d48032a5182</anchor>
      <arglist>(const MidiControllerEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a3810a798fe7ebd8c0876f2490d8270a4</anchor>
      <arglist>(double beat, int controllerType, int controllerValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a8e0a3838976ad297d3b8eb6369aaba04</anchor>
      <arglist>(double beat, int controllerType, int controllerValue, int metadata, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeControllerEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a72590094d88db2dab79278d1c5b0641e</anchor>
      <arglist>(MidiControllerEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllControllers</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a3ab720e89987b7dbf38b1e1e768b8c68</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsController</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a10f537d201bd414ad3fff28a97f659b0</anchor>
      <arglist>(int controllerType) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControllerValueAt</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad79eb449c29d242ac295072c77813cf0</anchor>
      <arglist>(int controllerType, double beatNumber, int newValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeControllersBetween</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad65f44ebcf3d83e34b28276c743f3fb5</anchor>
      <arglist>(int controllerType, double beatNumberStart, double beatNumberEnd, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRepeatedControllerValue</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a8f93f432bd91aa9ee7541872f30526a3</anchor>
      <arglist>(int type, int startVal, int endVal, juce::Range&lt; double &gt; rangeBeats, double intervalBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSysExEvents</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ac10b489eac3f8313900fdc27f9f8d152</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a826fec071b88dfce5a568b0f97f62b07</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEventUnchecked</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ae1fbb83a1f0547b30bd537346f11d659</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEventFor</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a8b4f03c5a152d58537d04319f214e199</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent &amp;</type>
      <name>addSysExEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a7bebe1bb8ae7e89b65103584bf4a908a</anchor>
      <arglist>(const juce::MidiMessage &amp;, double beatNumber, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSysExEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a473085d3cac68ccb33885fe92e60dbc5</anchor>
      <arglist>(const MidiSysexEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllSysexes</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>ad953c3145176899d2e5b53c799787276</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>af90fca28e2fe04fd6763577b095243ac</anchor>
      <arglist>(const juce::MidiMessageSequence &amp;, Edit *, double editTimeOfListTimeZero, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importFromEditTimeSequenceWithNoteExpression</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a9bf92d368516c7c07e722e2e9eb60f73</anchor>
      <arglist>(const juce::MidiMessageSequence &amp;, Edit *, double editTimeOfListTimeZero, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportToPlaybackMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a55b1e2127d20ac4bd07de1aa59088822</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, MidiClip &amp;, bool generateMPE) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createMidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a246cccb7edf21345bcf97af349d3ecf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::MidiMessageSequence</type>
      <name>createDefaultPlaybackMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a6a9f225ba954ea00096b010da76916e9</anchor>
      <arglist>(const MidiList &amp;, MidiClip &amp;, bool generateMPE)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>looksLikeMPEData</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a948eb56b9502f8a3c358deb82cc90da3</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fileHasTempoChanges</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a6ba72099a7f68906896ce019ae8afde4</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readSeparateTracksFromFile</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a05b4e23261cdb8e203fe53824d9571c5</anchor>
      <arglist>(const juce::File &amp;, juce::OwnedArray&lt; MidiList &gt; &amp;lists, juce::Array&lt; double &gt; &amp;tempoChangeBeatNumbers, juce::Array&lt; double &gt; &amp;bpms, juce::Array&lt; int &gt; &amp;numerators, juce::Array&lt; int &gt; &amp;denominators, double &amp;songLength, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortMidiEventsByTime</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>af2d95fad18e40e54bd2c4004a4201721</anchor>
      <arglist>(juce::Array&lt; Type &gt; &amp;notes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortMidiEventsByNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>abafaabbf8e79117a1d8b90e0b82cc232</anchor>
      <arglist>(juce::Array&lt; Type &gt; &amp;notes)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a5cdb092190803590e969a4b05d73dba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialTimbreValue</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>aa248be9e86468ef9fd7574c1fd7ec6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialPitchBendValue</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a43e4e898b2427e9934539723512aaca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialPressureValue</name>
      <anchorfile>classtracktion__engine_1_1MidiList.html</anchorfile>
      <anchor>a096eeb57f19371e7c4e04045bf498107</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiMessageArray</name>
    <filename>structtracktion__engine_1_1MidiMessageArray.html</filename>
    <class kind="struct">tracktion_engine::MidiMessageArray::MidiMessageWithSource</class>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MPESourceID</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ac9cbb3e80daa08e67ddd980ccc8b6a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a88566b8297ca8d03ea77001a4b208ed9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNotEmpty</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a37f5f72ac949a1d9b9cde60fe5a37247</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a8709c292b76507f773e518c8f7f9298a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator[]</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a6e5050e0108becb11a5b99af25fc67fc</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource &amp;</type>
      <name>operator[]</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a9898eaadfd6489de52253617a0e5c937</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource *</type>
      <name>begin</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a1024c02d65ba21658fbb5fb20dd220ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource *</type>
      <name>begin</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>abea77afa3f7718deedc55e9150ae07cf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource *</type>
      <name>end</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ad63b741c93f4e50193d4078c0dbce268</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource *</type>
      <name>end</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a4c8299101fbd69a4283d739f8592180b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a1d7434102b231b6f6e40e1d4dcf43851</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapWith</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a54976a136258b116796891d3f7fddeb8</anchor>
      <arglist>(MidiMessageArray &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>af9157eb40473a2ccb968659f1d0b8fbb</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aa5c1d3367cc18f3894dbd9463476916b</anchor>
      <arglist>(const juce::MidiMessage &amp;m, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a6d40780e8c28b023ece9af0d20f6d9c1</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae6bcb2ea5fb2a83e7dfdd55aa44d9e89</anchor>
      <arglist>(const juce::MidiMessage &amp;m, double time, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a37a4abb69dcd9f96c01ead82e6ab6ab4</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, double time, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a2e6f939c92348a29e0b3ca16e1dc2fc1</anchor>
      <arglist>(const MidiMessageWithSource &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae84acbd989d3790cc699a065884b715d</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a9ab841df366a5bd788f79a04c0e7415d</anchor>
      <arglist>(const MidiMessageWithSource &amp;m, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a82790d9713f4ac0fc51545ffb955f7f8</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;m, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>abb80ec7120d77c756a6e83c85a86bcf2</anchor>
      <arglist>(const MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFrom</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aa65f67dacc66363b35af13bbcaf884ef</anchor>
      <arglist>(const MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromWithOffset</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a39cba3ab7fd6b68a84d239767909f2d6</anchor>
      <arglist>(const MidiMessageArray &amp;source, double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClear</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aa89114f43e8a80000b458032da07acea</anchor>
      <arglist>(MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClearWithOffset</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>abccc5199e4de82ab8847196176a5a348</anchor>
      <arglist>(MidiMessageArray &amp;source, double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClearWithOffsetAndLimit</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ac7dce18a0291613c19e48ce4ff9b7803</anchor>
      <arglist>(MidiMessageArray &amp;source, double delta, int numItemsToTake)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClear</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aecd3d33d1f5645d7824e7934f7702402</anchor>
      <arglist>(juce::Array&lt; juce::MidiMessage &gt; &amp;source, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNoteOnsAndOffs</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a3018274a8c2c5f392453eb9c63942a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToTimestamps</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>af59f3347f729969b1b1935ae027da9ec</anchor>
      <arglist>(double delta) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToNoteNumbers</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ade87c109a1d229910013598b5f16ca09</anchor>
      <arglist>(int delta) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyVelocities</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a91cb9d1a259b42b874f6d914685cd449</anchor>
      <arglist>(float factor) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortByTimestamp</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>adc2f0f0f92d3051a8123b932deebfdb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a32bf0da09def8db982da825b10ca4bf8</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MPESourceID</type>
      <name>createUniqueMPESourceID</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a17616c8cbdad65cb4c675bc5938e469c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isAllNotesOff</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae22b487f4f5ac761fa072faa02361344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr MPESourceID</type>
      <name>notMPE</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a90788d5859452caceca65788eebc82b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiMessageArray::MidiMessageWithSource</name>
    <filename>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>aeef9d37a66b1903db4f9c2732b20a3dd</anchor>
      <arglist>(const juce::MidiMessage &amp;m, MPESourceID source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a62f16a7acaafa7576dcd35b82815f20a</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, MPESourceID source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a184942804a1febcd1e0782a3054ebada</anchor>
      <arglist>(const MidiMessageWithSource &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a59ee61f78ee25d9f31e10d36b7079f51</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a15dfb4b757b7d0b6a03f922ba88be1ef</anchor>
      <arglist>(const MidiMessageWithSource &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a5af7eec044128b19e7f584d4a082d89f</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>MPESourceID</type>
      <name>mpeSourceID</name>
      <anchorfile>structtracktion__engine_1_1MidiMessageArray_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a832873a7364769fc223fb282da941f57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiModifierPlugin</name>
    <filename>classtracktion__engine_1_1MidiModifierPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>MidiModifierPlugin</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a425ed4ac7220542f54f99e1bdbaf1d40</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiModifierPlugin</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a0bb376f6d69dda315aefad5c3d6081e7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a373208f712ce9fb5c2679b1d74462a84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a5db631616205845497cdf2b1e9046578</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a609f146f2a1e80691841bd43df1a7901</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a7af9c8ad36c2aa8161e90fce69b39fb3</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a9a4253f14afad2c2d2e37059b9e83ad1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aeabcc3b9873bbf1bd862c29f2f4f2d82</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aa4b0bfee94936ca028cc5ca33cf6676e</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>ab9225d5fc9eedad3188f2ea606a2ef2c</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a5c2e2545a2e6299bcab84dc2ecf74270</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a1cc4dde0d13a24c4c5c6cd0409f13072</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a59d90798b39b70609489d64e2187854b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a5e445abb8190fc336e1daf93f51bb1e1</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a7bd426e8fd03e5816e07328c7e885770</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a63236282eeb9d5528ed6e3bfef1bc4b0</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaximumSemitones</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a989d33b37ee6f26a1b08481d7498f309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a28ed89b921d2334bfab510d8bcd9344a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>semitonesValue</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>acc907f06914d9fb83f064d753b06639b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>semitones</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aac1848cf5fa91a27614e2cb7c2b76a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a01dd58774e6ba18f9fec7e85dd39213a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiNode</name>
    <filename>classtracktion__engine_1_1MidiNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>MidiNode</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>a6b7511e1fd230fa3369facfb3ef5b826</anchor>
      <arglist>(juce::MidiMessageSequence sequence, juce::Range&lt; int &gt; midiChannelNumbers, bool useMPE, EditTimeRange editSection, LiveClipLevel, ProcessState &amp;, EditItemID, std::function&lt; bool()&gt; shouldBeMutedDelegate=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiNode</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>aee3484e41243330b8a238b94eace7609</anchor>
      <arglist>(std::vector&lt; juce::MidiMessageSequence &gt; sequences, juce::Range&lt; int &gt; midiChannelNumbers, bool useMPE, EditTimeRange editSection, LiveClipLevel, ProcessState &amp;, EditItemID, std::function&lt; bool()&gt; shouldBeMutedDelegate=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>ae2829ce5420b60f8112d93687f7fd99b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>aa7af54865aad021e5538aa7929e46502</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>a9ac346b06f185bdde74a19b48cf7270e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MidiNode.html</anchorfile>
      <anchor>acac8cba538f40d76a709e2a9b8a74471</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::MidiNode</name>
    <filename>classtracktion__graph_1_1MidiNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MidiNode</name>
      <anchorfile>classtracktion__graph_1_1MidiNode.html</anchorfile>
      <anchor>a79113ddabe3b18b245abc2baab7ea54c</anchor>
      <arglist>(juce::MidiMessageSequence sequenceToPlay)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1MidiNode.html</anchorfile>
      <anchor>a254f15e7c8746b7caee8737524694e4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1MidiNode.html</anchorfile>
      <anchor>a499374d5464d7cb77a95a80345a86d7a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1MidiNode.html</anchorfile>
      <anchor>aef056aa7dc77d1aa441623deb9c9143c</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1MidiNode.html</anchorfile>
      <anchor>ad907367b94144d9f1973506d6bd53225</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiNote</name>
    <filename>classtracktion__engine_1_1MidiNote.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NoteEdge</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a86e12689b955a1c0a9763d0b9969a490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>startEdge</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a86e12689b955a1c0a9763d0b9969a490ae59b2cdc4d401800ad920b27a0acf6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endEdge</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a86e12689b955a1c0a9763d0b9969a490acd424a6735ecd4ca7d56074e3b2c0418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>startEdge</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a86e12689b955a1c0a9763d0b9969a490ae59b2cdc4d401800ad920b27a0acf6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endEdge</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a86e12689b955a1c0a9763d0b9969a490acd424a6735ecd4ca7d56074e3b2c0418</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiNote</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a5fad2039bf12de34d0f9052baf6cb671</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiNote</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>add26f6bc43217dfa31bb56cce259a5c7</anchor>
      <arglist>(MidiNote &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a0a2849289aa1f59158f5e147dafbeab5</anchor>
      <arglist>(const MidiNote &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a4ab60afd3f61cc8da6a671af2e8aeb1b</anchor>
      <arglist>(const MidiNote &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>aa340c24412fe49b53205a159563bd620</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a727657ead050a4135ddbb5bd322137aa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ad0b2f0ecc61cb46c8a3975449b7061bc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a5ac187bf9944d4ceecda8b6019905c7e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; double &gt;</type>
      <name>getRangeBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a17c425e9f96bfb7999d6c6adde791d4c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPlaybackTime</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ac377b54f3de6c92afb8308ca0c4213a4</anchor>
      <arglist>(NoteEdge, const MidiClip &amp;, const GrooveTemplate *) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedStartBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a53eaf82321e6a6034cd3f612f7c69a86</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedStartBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a7ebc570f811cb0f47d13765b27261e3c</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedEndBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a117520086dea94da611a15971fccd62a</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedEndBeat</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>af9ab773628ed08d2f4aa41ef5f241a8c</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ad3b9e4bba37acb62b54d17c27df8d5a0</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getQuantisedLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a58f32a32e70ec69e370d950a66d950c2</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEditStartTime</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a081cdcadbf7a179b5781a0e08893e536</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEditEndTime</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a10adaacc1bcbec5002addea3f39a8f36</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthSeconds</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a5f1d06b4902a6afa72b88c1b26b5f8cc</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a681e19d77ee3c88d7f6b71ad1248f5a4</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartAndLength</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>af29ce5f7ee0888d61ae8d7dfe3543503</anchor>
      <arglist>(double newStartBeat, double newLengthInBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a5acccf8e3f403c538d6feab557e0b1d9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a8c1e5b07b4f2e5e77d04a634d9631f36</anchor>
      <arglist>(int newNoteNumber, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a16153022cac6615bcbf1267a35d2f5ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a8b6ce9f6845f82aa06e80d796add0976</anchor>
      <arglist>(int newVelocity, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getColour</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a4b3cbf441506b794a0bac6a252f2c775</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>aee69d3e1c3ef37071769bdb141f28f12</anchor>
      <arglist>(int newColourIndex, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ae9e7c6bb8bfca0eac845f88354b107c7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a4c2e3e6d4a0059be490e43e4112f6e99</anchor>
      <arglist>(bool shouldMute, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createNote</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ac7a851b1eab4f2ade685bbc43a288c44</anchor>
      <arglist>(const MidiNote &amp;, double newStart, double newLength)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>aeaff71e1a5fcb3f0492d1377e902ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>NoteChannelAssigner</name>
      <anchorfile>classtracktion__engine_1_1MidiNote.html</anchorfile>
      <anchor>ad82a007dc3337c6aba02037777c1f618</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiNoteDispatcher</name>
    <filename>classtracktion__engine_1_1MidiNoteDispatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiNoteDispatcher</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>aa7d19f8324c3093309a5dbae516d4f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiNoteDispatcher</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a6b1cd5f8dd41090bd1a63f0e34311d88</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiDeviceList</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a0311e2eddd72e516a72d5055659adff4</anchor>
      <arglist>(const juce::OwnedArray&lt; MidiOutputDeviceInstance &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchPendingMessagesForDevices</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a185d327801ab6a3aae2b096fbd744217</anchor>
      <arglist>(double editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>ae0d14d3ed41225a24beb2744f6ce2efe</anchor>
      <arglist>(double editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>ac16b83256f28e5d587e03c96f123895b</anchor>
      <arglist>(double editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hiResTimerCallback</name>
      <anchorfile>classtracktion__engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a85f9e70ab8db5f4ccac42fee4bc07a51</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiOutputDevice</name>
    <filename>classtracktion__engine_1_1MidiOutputDevice.html</filename>
    <base>tracktion_engine::OutputDevice</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a49486630aa50c233a57ab1177116b3f2</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, int deviceIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae2fee5ea98aed7a1703450368dd3ffba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aac2c4d4efa24e35370f07ffa2f551c28</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ab9d727ea0df533752c00e7023b5ca321</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MidiOutputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a65d3177fc663472bafc531e87d7551ed</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a16072f53a72a9a38ca4be62376d7fa3d</anchor>
      <arglist>(Edit *, double start)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a036e3e26b27a4cc4fdd2e57d57785bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a9dbecfdf03c9e5add4d2aba39668a8bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForMidiNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a969279e9d65076cb90985dc89f23f5ea</anchor>
      <arglist>(int note, int midiChannel, bool useSharp=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnectedToExternalController</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a449fe619b9ce62e172cb8da9e9022156</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiTC</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a7b8d9eec84a451975ebc2593001c4cd6</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingMMC</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aaf77dde9cda39718bdc118cd52c416c7</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingMMC</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af7e4da00d0f5376cd00d700682b89436</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingClock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>add5c2c0636a7e80c5ce547800652be52</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingClock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a806048c976a60088e26f6a5775c39b22</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingTimecode</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a56d0888b41f00b66674a58b1cff08d2a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipSendingTimecode</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a19d15b47bd7e78a1c0c6342cc60bcb56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendControllerMidiClock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a821f378942e4dcb0206ebcda6fb6c915</anchor>
      <arglist>(bool b) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fireMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>adf933487786f44c31fca28b762c1ec79</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendNoteOffMessages</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a58f9b1b45415d24a6abb6350bdde9cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDeviceDelay</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a96eeff87f986f6388990f4cccd612218</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPreDelayMs</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a11bf88cd41af01b55dfa802c3927906f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreDelayMs</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ad6c5277bbf3996b68113874a3c7d233b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getProgramSets</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af45172097fe7fc2e7c7266b81555e34d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentSetIndex</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae0d6da8237bfbe16f0fc6e7d15be62f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ac9da5d2711ab411b5051a5b098dec6b9</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af13a51bae9d9a2c816ab86c1c846a21c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a39746683f40af2dc47994b726b05ba42</anchor>
      <arglist>(int programNumber, int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEditProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a552955dfc3a988d64bb3fa0a070087a3</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDeleteProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aca04c866aa10e13a379cb6ba359fc620</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBankName</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae0e318d1a470c0aa72af683accd9f0e3</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankID</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a42deacbfa9428f5b56034b900299e840</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMidiPatchesZeroBased</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ac81211ba199fa737146b18467bf82919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiProgramManager &amp;</type>
      <name>getMidiProgramManager</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ad4c48e2fab0893f4efb051e1e59f4011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setControllerOffMessagesSent</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a75493723d54ebb961a9f054f6aea13d7</anchor>
      <arglist>(Engine &amp;, bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getControllerOffMessagesSent</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a137fb3dfb2052f8293328745c1826f33</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMessageNow</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a4274eb6a07b9499cc73eeeb39a1f6f1b</anchor>
      <arglist>(const juce::MidiMessage &amp;message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a53ea460962419cd25685bef2cfcb5eba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>addb80eda42ca03d9aceb9b76e4a24d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ad084d1ecd1fc117673c31952079a76e5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a06f7651ee3f51bea2e65ca0698501bd2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>deviceIndex</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa065aa693a891a6f857d3506100b6a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>preDelayMillisecs</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a257206b0f5054b7a4e193f271a8c9b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>audioAdjustmentDelay</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a18d08fc40ff36c1e004b63746a77e1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MidiTimecodeGenerator &gt;</type>
      <name>timecodeGenerator</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aea7c6ba491175a733ce20b4decc8b241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MidiClockGenerator &gt;</type>
      <name>midiClockGenerator</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a32eacb5476d376a49e1b4aef4f36d486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendTimecode</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa0b5e1fa6262656bb5566ede78160c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendMidiClock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a7947da9a94b62c8e29c9758cde9c3f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>playing</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af13cde284f96371d43caab2da934d75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>firstSetEnabledCall</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a9a6b9163898ff52fdc06b35f62a200e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::String</type>
      <name>programNameSet</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a94d8378a5b862f69926271a879c467a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aeeca0b6ec2b1d551f4ad62a6e7dd8a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; juce::MidiOutput &gt;</type>
      <name>outputDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a49226b8152287f42fa3f368b03562d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendingMMC</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a69018253e775fcd1fe83318c7eae870a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendControllerMidiClock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a3aa20550b347799c5c0f87692d961432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>defaultMidiDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a9d0c6d19ce49f51428534ba68df0555a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>softDevice</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a7f51b1b783462b7f5ea60339e59cce8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>midiNotesOn</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae48d71b4bdc34f7b6eb983b295924d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>channelsUsed</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a2d23712ccafcae9458de5e282b4960ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>sustain</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a012e3b550b9b342880603bffdb8f0205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiMessageArray</type>
      <name>midiMessages</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a55c3b99a229d3745a97a2c3e61fc8993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>noteOnLock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a2c21282784abf02cbda9851fe186d681</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aea51d0512d9e616d5d4fbde19b432506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiOutputDeviceInstance</name>
    <filename>classtracktion__engine_1_1MidiOutputDeviceInstance.html</filename>
    <base>tracktion_engine::OutputDeviceInstance</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a91e9bac2bb8ab9850b5bcd085c6fe94c</anchor>
      <arglist>(MidiOutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a9b4544dbf028dcb4a4099a496de52be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>ac0067c610db570f9cd03d1dcc064115b</anchor>
      <arglist>(double start, bool shouldSendMidiTC)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>afbcbefbb49001c56a8f9b63e52a8e84c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a8e3b8b1d2cce61ce18a5f53db797bef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice &amp;</type>
      <name>getMidiOutput</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a095e5bd6b4a0d3033e2dad92931ce35b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiMessages</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a400d67c436ab3df7a5d7113a7dd96c3e</anchor>
      <arglist>(const MidiMessageArray &amp;, double editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiClockMessagesToCurrentBlock</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>ad9aa99513b40f7697e718304b3082465</anchor>
      <arglist>(bool isPlaying, bool isDragging, EditTimeRange streamTime)</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageArray &amp;</type>
      <name>getPendingMessages</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a10273970c8541d4851a074014c6ebff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendMessages</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a5a3cf5d1bf72628890cd90673369c5a8</anchor>
      <arglist>(MidiMessageArray &amp;, double)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiOutputDeviceInstanceInjectingNode</name>
    <filename>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDeviceInstanceInjectingNode</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a5f0647310afa053f9ade5b429ad88423</anchor>
      <arglist>(MidiOutputDeviceInstance &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;, tracktion_graph::PlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a13d21342bf253fadd338d752dcc4e5b4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>ad75e490a4feebf21e574b3450b271092</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>ac43beffcbf2ba7cd839091751f30e5f0</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a2ea319121431770caeb08d8ba2c014b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a909de367bb88d94e4d59a462390deda4</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiPatchBayPlugin</name>
    <filename>classtracktion__engine_1_1MidiPatchBayPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <class kind="struct">tracktion_engine::MidiPatchBayPlugin::Mappings</class>
    <member kind="function">
      <type></type>
      <name>MidiPatchBayPlugin</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aaa03c888825cc458a5dd7eed34ed0587</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiPatchBayPlugin</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a0e6f644178e89537f6a6f638448d2d5a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ac766797f154ec6e3b4bf71de49d99b5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>afe756acb99ff77ac8d1095657691a75c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a8e153670dafc5a95245cf000b955d3cc</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aa32db66fd2da41c3872047b7b8c47116</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ad3787f4414605c67a48f0b8e6296b3d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a7fa9d3e033f452aa7080e8f33bc6c450</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aabf3d334b733021cc6de842c6e870581</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a8f4acfb595a50f7f4a4176fc86720852</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a1534008d81eb9ae43065b12c0fbf39a7</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a9010602856d924995dbcd927052a7c2f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a9e222779179332b6f05e0f13d450d59e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>adf6521871df88bfad20abbc8511c139e</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a35b6a9d0b0d7d76c8d27c415e3905b47</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>Mappings</type>
      <name>getMappings</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a3c3b42f542b61eac907ec846997120e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMappings</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>afba82aeb3a157f652de19d8a1f990772</anchor>
      <arglist>(const Mappings &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetMappings</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a7298c22d9e126b756a4f2eb6640beefc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a55205138bb0b90026803af689b8ce507</anchor>
      <arglist>(int srcChannel, int dstChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckMappings</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aa8ba48dcbabf7ab3a3599ada6a1c7601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blockAllMappings</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a300254219d654a1339c24f9d9162d856</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; int, int &gt;</type>
      <name>getFirstMapping</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ad641ab7c11919e80cf5a5eaadc31c2bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a5b38138bde241632e60b6fa037b32692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a1eeb027663a2c9541d9a11011a471107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a846d73cbbbdc9ca3240f6f40cfb010fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiProgramManager</name>
    <filename>classtracktion__engine_1_1MidiProgramManager.html</filename>
    <class kind="struct">tracktion_engine::MidiProgramManager::MidiBank</class>
    <class kind="struct">tracktion_engine::MidiProgramManager::MidiProgramSet</class>
    <member kind="function">
      <type></type>
      <name>MidiProgramManager</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a3263e4f31a0cc0abdd9e521561c250e5</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiProgramSetNames</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a1f7766dd3b8578d897ad1010cc790c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a2a581a1a8b109918fffeac84c3e56f1b</anchor>
      <arglist>(int set, int bank, int program)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBankName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a27f7db5ab7adcf34972145154b4c6290</anchor>
      <arglist>(int set, int bank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankID</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a063c4b2ece0edaa54d0aa4acf5716058</anchor>
      <arglist>(int set, int bank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankID</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a4f08488b212a038e65fb3b6060858286</anchor>
      <arglist>(int set, int bank, int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgramName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a54186a860de174d80557dbde8e2046a0</anchor>
      <arglist>(int set, int bank, int program, const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a93a3fcacfa99fa640093476657931a6f</anchor>
      <arglist>(int set, int bank, const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProgramName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a9127d5e595d602bdbfb7a56c75c0d078</anchor>
      <arglist>(int set, int bank, int program)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a59dffcbaa38b9b48c9001ea476ed0be0</anchor>
      <arglist>(int bank, int program, bool zeroBased)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultCustomName</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a2f9fd60eead8e6df136dac28ad0a33cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSetIndex</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>abfef79cd75f9e5b210b9999e131be7fa</anchor>
      <arglist>(const juce::String &amp;setName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZeroBased</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a3d15efd8f712c1a3ea81fd4ef15a2ac9</anchor>
      <arglist>(int set)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZeroBased</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>ad2bbc6248a0cd01556603c8753fc6032</anchor>
      <arglist>(int set, bool zeroBased)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSetExist</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a4c028637a1601d5199a9f10c2fadeabe</anchor>
      <arglist>(const juce::String &amp;name) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEditProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>aa8fb130769975c05ff46ed25cc078ade</anchor>
      <arglist>(int set) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDeleteProgramSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>af79567edb7892387848d86f448462ea3</anchor>
      <arglist>(int set) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNewSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a17bb434070c6c321bde4dfa1fe48ca1b</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNewSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>ab5d4e98cc5251129ac14c1109ee103b5</anchor>
      <arglist>(const juce::String &amp;name, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a84b726b54cbd9fa20869cb26a16bda22</anchor>
      <arglist>(int set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>aa5d69b77ae0891d0f8f9a575c98a555c</anchor>
      <arglist>(int set, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportSet</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a3c10ba61bd352a46d4d20744091d0cb8</anchor>
      <arglist>(int set, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPresetXml</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a595f6b68ba5887cbbd9c307d0cd99043</anchor>
      <arglist>(juce::String presetName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveAll</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>aa90c79c7aec07bb34673a7610cd5536c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getListOfPresets</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a3cb94db7ae0851ba54cf928c67a227c5</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a81f963e519d42a052e07fcde3343704a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::OwnedArray&lt; MidiProgramSet &gt;</type>
      <name>programSets</name>
      <anchorfile>classtracktion__engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a0155e164dd524ce83f3b10ce66411c3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiProgramManager::MidiProgramSet</name>
    <filename>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiProgramSet</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a7bb0f9f29d184fce867e6a02e37df3a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>ae724db5a7ce130597cde9000321fa13f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromXml</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a383cf1adb038bd9ee52acce25e5af022</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a0cb18b5b7b77260ec5c94de8e4366c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>zeroBased</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a84e5552e91cc33df04c6dc0faa811c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiBank</type>
      <name>midiBanks</name>
      <anchorfile>structtracktion__engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a4a8ea504b5fc0a3e305e136a0d219e2e</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MidiSysexEvent</name>
    <filename>classtracktion__engine_1_1MidiSysexEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a657a5a3015268e989cebc80eb06c9194</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a838e5a13ea7d7704be78c8f34f7fae0b</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a62eea6445fa0cbfb2d84fb0ea733b78b</anchor>
      <arglist>(const juce::MidiMessage &amp;, double beatNumber)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>aa0774b23fd1c5cd5e24c11a016520055</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::MidiMessage &amp;</type>
      <name>getMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a5d14d49095b3600525dd8416beccc794</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>aecf185c33021f6a012348b2d62d7b98c</anchor>
      <arglist>(const juce::MidiMessage &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a08173f8d7f384f75ed540c38513a4643</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a0a898f860a1c74bec97e156cce0b661d</anchor>
      <arglist>(double beatNumber, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEditTime</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a17ac9be251ea4dcac6ade2fe7ce35efe</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>ae0649bf03fe8740cd9a0c80b7efeb398</anchor>
      <arglist>(const MidiSysexEvent &amp;, double time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createSysexEvent</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a67a2dc699993bd4a78d6188b0ac6dee7</anchor>
      <arglist>(const juce::MidiMessage &amp;, double time)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a4fa68cb51a2391ad03970f424f0e93ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion__engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MIDITrackerModifier</name>
    <filename>classtracktion__engine_1_1MIDITrackerModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::MIDITrackerModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a474c9c2a6ee7e0cb7651b0786a9c4114</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitch</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a474c9c2a6ee7e0cb7651b0786a9c4114af101b1ed84daeabd5ab17e28235e9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>velocity</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a474c9c2a6ee7e0cb7651b0786a9c4114a2603f1992ac5100390456ee85bd8bbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a9172427cd295dc1cd3a715e45d33201a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>absolute</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a9172427cd295dc1cd3a715e45d33201aaf15f7cf452fda512019b623bdd527a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>relative</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a9172427cd295dc1cd3a715e45d33201aaaff8e097d0ac5ae85d0c23feeba9b787</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MIDITrackerModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a870373bbb0e90b05a0d117fb27719462</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; MIDITrackerModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>aee1ffc8d739af4fc3e851208d4ffe5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitch</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a474c9c2a6ee7e0cb7651b0786a9c4114af101b1ed84daeabd5ab17e28235e9b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>velocity</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a474c9c2a6ee7e0cb7651b0786a9c4114a2603f1992ac5100390456ee85bd8bbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>absolute</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a9172427cd295dc1cd3a715e45d33201aaf15f7cf452fda512019b623bdd527a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>relative</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a9172427cd295dc1cd3a715e45d33201aaaff8e097d0ac5ae85d0c23feeba9b787</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIDITrackerModifier</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>af57e95d43ee3b163736f0837e85adb10</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MIDITrackerModifier</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a550b526042d3e89e713564f3abbf8227</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a560825ed03e248327a7316f14f308140</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a5ee25607f264d6851c3fb02d56e9b036</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ac0e1c4887b772d7ba504522572e20976</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentMIDIValue</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a164f25dd00498e39c0d7e0c857a843b3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>acda8fdaa462254930ab816b34286e2ca</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiInputNames</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a8544dd8cb82c01fb9bd8efd856e0e246</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ab341023e47258da8faae9563a0a61fb4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a85c082cd112c1832ac7166cee83a82a5</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>aade88f27fad3ffe6e2f4139f1be54a2b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getNodeState</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4a6ea97e96561273ca4e8e85a6a000e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getTypeNames</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a6687c271aa5bb9ace0f44a6b302a03d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getModeNames</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a2737b6b3f0de8680efb92f3e0398c09f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a8a972161b1c88591876ca7c14c4ff8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>af8bbe1babac830db91f659fc6e0fd648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>relativeRoot</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a7ef40d254bc9d488d7b7ad786282b630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>relativeSpread</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ac382a963bc8897e72bb86755ce61bcf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>typeParam</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ae09f458536c1e7ff91cc38fbcbe01684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modeParam</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a0fdb5078eefa756c440f560d1ac6b06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>relativeRootParam</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a6cb29302d02afe3f4ab6d525b3b598d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>relativeSpreadParam</name>
      <anchorfile>classtracktion__engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4c2668140028ef223877d536f6e81cdb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FourOscPlugin::ModAssign</name>
    <filename>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</filename>
    <member kind="function">
      <type></type>
      <name>ModAssign</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a9d0afa4b9ea4be6c7eaaf0c4f9f23bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateCachedInfo</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a2cf025eea86cf370e3d7c75cf5127255</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModulated</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>ae1307ff89ec768a0913bdbdb2271301c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>firstModIndex</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>af4d450a3208a74d849c94986e800cca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastModIndex</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a4918282be8ad206ddf3c6050f25af671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>depths</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a2ca367fe82d4cd0d6fdf1f281f81e0c9</anchor>
      <arglist>[numModSources]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ModelUpdateFunctions</name>
    <filename>structModelUpdateFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioSourceAnalysisProgress</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a54d174608f025983012f81c55325dbfd</anchor>
      <arglist>(ARAModelUpdateControllerHostRef, ARAAudioSourceHostRef, ARAAnalysisProgressState, float)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioSourceContentChanged</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a5feea024c101f98edc69235cea37cca7</anchor>
      <arglist>(ARAModelUpdateControllerHostRef hostRef, ARAAudioSourceHostRef, const ARAContentTimeRange *, ARAContentUpdateFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioModificationContentChanged</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a9e0b046c60f0e8e9ca7b21f63212448b</anchor>
      <arglist>(ARAModelUpdateControllerHostRef hostRef, ARAAudioModificationHostRef, const ARAContentTimeRange *, ARAContentUpdateFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FourOscPlugin::MODEnvParams</name>
    <filename>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</filename>
    <member kind="function">
      <type></type>
      <name>MODEnvParams</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a654c799caa7022eb552cc4860bdded4a</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int envNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a59aaf50f583e578610e745b5b76e4797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>ada056d70b4ff27fad424376d0d069afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a1f886c67c258e7b8c2eaf37cf005439c</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modAttackValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a84e9f17d6a91b8a90d375f971b0c6f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modDecayValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a92b204070c83fb08b18f741766a11da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modSustainValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a89e9a709a1f30ab1aa720c389267d2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modReleaseValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a96548cfe822a2983194e0dd4647ab7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modAttack</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a67b23d9d0c67234ba64fab0bbbd7653f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modDecay</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>ad10994da084e0721a32c3aa0ff80b161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modSustain</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a1750e395a8773057fe77c392c0c2aee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modRelease</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>aa3aa0e55ed5bc3bc4ca46ad75c333c0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Modifier</name>
    <filename>structtracktion__engine_1_1Modifier.html</filename>
    <base>tracktion_engine::AutomatableEditItem</base>
    <base>tracktion_engine::Selectable</base>
    <base>tracktion_engine::AutomatableParameter::ModifierSource</base>
    <member kind="enumeration">
      <type></type>
      <name>ProcessingPosition</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a0947341de41d4d4d6eb121950a190461</anchor>
      <arglist></arglist>
      <enumvalue file="structtracktion__engine_1_1Modifier.html" anchor="a0947341de41d4d4d6eb121950a190461a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="structtracktion__engine_1_1Modifier.html" anchor="a0947341de41d4d4d6eb121950a190461a548d312395b2b6402e483c60f136b86e">preFX</enumvalue>
      <enumvalue file="structtracktion__engine_1_1Modifier.html" anchor="a0947341de41d4d4d6eb121950a190461a7e4fcf98449de35fa953cf4fbaf85e37">postFX</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Modifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a4b163857373a7eb35df5a75cb5fcb329</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>Array</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a8db12292bf49659bc794b4aad9814e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Modifier</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>ab67f85dec5337d3d24f28710b28a6b03</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Modifier</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a6f61052f618ed335da50f3ffc0af5a86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>af579adfd38f262266bc171525d2fe2a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getCurrentValue</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>af57f5725c7b1611b512291b38076c9ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>af20bd7093587c315e7dbd0217abbb91e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getMidiInputNames</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a43bbf1db8079084272b6fd7d3d17fa15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getAudioInputNames</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a1d9efb873f103dc5c7658dd08ff556a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a3b362ca158e6a2aa58fecc7dce6a2eb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deinitialise</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>ae4ef74a7d4967d24dbb94e507c72b70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyToBuffer</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a0fc24875ef0b58169546bdaa5158641a</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseClassNeedsInitialising</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a652dc5f39d59c8364bbac92d86d3b3f5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassInitialise</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>ad983e7b9e5f7f0026c8a729834ea45ec</anchor>
      <arglist>(double sampleRate, int blockSizeSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassDeinitialise</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a7effc779367de00120416a8c7f8bbdcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassApplyToBuffer</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>ad86db028ea7435053669c3dcf6295bc2</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentTime</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a7e2458caea11d737d91a4c73d12971ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueAt</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a6d93e22c22f23e5db26f326b882d1766</anchor>
      <arglist>(double numSecondsBeforeNow) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; float &gt;</type>
      <name>getValues</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a1679cf903fcbb2ef9b3f2fefd481d16e</anchor>
      <arglist>(double numSecondsBeforeNow) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a26e66d5389c534c5fe741e8d006d13af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>aff1413d9b80184fbe61d1dfb292adb83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>colour</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a6fcf7d1a74d538c999396b928e9864a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>enabled</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a087ccfd296a5a2f24879668f618ca573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>enabledParam</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>af853ff461a8cd38ad5991755805797b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>maxHistoryTime</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a8efa6e8f0e8c3c785667dc4a6e148a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setEditTime</name>
      <anchorfile>structtracktion__engine_1_1Modifier.html</anchorfile>
      <anchor>a52237addb1dfc754953570578d3b23bc</anchor>
      <arglist>(double newEditTime)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomatableParameter::ModifierAssignment</name>
    <filename>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ModifierAssignment &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>af69dbe3f140fb05a9112211560d015ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModifierAssignment</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a231d6849f1b1c2654ec1f75edac26519</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a6db72df321f94ade95eba7381605dd52</anchor>
      <arglist>(const ModifierSource &amp;) const =0</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a41d79627fce6a1d25ec5be57bf22f9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a1fdedac99efb8951103fe53718087671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a8941b2490f15c55b53afbe86b34aaa9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a0e05c4fa3b85cbfdd66696210514a572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>curve</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>abd0ba9bcfddf1cfc1c72ad2d0fcb3c74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ModifierList</name>
    <filename>classtracktion__engine_1_1ModifierList.html</filename>
    <base protection="private">ValueTreeObjectList&lt; Modifier &gt;</base>
    <member kind="function">
      <type></type>
      <name>ModifierList</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>aa4959bbd98474cc7962175cab1053244</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ModifierList</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a6151972d0f4c9e71c118b5e46a545bb1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getModifiers</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a7fc91a068060ece6d184d2bf7c64861d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Modifier &gt;</type>
      <name>insertModifier</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a3b9640a91806ec3c0f323626953293de</anchor>
      <arglist>(juce::ValueTree, int index, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a99241e047d13275f833c21655c2492c1</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>aa3df64d847cf11a6999333c916e8a7d6</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>aaaa18cc7262b45250ef7c1c3f946306f</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>ab9be43fdf0f149ef092554e04e34ebbb</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>ae0181f83a867d2ac701dcd72046e54c9</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a7170750095e55e37db9395597521cba5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isModifier</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a667fe9a54046391ada1c22102de86f0c</anchor>
      <arglist>(const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>afd6ee24b1bba7f57c5e9b562675b8954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1ModifierList.html</anchorfile>
      <anchor>a716adbef552d3a41ad5e3ff072b87db8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ModifierNode</name>
    <filename>classtracktion__engine_1_1ModifierNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ModifierNode</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>aaf3c151489069ed66544930ff65579b7</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion_engine::Modifier::Ptr, double sampleRateToUse, int blockSizeToUse, const TrackMuteState *, tracktion_graph::PlayHeadState &amp;, bool rendering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModifierNode</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>ac5429e518c21b4b1e2327ad077df2aac</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion_engine::Modifier::Ptr, double sampleRateToUse, int blockSizeToUse, std::shared_ptr&lt; InputProvider &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ModifierNode</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>a117c7e4862f20c1ed96d2d8bb1e4475e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Modifier &amp;</type>
      <name>getModifier</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>a45712d0f2d347a98ec902d8fe60b175e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>a9e466af5d8b2442b7fb0ea3f0f980a41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>ab7896eeb45be019194c4b1ccab10bf1d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>abbe7e65068efaff8749c07a8b2c64f8c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>a8552f753ecd6f0030be8ee1e3da8d8fe</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1ModifierNode.html</anchorfile>
      <anchor>a0ac6a5c27baffb72326c8bc1bb31583c</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Modifiers</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Modifiers</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a37f42cf623c6df914a1f1a7234fef07b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Modifiers</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a1810ef12415cfeb2935a7aa15b1e8934</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>ace92dee6a724ddf9ac32f3e90b06ab48</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>modifiers</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a019d24720c0ed76cd4ed2d780002b8d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomatableParameter::ModifierSource</name>
    <filename>structtracktion__engine_1_1AutomatableParameter_1_1ModifierSource.html</filename>
    <member kind="function">
      <type></type>
      <name>ModifierSource</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>ae3ca028e8fe748cdb021f49970e15a29</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModifierSource</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>a975c5fefe991c51adcc6fe1b4279c005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>juce::WeakReference&lt; ModifierSource &gt;</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>a90236f6c8817085a2bc77a55268a73be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ModifierTimer</name>
    <filename>structtracktion__engine_1_1ModifierTimer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModifierTimer</name>
      <anchorfile>structtracktion__engine_1_1ModifierTimer.html</anchorfile>
      <anchor>aaabc04fb0835d104d091afc0b8cadf0e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateStreamTime</name>
      <anchorfile>structtracktion__engine_1_1ModifierTimer.html</anchorfile>
      <anchor>ad6d3dcb8835f2aee49628468aaba4f20</anchor>
      <arglist>(double editTime, int numSamples)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MouseHoverDetector</name>
    <filename>classtracktion__engine_1_1MouseHoverDetector.html</filename>
    <member kind="function">
      <type></type>
      <name>MouseHoverDetector</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a8116830696b1e0588d4e0a8a49405311</anchor>
      <arglist>(int hoverTimeMillisecs_=400)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MouseHoverDetector</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>ad88e577d32aca04836eab7ec9a75d0b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHoverTimeMillisecs</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a081006aa08331bc38f3e73c49b4b86ce</anchor>
      <arglist>(int newTimeInMillisecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHoverComponent</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>af43b706b19754886b8dc50119222761c</anchor>
      <arglist>(juce::Component *newSourceComponent, bool wantsEventsForAllNestedChildComponents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hoverTimerCallback</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a3a7331eb87c2922e79fce39e748399a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkJustHoveredCallback</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>aa59f6994de037b37d406cdfb822d4e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>mouseHovered</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a4749d0ff12ce72f8df59dda2211e4174</anchor>
      <arglist>(int mouseX, int mouseY)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>mouseMovedAfterHover</name>
      <anchorfile>classtracktion__engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a070ba7c70f12104019448a941591fe28</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MPEStartTrimmer</name>
    <filename>structtracktion__engine_1_1MPEStartTrimmer.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reconstructExpression</name>
      <anchorfile>structtracktion__engine_1_1MPEStartTrimmer.html</anchorfile>
      <anchor>a0a003fa6c0e69251ae43afe70c29947c</anchor>
      <arglist>(juce::Array&lt; juce::MidiMessage &gt; &amp;mpeMessagesToAddAtStart, const juce::MidiMessageSequence &amp;data, int trimIndex, int channel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MultiThreadedNodePlayer</name>
    <filename>classtracktion__engine_1_1MultiThreadedNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab5b067a539fc78607d0a73dc3b51579a</anchor>
      <arglist>(ProcessState &amp;processStateToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ae27858a640c082b9fa33c3a6684d15c2</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; node, ProcessState &amp;processStateToUse, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a0acbf1ca913492d05731ac08d97a9ae5</anchor>
      <arglist>(size_t numThreads)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a973ba6349c0a04a9a6b3b2302fb14e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a43a82e1d6cf6e33d4e3d7d759aa2ace6</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ae7a7ad405060bca9d4658e8afc29a010</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a3e397ec6df28e982420272cd8abe7245</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a55e8390924f2bc7ca7709d306308a61d</anchor>
      <arglist>(const tracktion_graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>af3695a2f3f980dd29ad85545d4d9233a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>aa3643a61565fc800f35426591fa3a0e1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::MultiThreadedNodePlayer</name>
    <filename>classtracktion__graph_1_1MultiThreadedNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a09960a20838e2e7ace4a729c21079732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a2b135ae646aa24d7348d7bfb0dad5386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a80df6f83ad2f69a45ec57187b7e2e2c6</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a0c5551282a6df6bace4936c6af46addc</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>adaadbb7be833cc21437ecd0f5b8cc8b1</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a6b8b978b29fb92db12a3718ae4aadf8f</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse, Node *oldNode=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a4c5c9d54760fcc862b137417946d6d5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>aedff3e090d9db5cb46df392b4aa94453</anchor>
      <arglist>(const Node::ProcessContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>acdaf584d52b182c12ec4bd2f6a3dbbcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab87cd62c873e165f12dfb2b1fc295a1f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::MultiVoiceOscillator</name>
    <filename>classtracktion__engine_1_1MultiVoiceOscillator.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiVoiceOscillator</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a7685e8383a6d6858c473296ea01264dc</anchor>
      <arglist>(int maxVoices=8)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>abb146bfa4908a75482e3112b60066ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>aeb53115a2725bcd56d1fb80c2019652b</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWave</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a7adfff102a9d4dd4e0dd1e0c159ea7ce</anchor>
      <arglist>(Oscillator::Waves w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>aec3d80431d2794abfa8987fc52cab182</anchor>
      <arglist>(float n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGain</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>adfdea6949fd9df9cbbc68117c44af7c5</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a8a0b4cff170dcdf7080ae9e98e01aeab</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPulseWidth</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>ad34840611edcc645649aa129ac850bce</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumVoices</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a9dbd0e750b82768755d59e195b68008a</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetune</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>ad909364ae3ddee5a78d206b4fa75bef1</anchor>
      <arglist>(float d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpread</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a177b5052bcb0ed6e3ce26a4a9a3da1c0</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a2b50c96ac879a31b9cca6818caca06a5</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MusicalContextFunctions</name>
    <filename>structMusicalContextFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static ARA::ARACircleOfFifthsIndex</type>
      <name>getCircleOfFifthsIndexforMIDINote</name>
      <anchorfile>structMusicalContextFunctions.html</anchorfile>
      <anchor>acc224058eb8bc84baf208bd5c62b61ec</anchor>
      <arglist>(int note, bool useSharps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; ARA::ARAChordIntervalUsage, 12 &gt;</type>
      <name>getChordARAIntervalUsage</name>
      <anchorfile>structMusicalContextFunctions.html</anchorfile>
      <anchor>a778cfa5f3562c1d69b6b8708ac9ca979</anchor>
      <arglist>(Chord c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MusicalContextWrapper</name>
    <filename>classMusicalContextWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>MusicalContextWrapper</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a396f7e72c675c984a00c3ffb9ae99777</anchor>
      <arglist>(ARADocument &amp;doc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MusicalContextWrapper</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a04245d561f63665cc2d94e895ffe8e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a792cc50768768e07d17797e84b55f292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_MEMBER_PTR_ARGS(ARAMusicalContextProperties, color)&gt;</type>
      <name>getMusicalContextProperties</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a11ef5d0ef554c946849b1f19a1290acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>isMusicalContextContentAvailable</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ad645196eb3376b33bee90ea9d78283eb</anchor>
      <arglist>(ARAContentAccessControllerHostRef editRef, ARAMusicalContextHostRef, ARAContentType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentGrade ARA_CALL</type>
      <name>getMusicalContextContentGrade</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ae0eecab9ba0e1323e8578df62c1e2c2b</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAMusicalContextHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentReaderHostRef ARA_CALL</type>
      <name>createMusicalContextContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>aad94b5b2ce7ff28cc93b5c4b221d139a</anchor>
      <arglist>(ARAContentAccessControllerHostRef controllerHostRef, ARAMusicalContextHostRef, ARAContentType type, const ARAContentTimeRange *range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>isAudioSourceContentAvailable</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ab141b82fb89484679fa32a5b1101cbbe</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentGrade ARA_CALL</type>
      <name>getAudioSourceContentGrade</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a2c41015be8cf7032faf7de528fc74d2c</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentReaderHostRef ARA_CALL</type>
      <name>createAudioSourceContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a87849b850a2e07428bf3f4607db033ec</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType, const ARAContentTimeRange *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAInt32 ARA_CALL</type>
      <name>getContentReaderEventCount</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a3866805ae92dfd4370c68c6ae0e1f0c7</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const void *ARA_CALL</type>
      <name>getContentReaderDataForEvent</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ac4e0c4ce7e52102634d97cae7f1ede49</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef, ARAInt32 eventIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>destroyContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a62270bbb11b2766ad39a139572cf4373</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef)</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>document</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a6379f29afabefc6024843b9cc6c7c019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAMusicalContextRef</type>
      <name>musicalContextRef</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a9f42fc9f3a7fed05682a5a633aa55fe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MuteAudioNode</name>
    <filename>structtracktion__engine_1_1MuteAudioNode.html</filename>
    <base>tracktion_engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>MuteAudioNode</name>
      <anchorfile>structtracktion__engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a62e6c66117a1471c79f2d21efa602d9e</anchor>
      <arglist>(AudioNode *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>structtracktion__engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a2f211313ad8d8e5073e75f6e4df5c838</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>structtracktion__engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a344a713dc7492507b0a8822f76663a89</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::Node</name>
    <filename>classtracktion__graph_1_1Node.html</filename>
    <class kind="struct">tracktion_graph::Node::AudioAndMidiBuffer</class>
    <class kind="struct">tracktion_graph::Node::ProcessContext</class>
    <member kind="function">
      <type></type>
      <name>Node</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a497aa5a09fde53cae0e70accd5a7ebc8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Node</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a4776975a9530a5167c95156d25154dfa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>ad46245f618dd2ac5109a43159580a504</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a61acd005f37ebad0c3b9d1eca3de3f33</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a796c59c6c9d650723aee1142cb68964f</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProcessed</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>abc00e0367d0b97ed5c87d1645aff3ddd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioAndMidiBuffer</type>
      <name>getProcessedOutput</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>afcdb0cbfce2a92197c76d75197da6759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>adb4615ba244e6e702dca2b179fd4a3bc</anchor>
      <arglist>(Node &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>abd5611e52adad378668f700dd3d21c23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a474e1c4ee65e691bcfaf47ffb0493179</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a7137ee39624c0a7ff5d79f1d37ebaa93</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a2f17511d4ec829448fc07a258e8c3e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>aeae1b51211c83c0605203884dfbf0d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getAllocatedBytes</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>abbfb0266ee5ac393e36ddecbbe41bf8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>internal</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a7caf09b754da85b8c16da08075802cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numOutputNodes</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a01d9e601ae341c6864451f633141846b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a486e18fa9f17f0c5af631a9a3e10ab47</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a71d15a3b42c0c0e487e075b60a2a4d6c</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a059a32f5b4eaac678c15c1daf4e0b9ed</anchor>
      <arglist>(ProcessContext &amp;)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setOptimisations</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>ae0b56cb8c99889d02d2c1caa51c5a031</anchor>
      <arglist>(NodeOptimisations)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setAudioOutput</name>
      <anchorfile>classtracktion__graph_1_1Node.html</anchorfile>
      <anchor>a25d9a7a11ccaa254b4085e147a445c63</anchor>
      <arglist>(Node *sourceNode, const choc::buffer::ChannelArrayView&lt; float &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::NodeBuffer</name>
    <filename>structtracktion__graph_1_1NodeBuffer.html</filename>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>view</name>
      <anchorfile>structtracktion__graph_1_1NodeBuffer.html</anchorfile>
      <anchor>aa77a97934fb24dfe573cf4cb4d68f62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>data</name>
      <anchorfile>structtracktion__graph_1_1NodeBuffer.html</anchorfile>
      <anchor>a0e5ab9077ca1dbabb181f13e5b8334d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::NodeOptimisations</name>
    <filename>structtracktion__graph_1_1NodeOptimisations.html</filename>
    <member kind="variable">
      <type>ClearBuffers</type>
      <name>clear</name>
      <anchorfile>structtracktion__graph_1_1NodeOptimisations.html</anchorfile>
      <anchor>a8f072e706a1fe85d9d4345883774ce0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AllocateAudioBuffer</type>
      <name>allocate</name>
      <anchorfile>structtracktion__graph_1_1NodeOptimisations.html</anchorfile>
      <anchor>acd9d819cf32f1800588a69ed6a7af1f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::NodePlayer</name>
    <filename>classtracktion__graph_1_1NodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>NodePlayer</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a165942d6976426e78454e598ee2c0dcb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodePlayer</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>af52fc9daaddd4fab482ac72bc9542186</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; nodeToProcess, PlayHeadState *playHeadStateToUse=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a16dddc627621a3987b295f615659e63c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a28e8d44f0ab1d7f0e60adae1c49f5669</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a94b0d1cd7cc4d0426cbfb8d3a814c2cc</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a0c8f22bc1016fa9f4331ffbdf3ca838a</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse, Node *oldNode=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>ad5aa62d83480c87c1ae49ccce58a8835</anchor>
      <arglist>(Node *node, Node *oldNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a64b0ff1b8d8319cbb757f2b03810b9bc</anchor>
      <arglist>(const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a18de0290f1a3e24fd8dfb87ec6f499d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processPostorderedNodes</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a0164bbd7ade57cf5a9dcd0e0fb4c9962</anchor>
      <arglist>(Node &amp;rootNodeToProcess, const std::vector&lt; Node * &gt; &amp;nodes, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>processWithPlayHeadState</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a0f3aa4468afc840f9a41a5fdef6d396f</anchor>
      <arglist>(PlayHeadState &amp;phs, Node &amp;rootNodeToProcess, const std::vector&lt; Node * &gt; &amp;nodes, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>processPostorderedNodesSingleThreaded</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>ab3308f35985ba919e5f3cafa6d108203</anchor>
      <arglist>(Node &amp;rootNode, const std::vector&lt; Node * &gt; &amp;allNodes, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>aac1770b40ab2a517812a3f0d7d965495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlayHeadState *</type>
      <name>playHeadState</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a5dd6c0c10b4ba72c187512132b8a163b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Node * &gt;</type>
      <name>allNodes</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a619eff546bc685299fdb5e5b4a6fe453</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a525dd007df08e62c93e2bd65ea630de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>abb6fe2a8067509c9efe9b805823ce464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::SpinLock</type>
      <name>inputAndNodesLock</name>
      <anchorfile>classtracktion__graph_1_1NodePlayer.html</anchorfile>
      <anchor>a7bfe87a7b7d6ffb2cc994aba5d01e307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::NodeProperties</name>
    <filename>structtracktion__graph_1_1NodeProperties.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>structtracktion__graph_1_1NodeProperties.html</anchorfile>
      <anchor>aefae14f1d527533374ad9dafd133c7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>structtracktion__graph_1_1NodeProperties.html</anchorfile>
      <anchor>a174cb216b943e810f36621ca61fce372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfChannels</name>
      <anchorfile>structtracktion__graph_1_1NodeProperties.html</anchorfile>
      <anchor>a8592a8f6df83527f14368892bc1fd4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>latencyNumSamples</name>
      <anchorfile>structtracktion__graph_1_1NodeProperties.html</anchorfile>
      <anchor>a5aa49fd63c2330a6039890a7dbcf7906</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nodeID</name>
      <anchorfile>structtracktion__graph_1_1NodeProperties.html</anchorfile>
      <anchor>a8fc8d7b990770efa796917d8fcb44283</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NodeReader</name>
    <filename>classNodeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeReader</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>ab8fb99cf25f7ecbc7f6492e48ad96f4e</anchor>
      <arglist>(const AudioFile &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>ARABool</type>
      <name>readAudioSamples</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>afe234073b0959b63689a14db86a096c0</anchor>
      <arglist>(ARASamplePosition samplePosition, ARASampleCount samplesPerChannel, void *const *buffers)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>a71875a45d4555683620817efe9c347aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>a9e1c1c740f632cb5d3aaea7497d58816</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::NodeRenderContext</name>
    <filename>classtracktion__engine_1_1NodeRenderContext.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeRenderContext</name>
      <anchorfile>classtracktion__engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>aaa566e7a340b48c85ac51699c7156acb</anchor>
      <arglist>(Renderer::RenderTask &amp;, Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;, std::unique_ptr&lt; tracktion_graph::PlayHead &gt;, std::unique_ptr&lt; tracktion_graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *sourceToUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeRenderContext</name>
      <anchorfile>classtracktion__engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>abc98673f28bc9cd57e429bf5dd8ffebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>getStatus</name>
      <anchorfile>classtracktion__engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a2cc61d14da2d00078ceeb41d4811475a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion__engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a2020ef3b5e3ef3a13854f24b2d36e5b0</anchor>
      <arglist>(std::atomic&lt; float &gt; &amp;progressToUpdate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>renderMidi</name>
      <anchorfile>classtracktion__engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a8e6236630c141b7287a8c9fe0eeaedcd</anchor>
      <arglist>(Renderer::RenderTask &amp;, Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;, std::unique_ptr&lt; tracktion_graph::PlayHead &gt;, std::unique_ptr&lt; tracktion_graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, std::atomic&lt; float &gt; &amp;progressToUpdate)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::NormaliseEffect</name>
    <filename>structtracktion__engine_1_1NormaliseEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>NormaliseEffect</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a4ad906f22c80a2a85dad88a3504f01e4</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NormaliseEffect</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a8c4aa5d1da7a85b00d4815f9f0ef300c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a62075b62601a8880f88f4a6c433a33bd</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>af3baa09371949018ff673275454b25c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>afedf470d806163700413d4f741cfcba2</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a03ad9d7e4b7979ce178ad58281d6718f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>maxLevelDB</name>
      <anchorfile>structtracktion__engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a2cf53ce6bea329230421b377e0c17bfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::NovationRemoteSl</name>
    <filename>classtracktion__engine_1_1NovationRemoteSl.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>NovationRemoteSl</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a8329f3e635ee3735757a9c738783b2c6</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NovationRemoteSl</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a2decf6d649f70e88e784f7a465555461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ace421b95f3ef7a2f9eee72b556b4be5c</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a425b1dd6923ff39669c0483547806d93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a04940b25380126b42d9d5e2b5b55aba3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aa88f8f571102287a97f034e2e4f04fbf</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a891ef00784f41d194c0184f28a116692</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>af22674bb1456d671f2e38464dac32c29</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ac4a95731cc59fde5f5e7d22e1e6dc29c</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a64431a7de991e855a84225425a8a9bd2</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>adc03821cc5afcf546ebb49022818603d</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aee669426acc7e260164b5f48c85a67bb</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a4b670dae1a1606ffdec98570ad9e6889</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a1f635e6dc58c3856217c92cf97220bef</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>acb318603d61863b5a649160c9a82ba0c</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ab0a2106ad6cc27b2f522411f17a209bb</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ab6bf89f0a5c19b92a92b3f0bc42556c1</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a29c3a33281639d272dc54ccd8372e54c</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a3ad1c80937550f97862d49dc403458ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ab6d9ed2ed6f4fce6eb467ebf0d4576dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ac73730386e86434204e3b2dc77ef3865</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a35fd9020987f7403cc042af1e0c9be72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion__engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a51c617a8296a7d970e1725654a6a3b49</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::OldEditConversion</name>
    <filename>structtracktion__engine_1_1OldEditConversion.html</filename>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>convert</name>
      <anchorfile>structtracktion__engine_1_1OldEditConversion.html</anchorfile>
      <anchor>a1aa4a62d472a2e0937b610f8f2c61da7</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convert</name>
      <anchorfile>structtracktion__engine_1_1OldEditConversion.html</anchorfile>
      <anchor>aaadf8935dbaa65e85cffc83113210248</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::Options</name>
    <filename>structtracktion__engine_1_1Edit_1_1Options.html</filename>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a5bd5da5c6d6eb5e3eadc9aab2df22593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>editState</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a2fb2bf3322ed7ba2233a6167179616e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>editProjectItemID</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a25ef7777f87f4033fb2edfb76b62819c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditRole</type>
      <name>role</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>ad12810fdbfb58bb0166cbccb898e9197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoadContext *</type>
      <name>loadContext</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>aaca758e0cc1af8e0d8bdeb7fb5775f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numUndoLevelsToStore</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a7e6b0b19907cf711ea161f5078dc4564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File()&gt;</type>
      <name>editFileRetriever</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a296dc042f16ad023a0badc9f03e5d5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File(const juce::String &amp;)&gt;</type>
      <name>filePathResolver</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>acf8ddab235bd1eb7830d354047a9d990</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Oscillator</name>
    <filename>classtracktion__engine_1_1Oscillator.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Waves</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba85bfbc9c489db14629d9ddd9cbf454ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba5fd4bd74389c52887751dbcc4264454a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba7e9bd8b21c221e58d033e1e71943a2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>saw</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba48b719b525cd74c7ce0d30056874e994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8bacf270dcfa7c511a7d366dbc52167f953</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8bab7281c06807cf8c9dd0ab73d5c706209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba85bfbc9c489db14629d9ddd9cbf454ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba5fd4bd74389c52887751dbcc4264454a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba7e9bd8b21c221e58d033e1e71943a2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>saw</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8ba48b719b525cd74c7ce0d30056874e994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8bacf270dcfa7c511a7d366dbc52167f953</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a4bf75ecf5a3b86909d9f0a60a9adec8bab7281c06807cf8c9dd0ab73d5c706209</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oscillator</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a724c94fae58478afd3df02aa094ca28f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a23c31fcf1369b9d7e87e3fd67a4ed285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a00573f742a3ba9420f1015204b9b698a</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>abca641885dad182b3752482094fb98f7</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWave</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a94af64c1f83348f2bccc7d5714488c48</anchor>
      <arglist>(Waves w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>ae584e8cbf65cf5470a71db906c4818fa</anchor>
      <arglist>(float n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGain</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a530fb00fe732100e539a4d8d2e269d95</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPulseWidth</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>ae53f9237cf714184126b1d66c651b63b</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1Oscillator.html</anchorfile>
      <anchor>a532090e051b8c24e17c70ee915d681cf</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FourOscPlugin::OscParams</name>
    <filename>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</filename>
    <member kind="function">
      <type></type>
      <name>OscParams</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a28fef497c57ec7d43e8d3956ea7cb2ba</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int oscNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a23854dede92c0dcb6cc1380c12283702</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aa33c918bd5df75470e98a2fa04499b0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aeb7244203f6c0711d293098478de615c</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>waveShapeValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>afd710e8d0e8f9b3593ce69a127575a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voicesValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ae1e88bbb93e576e00fb86b0d47ccdc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>tuneValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aa74f4ec822532983223f6ed9b07c0e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>fineTuneValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a0e19fe51a2914abb5caf7f8354d468bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>levelValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aaca35373c55a9be5bb0a65c9bca5148d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pulseWidthValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a20e031413da7d5673ddfc2009a07758d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>detuneValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>abd3342c7ed95a9d3ed65ae031d96a59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>spreadValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>abdd7baa37e657a8f2e63cc48cc4f1127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>panValue</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a190f4d18a80c6b0e4de94dc9859ea708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>tune</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a1d69248418544765fad92ddb2660dc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>fineTune</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a1da4d00f8d1f6ec88b762d3b53d0f3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>level</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a3084f8816b8a6721196ce2bd94df6f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>pulseWidth</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aac63487f9bea36f15791bbfcde872dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>detune</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a56c7a62033d5e54ff53f5d731f16858d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>spread</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a54f822e5de857d4d130c5a17f7a83ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>pan</name>
      <anchorfile>structtracktion__engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ae3b5d442ba27762bfe5253faadd2835f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::OutputDevice</name>
    <filename>classtracktion__engine_1_1OutputDevice.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>OutputDevice</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>adecf2e4871051b6d3efa5ae3a9e53dc2</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;type, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OutputDevice</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>ae665e84a7b259a695526a975db72f52f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>ad119b52753d2ec95345391f140c80dea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAlias</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a9f671c8a25e8ded659c3c1b70b41aa29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlias</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>ab6f9ace2410b6e70b7497deff1be852f</anchor>
      <arglist>(const juce::String &amp;alias)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDefaultAlias</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a8d74945bc3352adca9909f8c855c8411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDeviceID</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a17a3c39fdce8154c18d693aa3691e3a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a426b9c15afcd536e0e7d3130c10b9482</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>af2a090bb55aab5ca0c48509f283dd7f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>ad9d2a8bbe44e90f81c9be4cd71c2c24f</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>ae7ce789782ae2f4f1c1a7ab55683331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a5e44ef56f81a64602c32c4ce719441e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a6e28b3b751d93808811f8224154fd2db</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>a37917547cb9dfec5d035c4405d3a608c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classtracktion__engine_1_1OutputDevice.html</anchorfile>
      <anchor>af833a44a6f6c3232fcd9e3b4f729c2ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::OutputDeviceInstance</name>
    <filename>classtracktion__engine_1_1OutputDeviceInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>OutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a0787bbe3b10380a85b054fc280b0eaae</anchor>
      <arglist>(OutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a169722b051690f0a13f5709611aadf75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>OutputDevice &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion__engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a0b550818d9c95f3d2194f45acaa00794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>context</name>
      <anchorfile>classtracktion__engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a52a050aeac31fa687e91a97e284f5665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a5c7a81dc78225965c9a069e87831bf0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Param</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Param.html</filename>
    <base>tracktion_engine::VSTXML::Base</base>
    <member kind="variable">
      <type>int</type>
      <name>paramID</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a877a22f19221d6b086ed40a3b4c3afc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>expr</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>ab1b485aea80040667e927c2363285233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>ac787d5b8cb9ce9a347dfa11b5df5fae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>label</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a462a01aaadd99498b39c1be7fa745817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>shortNames</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>aa8204b23e2df6c1c9b0b777bdeac70b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a42a9db383c658ef01ab9c9c16e9df38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfStates</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a945e696fde3ec4e5fbd9547f8371d859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>defaultValue</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a6df2b650911ccf366bee2e961e4dca12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ParameterChangeHandler</name>
    <filename>classtracktion__engine_1_1ParameterChangeHandler.html</filename>
    <class kind="struct">tracktion_engine::ParameterChangeHandler::Disabler</class>
    <member kind="function">
      <type></type>
      <name>ParameterChangeHandler</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a2b32e33362ae0b1210a95b2461dfa1e4</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEventPending</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>aa038305e33507d438814980c54498036</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a2766ef0187f7c24c0bc6df8ea9f39422</anchor>
      <arglist>(AutomatableParameter &amp;parameter, bool fromAutomation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterPending</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a9160cf88863e77025076082ca82f80be</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getPendingParam</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a5bd3b760af5f11c4456c1f2dc1962def</anchor>
      <arglist>(bool consumeEvent) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>actionFunctionTriggered</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a0c9b13a19ffe5078112edb651fa0e333</anchor>
      <arglist>(int externalControllerID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActionFunctionPending</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>aa64319a40e2fc8f7832201c7e7cf4231</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPendingActionFunctionId</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a81a982629bd8e670126056d66934c5a9</anchor>
      <arglist>(bool consumeEvent) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterLearnActive</name>
      <anchorfile>classtracktion__engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a2549a6c028a9996bd488405f9feb70e7</anchor>
      <arglist>(bool a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ParameterControlMappings</name>
    <filename>classtracktion__engine_1_1ParameterControlMappings.html</filename>
    <class kind="struct">tracktion_engine::ParameterControlMappings::Mapping</class>
    <member kind="function">
      <type></type>
      <name>ParameterControlMappings</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a269dd54ece9c7f16d2ea9d58a3c5274a</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParameterControlMappings</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>adbed8ec986f041c82d6764197db3750b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFrom</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a5bd4bf268b693bb84bf3e5970ac15b47</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTo</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a24c2dbb8e29a0fdc06f322685a342b48</anchor>
      <arglist>(juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkForDeletedParams</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ac6558245bf6ca481203b6c630fcffaaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendChange</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>aebfe31a1aee77daa28d81f75733a222f</anchor>
      <arglist>(int controllerID, float newValue, int channel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterMapped</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a3d606c948a7c09339a4a69c97adb9d03</anchor>
      <arglist>(AutomatableParameter &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getParameterMapping</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a1126ac1258560fb802b3efed0a69afa3</anchor>
      <arglist>(AutomatableParameter &amp;, int &amp;channel, int &amp;controllerID) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeParameterMapping</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a3f9bd1ac49e2ba180369b09e74279394</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumControllerIDs</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a67c4b6ce636fde9a0a8b6c1be8e777a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsListForRow</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a03784d6afad676f28e6f9d0c7640d0d8</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRowBeingListenedTo</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a0fd15c0924cada620ff62e4e5ef61313</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::String, juce::String &gt;</type>
      <name>getTextForRow</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ab39745f9a31cf33c86153064d6cdc8f0</anchor>
      <arglist>(int rowNumber) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listenToRow</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a5774324d906fa4135a11f71f4f9f53e3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLearntParam</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a1131d0535fa18b73c51d8b87fb374709</anchor>
      <arglist>(bool keepListening)</arglist>
    </member>
    <member kind="function">
      <type>Mapping</type>
      <name>getMappingForRow</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a809a08cde4a177ff5290af63e4014c06</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>aa6a4664b1a15ec35664d37d6e90152fd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsEditor</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ac31bc7e383ca7c9846e8fb4c77176eed</anchor>
      <arglist>(juce::DialogWindow::LaunchOptions &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ParameterControlMappings *</type>
      <name>getCurrentlyFocusedMappings</name>
      <anchorfile>classtracktion__engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ad769e8f3c7aab9185d95aaf19d245c6d</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ParameterisableDragDropSource</name>
    <filename>classtracktion__engine_1_1ParameterisableDragDropSource.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterisableDragDropSource</name>
      <anchorfile>classtracktion__engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>ab71802992a0cb2e5e8f9a17abfcfe5c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterisableDragDropSource</name>
      <anchorfile>classtracktion__engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>ab7eed54f28a85621fbffb1b67bc89a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draggedOntoAutomatableParameterTargetBeforeParamSelection</name>
      <anchorfile>classtracktion__engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>a20ba1b37b9be6e5ce8dd7fc9bae06932</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draggedOntoAutomatableParameterTarget</name>
      <anchorfile>classtracktion__engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>aaf5b5d9a2f0c07c94e4d17bcac0eb55a</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;param)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomatableEditItem::ParameterListChangeListener</name>
    <filename>structtracktion__engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListChangeListener</name>
      <anchorfile>structtracktion__engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</anchorfile>
      <anchor>a671b207ebd4e8fe4db2fdbc9fecbac82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>parameterListChanged</name>
      <anchorfile>structtracktion__engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</anchorfile>
      <anchor>a8697b3a7778314fc52fa9a49e1f769fb</anchor>
      <arglist>(AutomatableEditItem &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SimpleLFO::Parameters</name>
    <filename>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</filename>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a224d32567220654f9d24a146d3c0f966</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a08395205c36e4adc9585beb498e106ba</anchor>
      <arglist>(float frequencyIn, float phaseOffsetIn, float offsetIn, float depthIn, WaveShape waveShapeIn, float pulseWidthIn)</arglist>
    </member>
    <member kind="variable">
      <type>WaveShape</type>
      <name>waveShape</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a18ab57972f3a2d8ae8b8acb07182cbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>frequency</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>ab9bf199df624083aed4242e1be42ca30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phaseOffset</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>aa3e6187822edcd93f654b9eacfbdf288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>ac0a0c1bdadbae3cf97c0cf33f6c26b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>depth</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>ac5a69f40e6c83b515dac6c7f82bd6037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pulseWidth</name>
      <anchorfile>structtracktion__engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a0980210130a1b826bd531828686006a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ExpEnvelope::Parameters</name>
    <filename>structtracktion__engine_1_1ExpEnvelope_1_1Parameters.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>attack</name>
      <anchorfile>structtracktion__engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a8bf3ef4653dc54a8f788e115630832d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decay</name>
      <anchorfile>structtracktion__engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a1a7b953fb4a2b87bb45f763c0118d283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sustain</name>
      <anchorfile>structtracktion__engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a87969e39f3e2a1579be9c95186614469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>release</name>
      <anchorfile>structtracktion__engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a47b4f8c7efe4e0c4b9b88a59562ea61e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::LinEnvelope::Parameters</name>
    <filename>structtracktion__engine_1_1LinEnvelope_1_1Parameters.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>attack</name>
      <anchorfile>structtracktion__engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a900ee3f8ddbcaab9fb10e99d7aea04ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decay</name>
      <anchorfile>structtracktion__engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>aa5846dd56fe2988d46bdf2e2ef910db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sustain</name>
      <anchorfile>structtracktion__engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>acdf1b7699f5f3d4b49f4b69e793538d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>release</name>
      <anchorfile>structtracktion__engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a2aca6a6f07a26d824311820a0bd1d637</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Renderer::Parameters</name>
    <filename>structtracktion__engine_1_1Renderer_1_1Parameters.html</filename>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a6591e52a32b8289e73b18d7287575b17</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a9becc861fd48abf7ded6f736e6409f77</anchor>
      <arglist>(Engine &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a35f3be4b2de669cefe5948a0857cf6bb</anchor>
      <arglist>(Edit &amp;ed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a34d0659dbcfb0f8ef2679dcb2ec28ae3</anchor>
      <arglist>(const Parameters &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>af2a0e49cf5836662203966dd51fe7ee7</anchor>
      <arglist>(Parameters &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Parameters &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a29afe6f864b03e7add36c6f2aba490f1</anchor>
      <arglist>(const Parameters &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Parameters &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a8520d0f64ff36769c323e9337349f526</anchor>
      <arglist>(Parameters &amp;&amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ab1b4c3f0be474e8869952884c8dca63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a6aa51c5244c2decbfc0588b056f1a2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>tracksToDo</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a88b654f7ded722696b7ab68db67abba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>allowedClips</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a146d1c4ffe08288ac5f2d5a02457d8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::File</type>
      <name>destFile</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>aa94bd458e1dda90e257be48b75d05720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormat *</type>
      <name>audioFormat</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a02299736840f4419ed6941c1804e3556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bitDepth</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ada42b8873ef3f5c2c461d933fb4eadc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeForAudio</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a7199c59c3222be50069114868086bd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRateForAudio</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a784d90ac8bbc3a189e3ea8d5ca873fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>time</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a3416cb47f67c1c587b2688307255e8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>endAllowance</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a81700468ec0ddccf181c6bff511919a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>createMidiFile</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a9d42110ba09fdd367ef12e971a2941f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>trimSilenceAtEnds</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>af22e5b2ce9c1891b1adb9e539a0cb2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shouldNormalise</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ad45325715ec03435197dea82e9c8f2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shouldNormaliseByRMS</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a61d3f2e0ec405efdc872142162043118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>normaliseToLevelDb</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a2d1ea6826220022fed1daa71a0a149ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>canRenderInMono</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>acd63b4cf179af9ed7a1804d3058d3942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mustRenderInMono</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a0b22ae6d2350f93cc0ee6ea70ea8bf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>usePlugins</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a449441e71d735916e57ad639e4cbe99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMasterPlugins</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>afa245c4b5777d5b43d15532c3ab1234a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>realTimeRender</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ab53ca38a033d754e803d100a4eabf8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ditheringEnabled</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ae639d152f2ba20c1fa82508b4ae4df08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>separateTracks</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>aa7d56373c6127710fdb843654c371732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ae8305049616fb14613b16750a29fa486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quality</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ad40ce963dde3e908d2b72f565079813a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringPairArray</type>
      <name>metadata</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ae5ea5f5fdf5e265eff7380e873d5e2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectItem::Category</type>
      <name>category</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a8a4b967c1dc93074322587d33c2f4522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultMagnitude</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a1b59c7714d8ed4966c437fb3b3af3934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultRMS</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a58ebff1461488f312ab2700f76ff02f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultAudioDuration</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a15d56f3ffe40efa03d2813fcbfe9f65a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::HostedAudioDeviceInterface::Parameters</name>
    <filename>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a05687012e71d8ecd455cc940a957de4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a22f02d68dff12d51f3ea1f81655dbaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMidiDevices</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a3f2505c158909ee30ca58455bb254fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inputChannels</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a0b4fbeafa74f726691ae8f681d0b4e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outputChannels</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>ae0fc6112d00d084a824f5d567dd94996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fixedBlockSize</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>aed3b302ceedbd1099eacb7984d88e04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>inputNames</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a3fb5da1d11b102ba7b1f9451c53bbf0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>outputNames</name>
      <anchorfile>structtracktion__engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a06c8157286b8b57614604a1f0f41b42b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ParameterSetting</name>
    <filename>structtracktion__engine_1_1ParameterSetting.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterSetting</name>
      <anchorfile>structtracktion__engine_1_1ParameterSetting.html</anchorfile>
      <anchor>afea7c76be984dcdc44112ca2971cb76f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a887b2a1e74c5de683a6c5c6cdf039781</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>label</name>
      <anchorfile>structtracktion__engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a120decf74aa3e98e7050e7aa88c21201</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>valueDescription</name>
      <anchorfile>structtracktion__engine_1_1ParameterSetting.html</anchorfile>
      <anchor>aef68e8fa6bf7935b880919992ced8629</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion__engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a03e0bbec7aa3d54e9357cf0ac8b68a9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PatchBayPlugin</name>
    <filename>classtracktion__engine_1_1PatchBayPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <class kind="struct">tracktion_engine::PatchBayPlugin::Wire</class>
    <member kind="function">
      <type></type>
      <name>PatchBayPlugin</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a6926c4faf5d644ca36e623e6812778b0</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBayPlugin</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a8af5ba9c823329f16f6eb1661bc3420a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWires</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad4daf4d268514cce625b9315af147c88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wire *</type>
      <name>getWire</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a7d72adb38040f4a5c36318f61f9432a6</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a833b251a9e92cb9de970bc20a32929a2</anchor>
      <arglist>(int inputChannel, int outputChannel, float gainDb, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakConnection</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a91c12b5b93ac62d37d84fd9d7795f215</anchor>
      <arglist>(int inputChannel, int outputChannel)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a61ab5c05fb8f3970bf34c931a807fc6f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>adfd7f735b403c90184ae32774d9a96d4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a8fe87dc1b4c863f0c41126b945e62ee6</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a058c946ae6f1f19060e69a8d08490864</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a11c233159d0d269f72429e69f30cc83b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad1ef9696248b89a5793bb82327e5b58a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a0c2fa141ddadbcf45a4256f441f5b6f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad5d4b27a441c3b1e0b499bdecb2ed79e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a68e260c1387ce53a56740265175bd400</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad30a63f8adac929d1adcc0f92d63e38e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a6b8c122c28aa5036e58c7f041765bf21</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a3ea55e5ad0692c00ee6f518d8c8a1531</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a1067f9b2790c6f193b279ca773437f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>aa1c4079c7ba8bcf054dc6bd4ec715b7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepVolumeEffect::Pattern</name>
    <filename>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</filename>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a5054a3a8a4df02d95e8a4987101abddc</anchor>
      <arglist>(StepVolumeEffect &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a8551b31fd27e5002d3a649d220ad6104</anchor>
      <arglist>(const Pattern &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>afda18cb5bffde94695e6cf0c6ef27356</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a49c29084292bc3f309c3dbcd96c7b087</anchor>
      <arglist>(int index, bool value)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getPattern</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a80e3e9bc7f10e67e544b127140ed97ee</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPattern</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a42e6e16aade22805b160db71d507b56f</anchor>
      <arglist>(const juce::BigInteger &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a7fa47bacdfc349758b7c1db59d316573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a22fe1590650995b1a877c3326c0eacbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftChannel</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>ab7cd21eba1c993a091fea280e95a0b70</anchor>
      <arglist>(bool toTheRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAtInterval</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a8f9f5bd39303a3c005b740fc29ada82e</anchor>
      <arglist>(int interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseChannel</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a52f782ba16b8909b89fd87c7e2b09bc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>StepVolumeEffect &amp;</type>
      <name>effect</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a0b0639e53a5489d9efad11c645120f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>ad7bbe919046f164eca5f583e505f3776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepClip::Pattern</name>
    <filename>structtracktion__engine_1_1StepClip_1_1Pattern.html</filename>
    <class kind="struct">tracktion_engine::StepClip::Pattern::CachedPattern</class>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a44fc1b49bcdaf762d10aba79d8761601</anchor>
      <arglist>(StepClip &amp;, const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a9174cfd80f9b26dc92a1aaffd523ec3b</anchor>
      <arglist>(const Pattern &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>aaec8fbb5507f903938d5d8d07377127a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a62486d87e134194ef640eed3dd07ccd1</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3e91808021f7c6b18f21b1262602de73</anchor>
      <arglist>(int channel, int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a778e3e071e3aafd4f650d2a96ca9c92a</anchor>
      <arglist>(int channel, int index, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>adeea669cc880399a1431d8fbb059d005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a2a1eb8e1c8a43624d8a870d4143b7860</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a76442fc98579d153fd81f756b5679d6b</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a8c7e2f4a20ceaa117c13af6ded705dfa</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a339e559b3acf24040a42d0b7ccd48885</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseSteps</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a67f21621764f8c04ff104f6119374000</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a5715b8705d990a98345425ea638968a0</anchor>
      <arglist>(int channel, bool toTheRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAtInterval</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ab047d6ee348dc6c4d75eea19c4cb47ba</anchor>
      <arglist>(int channel, int interval)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0c87fa698279017aff977fdf12a4a24c</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannel</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ae7ad8bb1a35ed6732e496db7d1881469</anchor>
      <arglist>(int index, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a2c6d249c71d2758e3fa4c1c835fe2547</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumNotes</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a1c44f3be1cdde55f799be9d4f1161254</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNoteLength</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ae34450268a74cb923cd910e9fcf596b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteLength</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a6395b63244c079b2d952e33ba04bd818</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getVelocities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a2cac37ab89c8db8c57c1757722755064</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0ff9b13b8c2bfb66f0a0603ed9f2eb7c</anchor>
      <arglist>(int channel, const juce::Array&lt; int &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a8aa3e7a859f5286da106889a79f87dbe</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a18b8a9348471e356d9b2beb44c55b95f</anchor>
      <arglist>(int channel, int index, int value)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; double &gt;</type>
      <name>getGates</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a59f54214f93d0b8f7b8e1cc3054287b8</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGates</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a4463a0196e8908603ebb93161fe680d3</anchor>
      <arglist>(int channel, const juce::Array&lt; double &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGate</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>aeb1b77d5eb046909204732a6fac59b0a</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGate</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>abcccd2ddbc9b4abfa76dea5941558470</anchor>
      <arglist>(int channel, int index, double value)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; float &gt;</type>
      <name>getProbabilities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a5ba0b1cde5fb4a437fe6c4cccf92fdc4</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbabilities</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>af932a6105e44fcab088f8bc8979b2a88</anchor>
      <arglist>(int channel, const juce::Array&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProbability</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0308baf852fe7d88562a6e9bf8cc2d23</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbability</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a48479387bce2f94590a34b70e1a6cdc4</anchor>
      <arglist>(int channel, int index, float value)</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3c1a654f4242dbb91ba9bcf100b8bfb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3339152ffcc4b122d22a844f1d534645</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PatternGenerator</name>
    <filename>classtracktion__engine_1_1PatternGenerator.html</filename>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::PatternGenerator::ProgressionItem</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac6f8919585281ff61acb1ceaa58cf354</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1PatternGenerator.html" anchor="ac6f8919585281ff61acb1ceaa58cf354a3262d48df5d75e3452f0f16b313b7808">off</enumvalue>
      <enumvalue file="classtracktion__engine_1_1PatternGenerator.html" anchor="ac6f8919585281ff61acb1ceaa58cf354ac1b40dcc0012f80aec53213219b680bd">arpeggio</enumvalue>
      <enumvalue file="classtracktion__engine_1_1PatternGenerator.html" anchor="ac6f8919585281ff61acb1ceaa58cf354a4cc6bb18d258bec29c43b8ee90d177e8">chords</enumvalue>
      <enumvalue file="classtracktion__engine_1_1PatternGenerator.html" anchor="ac6f8919585281ff61acb1ceaa58cf354a9eca04f99c3d4532f3a8a11f9d264d12">bass</enumvalue>
      <enumvalue file="classtracktion__engine_1_1PatternGenerator.html" anchor="ac6f8919585281ff61acb1ceaa58cf354a9818e2287e76d37753313e255e2428a2">melody</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NoteType</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea7c09330aeb45c2de5a0a429ea1a52b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordNotInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edeacf352bbe7b9583b29ffc9f0824744e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea82685bef17081c9d3ccd64b443fa0287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea3168d2e93081c889d1e48640def9df9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea7c09330aeb45c2de5a0a429ea1a52b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordNotInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edeacf352bbe7b9583b29ffc9f0824744e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea82685bef17081c9d3ccd64b443fa0287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotInKeyNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1be944e9aed219be3d4904ae1a821edea3168d2e93081c889d1e48640def9df9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a980f9d017cdc3ce94e9416b72336a183</anchor>
      <arglist>(Clip &amp;, juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatternGenerator</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8b32ed572b99df1c1f23913a7556a2d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinimumChordLength</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a781c1c8e9c8f793c37f25ab80dea5c95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumChordLength</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a10378206b2093777897f9b9274566e6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateChordLengths</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aca6d8239b82e34cfd7c598afb5505f23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPossibleTriadNames</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8e7a790be1f8464ef108e8722a03ff6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPossibleSeventhNames</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a68cba6bf3c8e84425012e339a44771a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getChordProgressionLength</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a12cf8e1199c9f79955314e15fe849394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProgressionItem * &gt; &amp;</type>
      <name>getChordProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af4d2b26fe258a85c427cfcd3d8f7dda5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a2634fcebe223f692c7a25eeece93455c</anchor>
      <arglist>(juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getChordProgressionChordNames</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>acd30c9be5268551a49e91485998ec731</anchor>
      <arglist>(bool simplified) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordProgressionFromChordNames</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aa3da43b9bdb78727fdc063895f2d3e99</anchor>
      <arglist>(juce::StringArray progression)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIndexFromProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ab9149855601242f3f950e9353cb90e04</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRangeFromProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a9c9657a8045be68e20b20bcdf783208d</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a66f155170ac8720e1844cb2ed14d9178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChordIntoProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a7edace07523b1e84e2cf0a290d6cc699</anchor>
      <arglist>(int idx, juce::String chordName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChordIntoProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1c32431dfbcea71e8419b710c95bd0d7</anchor>
      <arglist>(int idx, juce::String chordName, juce::String pitches)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveChordInProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac35e713c419e7f7d89971109f61adbb0</anchor>
      <arglist>(int srcIdx, int dstIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateChordInProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a63dda985101cd0552f015b2d9fffecf7</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideChord</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8a8737a1f0388bef6b4133f4ac3a5014</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>NoteType</type>
      <name>getTypeForNote</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8601f350dea112de2b8be0644f0e4157</anchor>
      <arglist>(const MidiClip &amp;, const MidiNote &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>formatChordName</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a5bb1a1709908705b8c1fe8f821b01bed</anchor>
      <arglist>(juce::String simplifiedChordName) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getArpStyles</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a24fa4a0552b41cb4f81a588ff9e36c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getChordPattern</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1000b682e78da44481693b85f068c556</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getBassPattern</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a039523834bc8ad3ff7402cff4d874ade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordPattern</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a755d45495743e63db7af6c5c332d68c5</anchor>
      <arglist>(juce::ValueTree pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBassPattern</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a828c4c675665163dbbd534b6814dab7c</anchor>
      <arglist>(juce::ValueTree pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generatePattern</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ab49ebe284e28b696ad39731d5f831739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scale</type>
      <name>getScaleAtBeat</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a0064db8ac48fbeda5d0a1841d6b57275</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNoteAtBeat</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a5d2ff0bef49439dd19045737371bcc99</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoUpdate</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a6649e33d07988433f6f7f0fc1f163748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoUpdate</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8cfd60d2de44f10d1eb10f645b27fe94</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshPatternIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a6811d571c841774fff59dea33c5ddf46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac4b16c7c17d8c2de4d90366edccbc3ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFlattenedChordProgression</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af3c77cea045c401bf540dc0dfd93bce3</anchor>
      <arglist>(juce::OwnedArray&lt; ProgressionItem &gt; &amp;progression, bool globalTime=false)</arglist>
    </member>
    <member kind="variable">
      <type>Clip &amp;</type>
      <name>clip</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a4ce874bbc66915f7ed311e540b3283b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a565ce88606701277db9d0c22a4668c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Mode &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac786c9f33d5cc570e2a68183d1ec26c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Scale::ScaleType &gt;</type>
      <name>scaleType</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ada0745b45e3cd201af49b2ab77e3a800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoUpdate</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a5d79ebdfec6770338d3bb5fa33f2fea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>arpUpDown</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a3660f9ae5399162c16d98cc2b56c66b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>arpPlayRoot</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af6bc18088ddfde794016a6f035035d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>allNotes</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a5be0d1ebc066da27bd02336ec973ad05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>octaveUp</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aafb6c9eac5f297fa47fa9030f2bc68a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>octaveDown</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aaec80bc326cc4fb4c26c6da6ecc92367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>spread</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aa4d8c319c0a0b34252178a087155b08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>arpPatternLength</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a3cd826b72895294ca5eeae795c9a0a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>melodyNoteLength</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aa93354b09c0b8b981304ba48323bf969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>velocity</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a404ba97526469f1a4f8e2cc301b988ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gate</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a060278d5596b351b73655ea560e69d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>arpStyle</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ae6675e110f4b071f8caf9832c0375c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>scaleRoot</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aad37e5e8fd584ea51cb52e40dce35aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>arpSteps</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a34e9e53ef41faaeb0a9ff9b4ff63adb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>octave</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aa05c70128b2d36c9b7c04413ab0cf2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::int64 &gt;</type>
      <name>patternHash</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>adbf85194b0b9bc2f1b77716db38b8802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>scaleRootGlobalTrack</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a3f34ae9bb6499f208573e061c59d5a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>scaleRootChordTrack</name>
      <anchorfile>classtracktion__engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a3bd71f1e6a3d9564537d17e36717eeb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepClip::PatternInstance</name>
    <filename>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; PatternInstance &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a75c779ad8888a678917c9e329661484d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatternInstance</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>ae0eb8ea6d4d09ed757489f23348c1c61</anchor>
      <arglist>(StepClip &amp;c, int index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatternInstance</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a0c0ba183258badf388466a1901a19dc5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Pattern</type>
      <name>getPattern</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a72a9f62e8f8b80a73461263914b35711</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSequenceIndex</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a9aae6fd5f133cf1a0464558fde91cbeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a01bd16bd78b9caa7605829c4128d36fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a7e453a5f43a12b66fa62613aade0c841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patternIndex</name>
      <anchorfile>structtracktion__engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a64190fa696b7e69b94fe1038bef6cc5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::PerformanceMeasurement</name>
    <filename>classtracktion__graph_1_1PerformanceMeasurement.html</filename>
    <class kind="struct">tracktion_graph::PerformanceMeasurement::Statistics</class>
    <member kind="function">
      <type></type>
      <name>PerformanceMeasurement</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a443b90df8e9026d595a4588fea52ed7b</anchor>
      <arglist>(const std::string &amp;counterName, int runsPerPrintout=100, bool printOnDestruction=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PerformanceMeasurement</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a257bfcea76edeaa9f20bf3608bf339ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>af002841ef4727d6283645675bd495b98</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a8b8921bb752b649cb1a0c12822467f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>abcbac8aaf14b162d819f1cb156c87c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Statistics</type>
      <name>getStatistics</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>abce246eb58b517e2cb2439926f4a5d64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Statistics</type>
      <name>getStatisticsAndReset</name>
      <anchorfile>classtracktion__graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a305ab455f107943cb398bcfa7e70baeb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PhaserPlugin</name>
    <filename>classtracktion__engine_1_1PhaserPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>PhaserPlugin</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a8a115bb0d6db98b41e4abbae8610c54b</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PhaserPlugin</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a364e162cb57725464510af9114700100</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a4e1d537cd9e4c00ed8d4f3bec16a0a09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a8710b60041d41ab1376567ac91c03d3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a7a950a26c919b67a96c78a20af045c03</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a371b9eac3a09df8bf0a74e6ee3855618</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>add395d6c69057198bd88643803a636bc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a1bd747e8f0cf2187d122b91dea24f4c0</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a7b357181778d01a9c2a7715f4e99b4d1</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>aa2ad618f8c7330e293656a19ab1e065b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>aa972553574ad6ff440b93fc547bdea76</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a1c9796640a33cf4549b82ba922fd4f9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>af3adbf56764ed6ea00beb44ebdfc2a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a15b240c9c3d0df7fa83726ce0dfa889d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>feedbackGain</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a096ceaf853ba7032b205f5f8918dd7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a3f38d63fd3152bc503665df56059a74c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PhysicalMidiInputDevice</name>
    <filename>classtracktion__engine_1_1PhysicalMidiInputDevice.html</filename>
    <base>tracktion_engine::MidiInputDevice</base>
    <member kind="function">
      <type></type>
      <name>PhysicalMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a984d6f6881632e26269b9f24129fb196</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, int deviceIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PhysicalMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a02a2c3eb6de5dc6c18d6020bf7272843</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a335d456bd51cebf3fd6cf16558358d82</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingMidiTimecode</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ab5e0e99a5367fd424733813444218eb8</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoresHours</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a5f7ceb9efb86ae3edf34eab3b62e24c2</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnoringHours</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>aed2f4d0ba08dd3b7350082b50d1f9bef</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceptingMMC</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a77d600e7a3477f13b057205c4cf76c1c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingControllerMessages</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a7278469e682ccf1516910ca89765f59b</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableToEdit</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a1cd0a44a41a4c0fa5104145fdd0b9810</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExternalController</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a9537b15097253c24ee0685300764ca68</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExternalController</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a72684e1adddc8f97c4ad2a02399852b4</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsedForExternalControl</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a214296afdd98f81fc7d3aa5d334642e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>abc7e935e332bdd6da800a23d1c684ed5</anchor>
      <arglist>(const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ac80f8182ec8c7a1436b4bfa967e8a862</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>aeaec9603ab6a8a29a52dd595537643fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a0c65683b3b8514e6b3ca50168c5dc0a1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a8fa8b58066791fe3c480312df275142c</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>aa717d86cb51f2748c8d14e01d1808cc9</anchor>
      <arglist>(const juce::MidiMessage &amp;)=0</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isTakingControllerMessages</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a92e978455125cbd19af4512feb324c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a65099bcb20f7cdd3d2e72196a2045f5a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a7ac7083f06cb2106016dfd3976f8fdd8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>PhysicalMidiInputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a14676162bedb8a2028dfb13bdfe0dc53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Pitch</name>
    <filename>structtracktion__engine_1_1Pitch.html</filename>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getPitchAsString</name>
      <anchorfile>structtracktion__engine_1_1Pitch.html</anchorfile>
      <anchor>a3b0b1d31aafc121fdf6370d8492aa73c</anchor>
      <arglist>(Engine &amp;engine, int pitch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPitchAsStrings</name>
      <anchorfile>structtracktion__engine_1_1Pitch.html</anchorfile>
      <anchor>a783d45951d983208b98a338c0b4cc27a</anchor>
      <arglist>(Engine &amp;engine, int pitch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getPitchFromString</name>
      <anchorfile>structtracktion__engine_1_1Pitch.html</anchorfile>
      <anchor>ac2fc507d14710b2a2b4f0aa551c69459</anchor>
      <arglist>(Engine &amp;engine, const juce::String &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPitchStrings</name>
      <anchorfile>structtracktion__engine_1_1Pitch.html</anchorfile>
      <anchor>a31cb4a5dc35303905613f8702e6b8e6c</anchor>
      <arglist>(Engine &amp;engine, bool separateSharpFlat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>semitonesToRatio</name>
      <anchorfile>structtracktion__engine_1_1Pitch.html</anchorfile>
      <anchor>a5dcab30a728286372dd7ad682b83b875</anchor>
      <arglist>(float semitonesUp) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Pitches</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Pitches.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Pitches</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a9691a8f63c8861d75051fb9af2e73d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pitches</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a44746ebd71cfbbae8e453522dc8bae4b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a74c0acc4d5e2642a1aa8331128f0904a</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>pitches</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a181d7d5bdc698129b919f3fd5a81049e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PitchSequence</name>
    <filename>classtracktion__engine_1_1PitchSequence.html</filename>
    <member kind="function">
      <type></type>
      <name>PitchSequence</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a9c4f8f636d58416cabd2ca4453ef5520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchSequence</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a371a93431215c4a7b30e7b7af5377321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>acc90cf795cb43082955740d73a009f23</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeResources</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a84dd12462175122274433ca9bd293d41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a52b9007a566c72305b99142f830ca182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a1e9218fd17807f3911772f9fac0989d9</anchor>
      <arglist>(const PitchSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a12261b6fe091823f0dcefffd47aeb8ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; PitchSetting * &gt; &amp;</type>
      <name>getPitches</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a34780824a97d768114151506c62eac0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPitches</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a11715fb1cea9bab5a313ce57345a0e46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting *</type>
      <name>getPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a725eb7f42da061a80d489dbca965e83e</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting &amp;</type>
      <name>getPitchAt</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a28a9e2e80eda41050f14142c28691dff</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting &amp;</type>
      <name>getPitchAtBeat</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>af6bb12ce60846a8e16d1c907408afd72</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a80b4f2f7524b55d0afa8d62654ad8f1f</anchor>
      <arglist>(const PitchSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting::Ptr</type>
      <name>insertPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a8794a0b3ad65796d17730e432d0e6a61</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting::Ptr</type>
      <name>insertPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>aa5dd3570020a9e06d0e95e677b16ef6a</anchor>
      <arglist>(double beatPos, int pitch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePitchStart</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a0353e44e8abf45ac8363e49e6115adca</anchor>
      <arglist>(PitchSetting &amp;, double deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoSequence</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a72b7ffee033ce509dcb2f6d234616fe8</anchor>
      <arglist>(double time, double amountOfSpaceInSeconds, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortEvents</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a4226e8c3f303cce0c36956a27b389df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1PitchSequence.html</anchorfile>
      <anchor>a58471f1d4f57fad731dfdd9dba5e5fbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PitchSetting</name>
    <filename>classtracktion__engine_1_1PitchSetting.html</filename>
    <base>tracktion_engine::TrackItem</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; PitchSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a1ba55ed5858f86817c5f23a1f46bede2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; PitchSetting &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a504959e9b0280d734ca11cd8b7ee1278</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PitchSetting</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a379a0b889dfebe284a9d06c3187175b9</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchSetting</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a4d4f9cd517cd95d7fab840252c4a246d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a203e95268dedb6b423cef55f44312369</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeatNumber</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a6ec4230af88712053ac29a9508cac166</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartBeat</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a94cbcdf6d6af000a96f6c1b455380d82</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>aee3392a0e09fb395ce95f171372f3ea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>aeb32c5412efd16ca77a4bdf7a940ac66</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Scale::ScaleType</type>
      <name>getScale</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a7e1cd0f15c30c0387e16178235004241</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaleID</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>adcd871d3313df2f52a2bf452838caf5d</anchor>
      <arglist>(Scale::ScaleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a09bf468e8984df450e87c4aca22e55be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a6dc58a2ff94cfaca12b36d112cdaddd8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a8bc958a8d74d285f6276b0fc7b87e619</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>aeb096c98dfad85fbd6952f68d3d3c01d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>afe7922bf3cbcf1f00586553b168d69f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>startBeat</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>ac144bbe527113dba39d2aee508907c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>pitch</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a7a83358ca09226715840ab5e30bef20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>accidentalsSharp</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>a168a116575f1c4b64f4c96fe0763d62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Scale::ScaleType &gt;</type>
      <name>scale</name>
      <anchorfile>classtracktion__engine_1_1PitchSetting.html</anchorfile>
      <anchor>affb5856f0a1c306f059f527cb9a4eee4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PitchShiftEffect</name>
    <filename>structtracktion__engine_1_1PitchShiftEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>PitchShiftEffect</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a9dbeafe6ec0a824eb3586c91157e79d9</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a734cdfe0c80f24a6c4da788dabb44e20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a1bb5ce3418a1a56eab37793eafc4615e</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a9292bdfe3190b9fefebae693245c4fa6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a6c97b84509d5b18547b740bf32f8a594</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a4f9d89c0f169de9b2058b6ebf02b7caa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>aee0147107b5c4c397c9da76ada1d8d5b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a0768d90ffc39c9802bb41984ce1975a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a7511e2d6b2c395f4ea75137455f040b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; PitchShiftPlugin &gt;</type>
      <name>plugin</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a83e6109e061fd2f5042869eef415507b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion__engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a06270ed232d178321c4a5eaaf41a7ffe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PitchShiftPlugin</name>
    <filename>classtracktion__engine_1_1PitchShiftPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>PitchShiftPlugin</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>add993109632f5990e6edfcade3ed6700</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PitchShiftPlugin</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a835a523c30da824a38b737e0a09f3ac5</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchShiftPlugin</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a106ad5e9d6a62fb3965137ea363378c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a347e9a317f250e5fec5dc879796a4320</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a795083c90b8e35311e05961a47f81386</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>ae2db81ad569192e3b42b3f20c1c0567d</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a12d10fc4b1b327fcd2d5d041c6fb7283</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a3de46aa1dcd9b0c5f4d9cfc1b845b03f</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a206543c7ecbf04c788f0baffecade8a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a5bf020ffdc2a27ad6cb35457266c3288</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a59e1274843cc4aadcfe7597465bf7495</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a65f9d6fda045bfa49e1e0a6dae125a69</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a77172d11d3cb6b410edf63cf5d012797</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a43ab2c587730ffbb7c395bae4ee4fc3e</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>abb907fc1c1ac97a1f65c1d44c132b1be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a3e930c3e02719c294720829f44bd6637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaximumSemitones</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a53ac587b1020ef24a64a3a2e68987945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>semitonesValue</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a3818f91abc8d0b50607b8c1083001325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a91da9fa4c6296424c4eaadceed878dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeStretcher::ElastiqueProOptions &gt;</type>
      <name>elastiqueOptions</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a9fdbdc1ff7514409dc55f9c5bda99388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>semitones</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a6a2b27be53c0c4433c0e733651b76bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>ae59e987f5a3f53505eed52db4999f097</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::PlaybackInitialisationInfo</name>
    <filename>structtracktion__graph_1_1PlaybackInitialisationInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>acd346b611cf42f45b7188cc2c04de442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a8797e66809d521e2fff4b67f19996cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Node &amp;</type>
      <name>rootNode</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a4a343e6606f59686571edad950033860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Node *</type>
      <name>rootNodeToReplace</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>ab190874ca5866bf85a249678b7196b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; NodeBuffer(choc::buffer::Size)&gt;</type>
      <name>allocateAudioBuffer</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>ad873e8c7d8f48dd05e1ba7f9c1a2a1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(NodeBuffer &amp;&amp;)&gt;</type>
      <name>deallocateAudioBuffer</name>
      <anchorfile>structtracktion__graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>acde6527ee71f9f918c0f17fc1b6a7e9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PlaybackInitialisationInfo</name>
    <filename>structtracktion__engine_1_1PlaybackInitialisationInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion__engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a0c0e8e330d065ffd233d2d2fab5de08d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a08f5f31736130bafb4f4af72ee8fa43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>structtracktion__engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a65477ee8f88d3fbd7d49ff87adaa844b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Array&lt; AudioNode * &gt; *</type>
      <name>rootNodes</name>
      <anchorfile>structtracktion__engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a461f05fbc8507a1593d6ec791668310b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playhead</name>
      <anchorfile>structtracktion__engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a2be48c8431922cbbb9db65746fd15649</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaybackRegionAndSource</name>
    <filename>classPlaybackRegionAndSource.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaybackRegionAndSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>afe5381d185bbae3579622d8781b83987</anchor>
      <arglist>(ARADocument &amp;doc, AudioClipBase &amp;audioClip, const ARAFactory &amp;f, const ARAPlugInExtensionInstance &amp;pluginExtensionInstance, const juce::String &amp;itemID, PlaybackRegionAndSource *instanceToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PlaybackRegionAndSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>aaf42b3a9bcc6f5807cacfe6b59b68c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a0c2dcf474ad9d2ef5f3ba6b6511b88ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>aa52f420d09ca256da9282358fc995608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewSelection</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a1e558acfdba850e1dc1303a46d859875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; PlaybackRegionWrapper &gt;</type>
      <name>playbackRegion</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>ad0dedeb0835d78450b5db8e9d53304ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; AudioSourceWrapper &gt;</type>
      <name>audioSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a71967fd92948b22f0893cf869f2dfe8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaybackRegionWrapper</name>
    <filename>classPlaybackRegionWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaybackRegionWrapper</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>abd175d8f5b7d81bc04b87ee8f4a89a1c</anchor>
      <arglist>(ARADocument &amp;d, AudioClipBase &amp;audioClip, const ARAFactory &amp;factory, const AudioModificationWrapper &amp;audioModification)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PlaybackRegionWrapper</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>ac2f7bc3df1440be3ef9d718a120e0735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRange</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a04f32a855b991d7d6050a1499eeee519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_MEMBER_PTR_ARGS(ARAPlaybackRegionProperties, color)&gt;</type>
      <name>getPlaybackRegionProperties</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a9647ca6dfac5464946373c70b0391312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARAPlaybackRegionRef</type>
      <name>playbackRegionRef</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a61ba32a728316b6b21bc7e0698281a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>afbffab49c3dc30614f4682fc4ac4e89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>acac88f1add1c57527866ba8c4bfd99cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::PlayHead</name>
    <filename>classtracktion__graph_1_1PlayHead.html</filename>
    <member kind="function">
      <type></type>
      <name>PlayHead</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a48b361497345b73122dcafd3e2dd5311</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a7dcf6694750270ffec48b6caf7d9f798</anchor>
      <arglist>(int64_t newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a395a9a4db00ef068e4d8ec6d017ce510</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; rangeToPlay, bool looped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>af75c44c7c998572fc3755b2e429db173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playSyncedToRange</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ad6dec456f50f8dba7098d17548e78ece</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>aa7f4838636531ab535c28dc6c6f58edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a07521ae33c8b29ad1f2d84a50d211389</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>aaeb91e790df27a7d56d5b6d06433c96c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overridePosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ab6307689ec58924940e50237a8404828</anchor>
      <arglist>(int64_t newPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a401d9b68183b0e646bbea02d2e542499</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a672cafd2e1c46e0c98822256368d69c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a0b2da7862726579fd7607cd16a26f22c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRollingIntoLoop</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ac43fda14f1b2ddab20fec134d4101e48</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a7a1e7c47a7a8cb7c664a80a53d41760a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a3d6b0d6106e851d8295204ff28c77e94</anchor>
      <arglist>(bool loop, juce::Range&lt; int64_t &gt; loopRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRollInToLoop</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ac4b0a9ac8c205c572e98e78ee03ba766</anchor>
      <arglist>(int64_t playbackPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserIsDragging</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ad3abde7168128cd95c9647516bd37756</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a19b6f07cffc3ffb087a434ae515ee986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getLastUserInteractionTime</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ab674d1d160aa744af737b23853cab9e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrubbingBlockLength</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>aac31cffd9e173d5e42b6b8715912897c</anchor>
      <arglist>(int64_t numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getScrubbingBlockLength</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ab68d43507336e543d1594c8e9d3f2302</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>referenceSamplePositionToTimelinePosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a6d2ec7e7be49b6a98f2906f377d74e2b</anchor>
      <arglist>(int64_t referenceSamplePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>referenceSamplePositionToTimelinePositionUnlooped</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ac986dad9321ff582abe431a76cdc89fb</anchor>
      <arglist>(int64_t referenceSamplePosition) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRangeToSourceRangeUnlooped</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>ae7c25c9a937e76ce932212cf7f4c89e0</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; sourceReferenceSampleRange) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferenceSampleRange</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a356593bd710fa4b6d366155fdebe6437</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; sampleRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getReferenceSampleRange</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a04148bf63614338981998482a2582925</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getPlayoutSyncPosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a5ad1c0664e0862414cbe04d7e7396fa3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int64_t</type>
      <name>linearPositionToLoopPosition</name>
      <anchorfile>classtracktion__graph_1_1PlayHead.html</anchorfile>
      <anchor>a46b1473fbcda0baf4e90598516bb0d1b</anchor>
      <arglist>(int64_t position, juce::Range&lt; int64_t &gt; loopRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PlayHead</name>
    <filename>classtracktion__engine_1_1PlayHead.html</filename>
    <class kind="struct">tracktion_engine::PlayHead::EditTimeWindow</class>
    <member kind="function">
      <type></type>
      <name>PlayHead</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a6171b0f80f9112062e490a7c08f7e1f7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a8ed42d35d1f92e62cbc7fe0a20bfbba9</anchor>
      <arglist>(double newTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a3184a96591e5c619fbda07d1eacd1da7</anchor>
      <arglist>(EditTimeRange rangeToPlay, bool looped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a8bd376f325912fb0c485f0e3f99f9264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playLockedToEngine</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ae7e6d627c31531997e1e52bb44fe47bd</anchor>
      <arglist>(EditTimeRange rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a2d36bab8ea4e4e4690b5e0b7d713d31f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserIsDragging</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>afaa74845b74dc3e168662fec1eec684f</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a485fca3f6d617dfbbb6262796a6ff89d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getLastUserInteractionTime</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ab8af2d9290cb8ec0e75c4a03127906cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>streamTimeToSourceTime</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a9443545cff0c02b40328084abd669e2c</anchor>
      <arglist>(double streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>streamTimeToSourceTimeUnlooped</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a28c1f7289e32460dd4390349fa24b394</anchor>
      <arglist>(double streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeWindow</type>
      <name>streamTimeToEditWindow</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a5b64e11b1b4993c4cb8b6a3556da7f2b</anchor>
      <arglist>(EditTimeRange streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>afd2de1032c79cffeee8d930ddc7354b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>af413e349d4b0c52d335f9dab09e8bd1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overridePosition</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ae2dc1b8dfc41531a8e5405d26e2384db</anchor>
      <arglist>(double newTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a685cf9d173cc6a2fd4cde9439391192d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>aa0f007bbf786b4bec75d1bf98c2ed8ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ad9faf135566f56891a4c93b636c6f82d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRollingIntoLoop</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a1f32dda1d5e2b59987d9399d6e95e365</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getLoopTimes</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ab2e3718a1e296a357843989690300bbd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopTimes</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a2361eaf5d5eea5343450725e663e6f74</anchor>
      <arglist>(bool loop, EditTimeRange times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRollInToLoop</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ab1875d856f520976cf1e6647e4b7081c</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deviceManagerPositionUpdate</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ad7d2734d25d967afe151ab7340bf0e19</anchor>
      <arglist>(double newTime, double newTimeEnd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>linearTimeToLoopTime</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>a63de42aa37dcbb1cb49354738a9172f3</anchor>
      <arglist>(double time, EditTimeRange loop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>linearTimeToLoopTime</name>
      <anchorfile>classtracktion__engine_1_1PlayHead.html</anchorfile>
      <anchor>ade252ca6f203c40f7d3fe33cdbbb1686</anchor>
      <arglist>(double time, double loopStart, double loopLen)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PlayHeadPositionNode</name>
    <filename>classtracktion__engine_1_1PlayHeadPositionNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>PlayHeadPositionNode</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a0a8cae5635bb6b8055b3b11e9df24f50</anchor>
      <arglist>(ProcessState &amp;processStateToUse, std::unique_ptr&lt; tracktion_graph::Node &gt; inputNode, std::atomic&lt; double &gt; &amp;playHeadTimeToUpdate)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>ac714f51d78063e055a0dde3627d20bcb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion_graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>aa0dabde5bb0842550a8307156e632364</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a8c2d0a712a63d250efd02f1999a09b99</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>acea8b22ce7afc7b254a209fdcd6d569e</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>af3753e1a98b07f5ccd0a097e862f5210</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::PlayHeadState</name>
    <filename>classtracktion__graph_1_1PlayHeadState.html</filename>
    <member kind="function">
      <type></type>
      <name>PlayHeadState</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ad8d06dee0a6c6ea03110f87aaf78163c</anchor>
      <arglist>(PlayHead &amp;ph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ab84b24b8bad27dfe1dab1918992d98a0</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguousWithPreviousBlock</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a6cc98c3853bb60ef6b40319319709114</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didPlayheadJump</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a387c7460d739e057a6ad2d458f16c45a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFirstBlockOfLoop</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a623a762192410cad76993b3cae3e015e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastBlockOfLoop</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a23bd14f31671bd3b0b92b64e371a2e15</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playHead</name>
      <anchorfile>classtracktion__graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a4ee79389ecf6b70e199e30d9754e9e2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Plugin</name>
    <filename>classtracktion__engine_1_1Plugin.html</filename>
    <base>tracktion_engine::Selectable</base>
    <base>tracktion_engine::Exportable</base>
    <base>tracktion_engine::AutomatableEditItem</base>
    <base>tracktion_engine::MacroParameterElement</base>
    <base protection="protected">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::Plugin::WindowState</class>
    <class kind="struct">tracktion_engine::Plugin::Wire</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a17ac29b5ddf4c9bb692922f797c55483</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1Plugin.html" anchor="a17ac29b5ddf4c9bb692922f797c55483a1b0946070001f7747fcbd4dc1478d74d">allPlugins</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Plugin.html" anchor="a17ac29b5ddf4c9bb692922f797c55483a585279d417834861136f0a63c58084e4">folderTrackPlugins</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Plugin.html" anchor="a17ac29b5ddf4c9bb692922f797c55483a3a8e78d30b23e2d43dd5ad82426cb506">effectPlugins</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a97f7d1afcf0045b5f21a027d58b0c072</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Plugin &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af7cceeba3a734d2accacf3f3a34bf5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plugin</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1a9cde35314bd377d1896f18b5df10b3</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plugin</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>abc35730488e7cca2d703ffc8ab9320e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a0a341faa22e96985c691a0f8d92f0356</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStartedOrStopped</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a426b4e3b3e3e16dfe104208b259c4ddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a25088ee76c543b9d84fc845125b164da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aa992bf7476e1cee72e6bacab39c2fb30</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acfb5f210ae29dd77a166c9c94d1077ae</anchor>
      <arglist>() override=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ad9bfb32587c3923d2f4d245bee2f31f1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getVendor</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a105997683d00eb91af6772a9f02cbbcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4d43fc286eec8417f87751cf16290594</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getIdentifierString</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af4521ff4962be2c8a3783af41c4d3a53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ac8a578190d161afdaca38ef782738468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a7dce115871aa0b824d6fd3f7a6b70ad7</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a5bcd0a82fc323fb5c4f1882933f3583b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a3f799fccbab5844aa9a6d962cc169b76</anchor>
      <arglist>(bool shouldBeFrozen)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae6656dae1200f213f13d6462512bf023</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessingEnabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a3c35b10b147481ae312fff25351b280d</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProcessingEnabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acceba65c8a65dd34ff7fbd45d1bc336f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aaae7318289eec497e2bae41da2135c3f</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ad36323cb56767514bea5fbfd82c0b9ac</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a42c2eaf3ab559e7f393606340853c0eb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae205cd44a0bfddeb5ad40bbfa0b7969c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>afe5319659f633b941474518f0a21408a</anchor>
      <arglist>(const PluginRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acd28773b3b7a5d7316f61e4566ffdab0</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBufferWithAutomation</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acff9936f7ed124188c0259cce7e0f2bd</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a6da73412e032ee34d2e3a11e4a1b955c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aa52d90e04c316e955773d1d225d12f07</anchor>
      <arglist>(int numInputChannels)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a5314d935383c67c29223dbd9bf795905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>noTail</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a9f841e4a64a6283697478187dfe31276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a6d1741e49102e7118e27ab109fb43fb9</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a46190224ff8847afb4d3c188e89790f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aa3cf33028b3cc5657c877ba7e1217233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aabf1e8563929a5ef3a8fc1e411f3a7a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>afbce44fd6f67ca2af4b3c4bfc6a40233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a9bf4119d5a51e064bef7f7b82326e75e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSidechain</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1fa15dcc524ce17df7e13fda1083c8fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputChannelNames</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acb6f522296753aa2edf7c72ce6b052ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSidechainSourceNames</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a5a28e364028135d41471d445dff0be9e</anchor>
      <arglist>(bool allowNone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSidechainSourceByName</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af87cc4031df60793e31b554fe766a553</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSidechainSourceName</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4189923cc4ffd8bc77aed28da826cb0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guessSidechainRouting</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1156188add8b33723085ed8b50bd09b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWires</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af6ffff6b3d0e8705b9e697b4e7975f2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wire *</type>
      <name>getWire</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a5c16a8bb501d051aa23a7659b2b1f042</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ac0f2a3b8093f0b4d506b0d4f66b4333e</anchor>
      <arglist>(int srcChannel, int dstChannel, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakConnection</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a108ad2d8384bcff36adcce9ce31354dc</anchor>
      <arglist>(int srcChannel, int dstChannel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae731897d05e7bf65546dfbcf112fe6e6</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiProgram</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a86c648639c9a01f75610bb1b77b6d5bd</anchor>
      <arglist>(int programNum, int bank, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiBank</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a77cc46e7ba99aa8d2c57ab79a45a6116</anchor>
      <arglist>(int bank, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae5335ab06cd66b5bc9d6a6bceb0532f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4fc79f888911072cdd0ca37f4102600f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1c60b760cae2a56fbbb681c608ab4adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToMaster</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a7082ea1d9ef7a038eebea44f68191c0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a0dfb88071832952f3fc07e4b5e8ec36a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a9427675bda9c7015ca3a6510262872f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ab86cefbe41a9fef512bdde55245a48b1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMissing</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a899ee168922e4b32dcc382427b86830a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a20e0e280c0b06173312567e9a91770f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInRack</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4190359b8543ae06ad3779347a247b9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>getOwnerRackType</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a3da659d5e9284ff9bd99e0810beb6543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClipEffectPlugin</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a6413755c447d43eb27a24aa74730b931</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::AudioProcessor *</type>
      <name>getWrappedAudioProcessor</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aa20b5ac2bca47ba7728976ec5ab09d5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getQuickControlParameter</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a96230da62efd96997304cb5ce01719e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuickControlParameter</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a31ed3f6b5f15b9ccfb457986e2e2f7af</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFromParent</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a2be7127323f92b193c9aada7471e5b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromParent</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a7a39e6ac7d44a45d10bfdef42d56e60f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getOwnerTrack</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acdf06ef87616def0f1aa002da38f9988</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>getOwnerClip</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a6a64b89923148a13569c2171a8742bf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginList *</type>
      <name>getOwnerList</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>afb6bbba58e24d940b66e11ecd4aa7050</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>findPluginThatFeedsIntoThis</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a0bb5d3feeba74badc1cb5791b139b737</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>findPluginThatThisFeedsInto</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a838a7ee10c5e920a8996a3eed7ceaab6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae45311e2b74688f7b8db29262a2a44d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a94dceef2a7a5fc1c162cdfb9314caa72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a80f9d24b78428dc872fb2607560a907a</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ac4e103af7068429bf97a6aee63e92972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPluginToMirror</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a57a6c565602d34f206f0f893916901cd</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateFromMirroredPluginIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4bed1289798000bf634b196b503af1ad</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getMirroredPlugin</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ab63df863650b60bd9646eba542c188f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseClassNeedsInitialising</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a9fa7dcbf68b7ebf2805ee3e97e2d4d61</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassInitialise</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a8bdccb69d92772e4b6f69fad09a81162</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassDeinitialise</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae3be7cb46294b445eece2be76d020c9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSidechainSourceID</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ab79885c00560979951542c02d3a81c19</anchor>
      <arglist>(EditItemID newID)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getSidechainSourceID</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a0dd2375e143f68f23ce6975b4f5dd257</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showWindowExplicitly</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af0b8c2e5e220b4204e8e6fc1935bf9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1d4b238095e200ab3394aa757e781858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a7d42b792896d56c4f67036e73443a3eb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areSelectedPluginsRackable</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a755f1fc6e945c99d1bd47b988e8d2276</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RackInstance *</type>
      <name>wrapSelectedPluginsInRack</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a6c6d550c6af01e3f14c1b957826343f2</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortPlugins</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a7d5681f9799d50ec53f578641d05828e</anchor>
      <arglist>(Plugin::Array &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortPlugins</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1eda84babeec2a54983312be1fd0fc6f</anchor>
      <arglist>(std::vector&lt; Plugin * &gt; &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; WindowState &gt;</type>
      <name>windowState</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aead28aeeb44c200b4b153ed589cfd86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>acf14a37e03a08e96a8ff27df0e618a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a3cb7ee185c073fccc6d030772bedca61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a1541420112fd5f1a02a804ebf9324d07</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ad6d7badec4fe916301d4d5b850008a98</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>adf7bbb40c45a3d867120cf261e5ff4e2</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a5d0b5ac4c96287d40d93449217cb570f</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>af25a15ac069a70cb0abc07248a60a390</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processingChanged</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a265c27787e954495bab8f1bb13948c55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AutomatableParameter *</type>
      <name>addParam</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a4fa16e311b2b144bedfa2befbcf0da55</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, juce::NormalisableRange&lt; float &gt; valueRange)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AutomatableParameter *</type>
      <name>addParam</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ae9b4c4da2f249996e4dc7c7410da3053</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, juce::NormalisableRange&lt; float &gt; valueRange, std::function&lt; juce::String(float)&gt; valueToStringFunction, std::function&lt; float(const juce::String &amp;)&gt; stringToValueFunction)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>getLeftRightChannelNames</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a01bcdad54443ef19f1fa057fa4c57965</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>getLeftRightChannelNames</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a08b8a24360761d43873dba55c6cdc273</anchor>
      <arglist>(juce::StringArray *chans)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>enabled</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>aa67513f32682c1cfc6dfb7cf6367ef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>frozen</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a02245a0a6431793b32f9419e81543a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>processing</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a377f442af6e4e8fe45f47936c19dbe5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>quickParamName</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a265437114f31b726a8c0f3e6cad2df9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>masterPluginID</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>adae1e747ffd16684435832adf9105ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>sidechainSourceID</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>ac9d4c0a71555dfce8a66b307e2add09a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a0a6801bc96f01c62ad843b80070646c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>classtracktion__engine_1_1Plugin.html</anchorfile>
      <anchor>a9817a852578f019ab368b4f50f98e411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PluginAudioNode</name>
    <filename>classtracktion__engine_1_1PluginAudioNode.html</filename>
    <base>tracktion_engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>PluginAudioNode</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a100383e36775284a8f35110301a8c384</anchor>
      <arglist>(const Plugin::Ptr &amp;p, AudioNode *in, bool denormalisationNoise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginAudioNode</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a2453a5c1953730a8c93b327b27b29453</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>afdbdc46af29f3c76fbb68fc062b6f655</anchor>
      <arglist>(AudioNodeProperties &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a1cbea53c7d094aea20c0ee9129677e51</anchor>
      <arglist>(const VisitorFn &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a50966c6b4a9b4d3e4f91583ba32e4c62</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a32d65124440786c3108118930bcf325d</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a7f93a9288231b20027d27fa485bddf95</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a376bfcb7d603dea27710c6fb9d9b3445</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a18966b0319e64bb85cae3cb74c6b8287</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a1c84937cc36b36013cc061f6b13f2b03</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>aaa641c7a45a26c33afa279d70d1dbf19</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>aa8648b7ca2490c50a86fa47490cccad2</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a3e865a1d2a3eac67ddc0b0537e8efe48</anchor>
      <arglist>(const AudioRenderContext &amp;rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a19594f6798adf692bca94433d158f93b</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PluginRenderContext</type>
      <name>createPluginRenderContext</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ad5f5ce9f344fe07996e2a95aaf603818</anchor>
      <arglist>(const AudioRenderContext &amp;rc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Plugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ad775e84489d7ff96b59c88669784333e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AudioNode &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a0d3760a69ef0631161f7731765bfd409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasAudioInput</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ab6c6e4e0f40d38c71061e37677a15b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasMidiInput</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a58ac5e9c85348639823332dbb57d12f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>applyAntiDenormalisationNoise</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ad097162658c010f837b453080b26068d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasInitialised</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a267b3510bba6ff839c8be9fe09f75134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>latencySeconds</name>
      <anchorfile>classtracktion__engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ac66592ff76b2f57e45d43af7ba0ba7c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PluginCache</name>
    <filename>classtracktion__engine_1_1PluginCache.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginCache</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a407278beb3238ad7f75c23ccbf74fb29</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginCache</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a67f5f968d6feda721797122f9c581ff7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>aa6c3c82a503556770b995da5e8e6b8dc</anchor>
      <arglist>(EditItemID pluginID) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>aeb37592ea7f210e3f64569975d6bd5c2</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a64c8cb717310657c08779d2acbac9840</anchor>
      <arglist>(juce::AudioProcessor &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getOrCreatePluginFor</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a45cf3c9012bc36bf17bfd50338c350bb</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a0acc46216c4bea45b4e58a7e88bb86ee</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a5ba2f1b97451499986b4302a002b2380</anchor>
      <arglist>(const juce::String &amp;type, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a62fa69e7e5e55216db34e84db16c6245</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const Plugin &amp;)&gt;</type>
      <name>newPluginAddedCallback</name>
      <anchorfile>classtracktion__engine_1_1PluginCache.html</anchorfile>
      <anchor>a754b76d856c82800b21cea9d5d63b99a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginComponent</name>
    <filename>structtracktion__engine_1_1PluginComponent.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginComponent</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>a091f66f2ca1cdc29a5a041f5ac72bab7</anchor>
      <arglist>(Plugin &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PluginComponent</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>a4ef2d243645bb73782006bd1f7589d28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateColour</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>acb4a86e2fa500959e765da70ebd1162e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PluginComponent *</type>
      <name>getComponentFor</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>a9bc1149f613e35b13c02da48db639edc</anchor>
      <arglist>(const Plugin &amp;p) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; PluginComponent * &gt;</type>
      <name>getComponentsFor</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>a7f1ff23749e7b851a9eadf26aaa04f01</anchor>
      <arglist>(const Plugin &amp;p) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Plugin &amp;</type>
      <name>plugin</name>
      <anchorfile>structtracktion__engine_1_1PluginComponent.html</anchorfile>
      <anchor>a3e275f87d52c6b6afc580b70cb30956a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginCreationInfo</name>
    <filename>structtracktion__engine_1_1PluginCreationInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a307f6935622dd3263889ef2e8161dca1</anchor>
      <arglist>(const PluginCreationInfo &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>ad3259622c54f055e164551145061c3de</anchor>
      <arglist>(PluginCreationInfo &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>PluginCreationInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>ae2400b9fc0d88663bb188d1eee3fc026</anchor>
      <arglist>(PluginCreationInfo &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>aebf28a701ea0c5bf7f70810c9643e715</anchor>
      <arglist>(Edit &amp;ed, const juce::ValueTree &amp;s, bool isNew) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a3054e6b9c4b743d6137fa549cb518477</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginCreationInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a81683c2978b95d9f6e6f638ad51bca2b</anchor>
      <arglist>(const PluginCreationInfo &amp;)=delete</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a224d819e3e503980625ef8c1ad63d7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a128931ff99b1f53fd8236b2bd78d64e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isNewPlugin</name>
      <anchorfile>structtracktion__engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a0835e0a6c77f94d559ac08a722a58de6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginEffect</name>
    <filename>structtracktion__engine_1_1PluginEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <base>tracktion_engine::AutomatableParameter::Listener</base>
    <member kind="function">
      <type></type>
      <name>PluginEffect</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>ad18371e44406648d0effa821f56e81f8</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a820a3fb8c419e1dbb5a5a845f2d8a7cb</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>ab260674bcb3689069d3452dc87c1fce8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>ab96bb415c4b3aa59920f620f557ced60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>aa98026116dae26687e4778e22eea5f1f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>abdecd7c385d519a4979ec6785f09e37b</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a4f34aa06f6199d71f763df8329f7000c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>afc364c21cc79b7e01f73df730844c538</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>ab32832c09f5110c459b68a1e5066e8db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>aeb5f95539eaecb9538e652be3b644105</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a12bca153a76a306a987214dc9a6cc91e</anchor>
      <arglist>(AutomatableParameter &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>Plugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a9d32e6987f88871b14604092b54363e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a71b9ff99b529205ee5a126474abfa995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; PluginUnloadInhibitor &gt;</type>
      <name>pluginUnloadInhibitor</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a751e2fe23df72ef24fccda4a958dafad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>currentCurve</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>a9ffedbfaba59d4cc46d22d218474afd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::int64 &gt;</type>
      <name>lastHash</name>
      <anchorfile>structtracktion__engine_1_1PluginEffect.html</anchorfile>
      <anchor>aa1bbd807ba13eadc964dd9c950453315</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginInitialisationInfo</name>
    <filename>structtracktion__engine_1_1PluginInitialisationInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion__engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>a5b57b7785358de0306f861edc35b7af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>aecb8d44d789e9d18dd0ec8776c68e812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>structtracktion__engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>a88db6628918fc4fb043dc05d2f8eeeae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PluginList</name>
    <filename>classtracktion__engine_1_1PluginList.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginList</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a81e5ddeec86449d45ef99ab788c273bb</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginList</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a44c70c239866bed0212b059aaf987cac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>aaaca27ebfb0d1091a3a73f9f98447c8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>getOwnerClip</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a5c7e212356a6d16c4def71a106d4232e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getOwnerTrack</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ad839a5b8182bef90ee1f1b01e64a45dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>aa1c54149f2f95ebb0b2dbcd70ab562d9</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseObjects</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a8336772e06c4903f1ce88fe8771f8921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackAndClip</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a56c6ee1e150bc681c0b4bc2665b7bedc</anchor>
      <arglist>(Track *, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Plugin **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>aa70e0c53e356f733b7ee14c6c5eaf660</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a0802bf7979c952cc268d6ff7aed43169</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a70174df732513fb65c747b50e01f0af9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>abdc326c7044e66c6e82996da39e0b237</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>aa69ea866147c51e62bd01c2a96cdb379</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ae4384b8b8e751a0534a3c93feae9a470</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a1e9dfa4bf07197a75a05839eb0f22e60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a1ad3d9b95ab6cddb80f00199d36dfafc</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a2c96447b24bf63d8a798582b26ecd20f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ab65f2af8f54e46b6cc1ae272b7b34e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canInsertPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a39b1444ad57fcd0d52c913ab6f27395b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>insertPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ab0b48da386dc3fda525de28421a28d8e</anchor>
      <arglist>(const juce::ValueTree &amp;, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a5f1b9874445e75df1f477aa3f9dd83fe</anchor>
      <arglist>(const Plugin::Ptr &amp;, int index, SelectionManager *selectionManagerToSelect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDefaultTrackPlugins</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ad4f670b72e4a3bb46b5cfd1dde776943</anchor>
      <arglist>(bool useVCA)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPluginsFrom</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a24b69be3e529c9cd1968443e1b806f02</anchor>
      <arglist>(const juce::ValueTree &amp;, bool clearFirst, bool atStart)</arglist>
    </member>
    <member kind="function">
      <type>PluginType *</type>
      <name>findFirstPluginOfType</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a02fc05bfde2b30988c704bc88d5cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; PluginType * &gt;</type>
      <name>getPluginsOfType</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>a399e74cc9d8519a8b538e948f9c1e77e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1PluginList.html</anchorfile>
      <anchor>ad58a91dae5025ff5ed1603a861a3d494</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PluginManager</name>
    <filename>classtracktion__engine_1_1PluginManager.html</filename>
    <class kind="struct">tracktion_engine::PluginManager::BuiltInType</class>
    <class kind="struct">tracktion_engine::PluginManager::BuiltInTypeBase</class>
    <member kind="function">
      <type></type>
      <name>PluginManager</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>aec0dce5c73658e600c2a08e67e86998c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginManager</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>ad357166d55efd2db21ba34342bf5d174</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a531d444a2f20f8fff7a6026a9da6a0a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areGUIsLockedByDefault</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>aef284a4c3ecfc1144a454c44bd752f74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGUIsLockedByDefault</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a78022378bac442ffc6888f99d21b649d</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doubleClickToOpenWindows</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>aee2411ca40c01b1732cf1287cfefed58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleClickToOpenWindows</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a00e2574b6c3b83d697be9315cb50647f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfThreadsForScanning</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a403f974190e57956abd5c8ce85653d5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfThreadsForScanning</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a32845e985c04543525ba1ee93ca9b7e2</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSeparateProcessForScanning</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>ac1905d86ad52cc697705e53725affb49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesSeparateProcessForScanning</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a9a0325d687254331d2213778a4d84494</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createExistingPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a1afd1202413101a712e0c2a0e00bbf40</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a10dd69ea0dbc6357a7bf8462fdd9f45b</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a5d9d11ffb334d98bacf2843b337db0ad</anchor>
      <arglist>(Edit &amp;, const juce::String &amp;type, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::PluginDescription &gt;</type>
      <name>getARACompatiblePlugDescriptions</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a360dcc62d12c63a5d9269ea8a6905f90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBuiltInType</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a197644fb5904e3b11ef39ee9a783dd11</anchor>
      <arglist>(BuiltInType *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBuiltInType</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a73979e75c282e3fe986487456c0b53fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>startChildProcessPluginScan</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>adc435dd94deec2534661ac4c979e17d1</anchor>
      <arglist>(const juce::String &amp;commandLine)</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioPluginFormatManager</type>
      <name>pluginFormatManager</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a4cf253bb97f8d1004612665b445bc80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::KnownPluginList</type>
      <name>knownPluginList</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>ab320268b14d29669d6f7a21e64673356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; std::unique_ptr&lt; juce::AudioPluginInstance &gt;const juce::PluginDescription &amp;, double rate, int blockSize, juce::String &amp;errorMessage)&gt;</type>
      <name>createPluginInstance</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a49badd2206e304ab9312e50799f950f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(Plugin &amp;)&gt;</type>
      <name>canUseFineGrainAutomation</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a48e5b92cf6834ed5be2edfb92f1402a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>scanCompletedCallback</name>
      <anchorfile>classtracktion__engine_1_1PluginManager.html</anchorfile>
      <anchor>a6a74724ed9b2ba77faba808e6425ef10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PluginNode</name>
    <filename>classtracktion__engine_1_1PluginNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>PluginNode</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a03008efa59ebf6f10ac2b51e808f39ad</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion_engine::Plugin::Ptr, double sampleRateToUse, int blockSizeToUse, std::shared_ptr&lt; InputProvider &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginNode</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a339a3329eee54828012fe9486cc48813</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion_engine::Plugin::Ptr, double sampleRateToUse, int blockSizeToUse, const TrackMuteState *, tracktion_graph::PlayHeadState &amp;, bool rendering, bool balanceLatency, int maxNumChannelsToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginNode</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a6fee8745f0512058615cc0317e0db9a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Plugin &amp;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>aaf65e61d295a838e8f06d0ee994d8e02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a1006c3269625d2b72776b8722e2fef2f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a79c19f03e78aa6bb2ac90c1937f0f968</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a4fbdee7b1ec15c19a53844e7d8cabbcd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>ae195fde13ec549133cedbb669a1fc4eb</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>a628db384388e56f19ea8fdd8ff2651eb</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1PluginNode.html</anchorfile>
      <anchor>ac7a4e071acb03561681f4827282b1652</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginRenderContext</name>
    <filename>structtracktion__engine_1_1PluginRenderContext.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a27c8d0720380cc06dba22001cb97ebb8</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; *buffer, const juce::AudioChannelSet &amp;bufferChannels, int bufferStart, int bufferSize, MidiMessageArray *midiBuffer, double midiOffset, double editTime, bool playing, bool scrubbing, bool rendering, bool allowBypassedProcessing) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a7bae06447ea20d2603bba9517cf68328</anchor>
      <arglist>(const PluginRenderContext &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>aef4ac1738797be65f99ce0f3d95e3970</anchor>
      <arglist>(PluginRenderContext &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>PluginRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a6b1a80313cab2f39ccb0af02d16fca91</anchor>
      <arglist>(const PluginRenderContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>af1d52abb711ee95362108cae38c60dd4</anchor>
      <arglist>(PluginRenderContext &amp;&amp;)=delete</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; *</type>
      <name>destBuffer</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ac5831241da0e509d18b3ebbb62d57020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>destBufferChannels</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>aa740bf8da1991a36c6f4838f12c42dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferStartSample</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a5605b67d450594af5157694950077676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferNumSamples</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ac0ba76d4b6fe02453d95c29aa526d8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiMessageArray *</type>
      <name>bufferForMidiMessages</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a7929e1992a3ef5a03d4c8d98bf8e4d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>midiBufferOffset</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>af9d000bb484dceb5c4af43674818a0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>editTime</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a5aee0ec8e10dec74dcff0342c2f0f8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a664653fc2a927d947940ca33e28f28f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isScrubbing</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a802d468cb3816951a8e1671849b66b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>abd2ddc2cd9e9629879fa8cfdaebb4318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowBypassedProcessing</name>
      <anchorfile>structtracktion__engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a4496bac2de519627c3d18d51d0c9455b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Plugins</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Plugins.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Plugins</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a7a1a90f9cfe92a4ea203c6b76abaae41</anchor>
      <arglist>(const Plugin::Array &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plugins</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a96fe8da88347c517ec4176c7857407b8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>af7faacd1829f399ef2d46c08ad1d6348</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>plugins</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>ab6467387d425c82e3d1b2dc716cddfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; Selectable::WeakRef, juce::ValueTree &gt; &gt;</type>
      <name>rackTypes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>ac0d4eab7039473e1fac56297f7b3f547</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginWetDryAutomatableParam</name>
    <filename>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</filename>
    <base>tracktion_engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>a987872dce72097dfff1b71e7e24d5334</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>af0e591c75746f20499f70855eb1ebd9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>ad6cf2280290235ba527291d4c2a663d9</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stringToValue</name>
      <anchorfile>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>a0ea5707caaac2425aef5fef73aeb58d5</anchor>
      <arglist>(const juce::String &amp;s) override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion__engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>a41456a7e715f4405aec14b8ea529789b</anchor>
      <arglist>()=delete</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PluginWindowState</name>
    <filename>structtracktion__engine_1_1PluginWindowState.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginWindowState</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a2c680e63bf1769a5718c94466f708227</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pickDefaultWindowBounds</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>acfdf0147e1b657dd9d410cebde89642d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incRefCount</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a6a8a73317de305a6b24cb53f916e3f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decRefCount</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a9f3b04ff8885a5ea9ef1b40e36c013f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showWindowExplicitly</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a858a8e7df0a3b4f1c59b7e80d332d89c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeWindowExplicitly</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>adf1cf841876e69f42993cf95edc12fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWindowShowing</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a851afa640abf4ca73343a647745591f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recreateWindowIfShowing</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>ac928bf7f89a6a214f858e82268094439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aaa44987532b253fa20a63f2aada554ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginClicked</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a746e7eacf9ee1757fbfa966c3c5ab7d7</anchor>
      <arglist>(const juce::MouseEvent &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aad6d999d919f87aefc62a821ac97d112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a40510610b2ec7d42c214f80342084377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::Component &gt;</type>
      <name>pluginWindow</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>ae9bd8fddae69cbda6efb53453019df15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>windowShowerCount</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a9a4b91561d45d680e94e2507393b8cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>windowLocked</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a375eedae80444109a3fbb15b761231d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>temporarilyHidden</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aae76f0e53c5f71b9ff10424bf044b3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasExplicitlyClosed</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a9318897a71fa9d0faf8378d5822d9382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Rectangle&lt; int &gt;</type>
      <name>lastWindowBounds</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a5834fcc291449d3db67f8ecc262f601b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Time</type>
      <name>windowOpenTime</name>
      <anchorfile>structtracktion__engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aa1d78008d31dd015134eec9c03cb1d73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::Node::ProcessContext</name>
    <filename>structtracktion__graph_1_1Node_1_1ProcessContext.html</filename>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRange</name>
      <anchorfile>structtracktion__graph_1_1Node_1_1ProcessContext.html</anchorfile>
      <anchor>a36f31dac7451c773b175377576022de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioAndMidiBuffer</type>
      <name>buffers</name>
      <anchorfile>structtracktion__graph_1_1Node_1_1ProcessContext.html</anchorfile>
      <anchor>a66de1f0f7d31c6c64e30a654764702be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ProcessState</name>
    <filename>structtracktion__engine_1_1ProcessState.html</filename>
    <member kind="function">
      <type></type>
      <name>ProcessState</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a1fe29d98017ae61a5db84273b4070f57</anchor>
      <arglist>(tracktion_graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a86f2e115f95cfc011fa11cd55e602109</anchor>
      <arglist>(double sampleRate, juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="variable">
      <type>tracktion_graph::PlayHeadState &amp;</type>
      <name>playHeadState</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>aabad5029e1de0642c1b85428b80fbe3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>adeaa765ce3ac71649aa6f80b39447aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numSamples</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a68dab3e5a46a12b15a0d00634609700c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRange</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a412c73177a201860d35e819b9e8bead6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>timelineSampleRange</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a7d8448c207f3bdaf2e01fdc45c8df607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>editTimeRange</name>
      <anchorfile>structtracktion__engine_1_1ProcessState.html</anchorfile>
      <anchor>a6b89ffc622f0495282032d1b2f335398</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PatternGenerator::ProgressionItem</name>
    <filename>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</filename>
    <member kind="function">
      <type></type>
      <name>ProgressionItem</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ab30cf21d76e4120c38b4d7d813e764ce</anchor>
      <arglist>(PatternGenerator &amp;, const juce::ValueTree &amp;, bool temporary=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProgressionItem</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a1514b87d5772b99e586cca38352a675c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a603bb3d31616f9e3359b63ae7cc60fe9</anchor>
      <arglist>(const ProgressionItem &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ad0c4c71634ce66682616d45b2a218cc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordName</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>adadbca114823e30c608fcb42ac810813</anchor>
      <arglist>(juce::String chord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordName</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a5b3820d1e806bdeb1b95ebf0db652cec</anchor>
      <arglist>(juce::String chord, juce::String pitches)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getChordName</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a2f2c76c200fddadd22849e068c44abb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ac430b3514e8f62c4a7d7dd9864d02feb</anchor>
      <arglist>(int root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChord</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ac867219ec5b88cae001223c52a0066e0</anchor>
      <arglist>(int root, Chord::ChordType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRomanNumeral</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ab07f21c2a5f3aabe720086e65c967946</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Chord</type>
      <name>getChord</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>af6d7e753d8ab5272645bf460d09c17ab</anchor>
      <arglist>(const Scale &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getChordSymbol</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a110525fdcf14ca97ca2a94308b600237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRootNote</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ac8fd229deb8c663825252302e047deb4</anchor>
      <arglist>(int key, const Scale &amp;scale)</arglist>
    </member>
    <member kind="variable">
      <type>PatternGenerator &amp;</type>
      <name>generator</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a85f57491c4aefa68704043d2cdd8cd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>af428417e4f783fb7e88d4b15c5af23e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>chordName</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a42d4c5ede93baa2fa144846b2c0af1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>pitches</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>aa61252083f6fc056b080cbeb857b9049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>lengthInBeats</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ade27349e0fa357b113e4b1124f3b85bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>octave</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a01053c66228397a956edebe528250fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>inversion</name>
      <anchorfile>structtracktion__engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a71be16558c88526b68a0094602eecd04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Project</name>
    <filename>classtracktion__engine_1_1Project.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>NagMode</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAsk</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fca8c2c89b23f6619bb1b04e7fce55b824b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoYes</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fcacda1d684c59d8b65c38e799e51c27921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoNo</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fca942706c36f801549c20d90053b58acd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProjectSortType</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByName</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89babcaefd12ee8e2033db02110127337342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByDesc</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba02ddb84bc2251a5611fc8cdbeaa188a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByType</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba039d8ae979ec5b8f95523a4d10975731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByLength</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba50152d87f603897e66e9d44043b235d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortBySize</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba9076477da4a27868c96ee59ae1971114</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByModified</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba20d2cfc1daa1ce1774c9a06921b59d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByCreated</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba4c61ea4a93f5855e0acb183a03fe466c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Project &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a5ea385ba06db2b835c8d9a00ad5cb945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAsk</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fca8c2c89b23f6619bb1b04e7fce55b824b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoYes</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fcacda1d684c59d8b65c38e799e51c27921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoNo</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aedda79d5e586c6b0a207001b9a2c75fca942706c36f801549c20d90053b58acd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByName</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89babcaefd12ee8e2033db02110127337342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByDesc</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba02ddb84bc2251a5611fc8cdbeaa188a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByType</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba039d8ae979ec5b8f95523a4d10975731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByLength</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba50152d87f603897e66e9d44043b235d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortBySize</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba9076477da4a27868c96ee59ae1971114</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByModified</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba20d2cfc1daa1ce1774c9a06921b59d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByCreated</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a914dbce41a5f619ab635894d628df89ba4c61ea4a93f5855e0acb183a03fe466c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Project</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a03c390d99b477a847dc3a25aadb2ee5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a04d6c9f1901599617df223a3d5452d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae8c29ed48d14e2b08cc297c67214442d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>abd4887a46f19fc74ea6685085282a1a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>abf4b0e8918e61816acbe821e7eec5efa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTemporary</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a0f0d3bff588c020f1978cbd36701dfc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProjectID</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aab74da27e12ef225ded6170058904741</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a8d58774850fe490705b32b415dcf526a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae801457228ae1747af4de0fcd9b0c3ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getProjectFile</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae883cf7126142420a12ceb1f67678280</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDefaultDirectory</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a38606e0da1ed1d666b631870e68fad00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDirectoryForMedia</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aa34a20359e6984f800e6961f64341563</anchor>
      <arglist>(ProjectItem::Category category) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a66b348d915814b43b10c085fa0de15ef</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a4cb75924f28ff62e3740ea26c9728e46</anchor>
      <arglist>(const juce::String &amp;newDesc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewProjectId</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a04b88ff166fc60fc7f410f2d54f762e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProjectProperty</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>af3e89380b630baa02ce14fe39a1e6c69</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectProperty</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a4e9c9aa405afa23b6a238e853dc40f24</anchor>
      <arglist>(const juce::String &amp;name, const juce::String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshProjectPropertiesFromFile</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>af56be427229bdd2cd62c28165b1b6853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLibraryProject</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a63276d2dad45ea3316e0694056befde6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>askAboutTempoDetect</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a7adb908b79ae58f6746097292d7ce1ff</anchor>
      <arglist>(const juce::File &amp;, bool &amp;shouldSetAutoTempo) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>findOrphanItems</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a6cf5d4be974eb839082e6316d0da62ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumProjectItems</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a5bd0cb4524bd1f4b24ac8d5f8acff2da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a5c28863be2733a4602b2c52b35468824</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>getAllProjectItemIDs</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a31b09e04240e8090928c53c5eb11c81c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getAllItemIDs</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a05fe26ed4ee9b99f4d6b9af4dcaddbdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemAt</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>acea94c0fa3d0f03e55d35b86ec5dd7eb</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItem::Ptr &gt;</type>
      <name>getAllProjectItems</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae73db98a8b489beb0c74a2a4674629e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOf</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a6e8c3c15663fcd9867921d753ec5635f</anchor>
      <arglist>(ProjectItemID) const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForID</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a59f600cf81c01d73a16b6b5e51a0357c</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForFile</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>afbe93525191932c66c1373bbe8566c28</anchor>
      <arglist>(const juce::File &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createNewItem</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>acf958c3024ad1bd9ce7e3d17511ed269</anchor>
      <arglist>(const juce::File &amp;fileToReference, const juce::String &amp;type, const juce::String &amp;name, const juce::String &amp;description, const ProjectItem::Category cat, bool atTopOfList)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeProjectItem</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a13625dc9d14308d846b91724d754cebe</anchor>
      <arglist>(ProjectItemID, bool deleteSourceMaterial)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveProjectItem</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a890ed1a5003a0797b5f3b7363a370840</anchor>
      <arglist>(int indexToMoveFrom, int indexToMoveTo)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createNewEdit</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a12428744a5cb55ab1b274f3e8e506bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirectIDsFromProject</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>afd64aab8bbd9bd3df032751479aee4de</anchor>
      <arglist>(int oldProjId, int newProjId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeArchiveContents</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae28207a890bf1ed2a5952493fdb67ed6</anchor>
      <arglist>(const juce::File &amp;archiveFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeOtherProjectIntoThis</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a4a29db6823fdd8e9e0d783f06e5f6ece</anchor>
      <arglist>(const juce::File &amp;otherProject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFolderStructure</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a2964c0f0d6e7a57e502fa602f91679a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDefaultFolders</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a6b1a9c4b642e9bd0616290c414cb9de0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>searchFor</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ada54f57354095349b4e160e7de1d0600</anchor>
      <arglist>(juce::Array&lt; ProjectItemID &gt; &amp;results, SearchOperation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ace2d66de1a597799f1876584aa0a6e8e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockFile</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>af991b3e774c1de1898be60b1e3f32df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockFile</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>ae782cbc9979823ee3368aa5184e7fefa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a2a0f321beda38953a42b7c74dac02e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectManager &amp;</type>
      <name>projectManager</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>acc1d89fca96146196d05b4990b59601c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>a041bde73ab38c3b63f9aaced635b2c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion__engine_1_1Project.html</anchorfile>
      <anchor>aa860c957116c15c1b786357fbcd19fc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ProjectItem</name>
    <filename>classtracktion__engine_1_1ProjectItem.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>Category</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa8229b40bf594edde8093a3f7aeb91f7</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7ade95b43bceeb4b998aed4aed5cef1ae7">edit</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7ab0065da5492d5c44bc9eb3b6757340be">recorded</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a2be756560ea379b223d8515924d4ffad">exports</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a1a557283e5542468721ccbc770c8b13f">archives</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a19290604eee3233f77c10a970658725f">imported</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7aa8bc0d9bfe8eac095ac699937038a6be">rendered</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a72858d1af3c55029d5dc0bf1a77b6d9e">frozen</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="aa8229b40bf594edde8093a3f7aeb91f7a421b47ffd946ca083b65cd668c6b17e6">video</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenameMode</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1accadeb1f102127505846f4f3c21f5d</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a1accadeb1f102127505846f4f3c21f5daf9f90eeaf400d228facde6bc48da5cfb">always</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a1accadeb1f102127505846f4f3c21f5daf5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a1accadeb1f102127505846f4f3c21f5dac7561db7a418dd39b2201dfe110ab4a4">never</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SetNameMode</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a9a9b90a5f2f8cd7bb74859aa903d298e</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a9a9b90a5f2f8cd7bb74859aa903d298eabd7b4b5faac95a9516c23291233e558a">doDefault</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a9a9b90a5f2f8cd7bb74859aa903d298ea7877fad09ef66b74c765698abb43fe7a">forceRename</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ProjectItem.html" anchor="a9a9b90a5f2f8cd7bb74859aa903d298ea609fbd8c824fad7642def79d079a52fa">forceNoRename</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ProjectItem &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a48a8c28e821c8754e0b3204970bd58df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; ProjectItem &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa830dc561ab40c85ca6e7034cac1e322</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a180d1d626e26694c24bc748266d4c925</anchor>
      <arglist>(Engine &amp;, ProjectItemID, juce::InputStream *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a06be1aa49354a203ec76e01c4d4d056a</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, const juce::String &amp;type, const juce::String &amp;desc, const juce::String &amp;file, Category, double length, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItem</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa84df488be34f45be80b6a9b3e194829</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a2ad18fc8ca38db2c233066d6e7737b60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa3285f862adfa57e82a8d4f67907506b</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a0d6eedd5880f57ae5c58e18da865c4bb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Project &gt;</type>
      <name>getProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a61719ebb69919662844353560f3c57b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBeenDeleted</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad37a16457c71d801ea55e395b5148442</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a59b2f81e550111f10ac8be37cbb586fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWave</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a3cddcfa1217b3f9e69d706320d121a10</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a711b78a2f8a1a7f2e9ab554981eb5022</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEdit</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1b45bc0f14044eceb2b5d23139d5c819</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVideo</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a5b7a7754a1dbcec78d0081083999f3a5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a145fd0698f960d38d1c2d954a57c9d34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a05832a9913ad2b77a52b112b403952e5</anchor>
      <arglist>(const juce::String &amp;name, SetNameMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Category</type>
      <name>getCategory</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a3ae18ff3423ca8187278a3d98a4ada66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCategory</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a51b172b107e1fdceae6456c0a9144470</anchor>
      <arglist>(Category cat)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNamedProperty</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1915ac43464b2ed336fe37e091a24e8a</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNamedProperty</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>adf79847bb48d0eef4f1235c9a58b211d</anchor>
      <arglist>(const juce::String &amp;name, const juce::String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa6e364fd3c3858ef2d0c631f83b91bb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>abec129889cc3b7fd2d5b8d5220217086</anchor>
      <arglist>(const juce::String &amp;newDesc)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; double &gt;</type>
      <name>getMarkedPoints</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad3ef52917f9ea938336bdd7d3336e0a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkedPoints</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1d13863fe63f737ff97e0fbf221f7d2c</anchor>
      <arglist>(const juce::Array&lt; double &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyAllPropertiesFrom</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a51da5b20d4564c35abf0648f1e82c7fd</anchor>
      <arglist>(const ProjectItem &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convertEditFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a35871d6eca8c53de71e5762664532a62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a37981f232194c9867f19b77db9a26798</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a3f1f3e8364b2478280b991ce51c90832</anchor>
      <arglist>(double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProjectName</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa7178b5abb7ec1d0e328c5b3496bcbac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditPreviewFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a77fcb1a2486f5219bb2d719058e919ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditThumbnailFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab88adf60b3b2303befaf4fdcb92df533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>abf66e8220c5e80100b0c561e63136c08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRawFileName</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>acb64f8bf6bfa8dbe1c87fedc43ad3331</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFileName</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a5d1b482b358f960c87c54961b2a9f2cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1d569102af472284567b5d42c2662226</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a15e30e2558fc7fdb60a2bb8ddc029860</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7957f61bdf7ed0b3a178e86e8ffee308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>createCopy</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab87bd3c402b12d2295a6d289d359e707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendChange</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a68159b200993da4e0d7375f3035639c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copySectionToNewFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aeac41237d38940cab284b76bd6a38b8c</anchor>
      <arglist>(const juce::File &amp;destFile, juce::File &amp;actualFileCreated, double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ac92068d46431f86df66f0d7ce321c12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verifyLength</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a24ac5bdf526419c14981c95712b813a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeProjectId</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a60dda1491057d1c454b4beacd5d6bf08</anchor>
      <arglist>(int oldID, int newID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToStream</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aedd6229f3840f7d8d936c1552e3dcbe4</anchor>
      <arglist>(juce::OutputStream &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSearchTokens</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a36c30459277b935e4fa5ea174eb80342</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>waveItemType</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ac79e8c16ead7a0bfc060f3d4e4ee064c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>editItemType</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad892179588328c3c048a5e8b8fac3bbd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>midiItemType</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a8b46274206093b1b60e789c79796bbf4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>videoItemType</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad5d301a8b2f01a5d84abb8d7777d0a9d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa860c957116c15c1b786357fbcd19fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Project</name>
      <anchorfile>classtracktion__engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7aa96bc4f81b0d0c023b6d0cbf31f944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ProjectItemID</name>
    <filename>classtracktion__engine_1_1ProjectItemID.html</filename>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ad0e896bc204c9f42e18b5b3c277981e4</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a75002d24670d4380b3ae6a4733c1275e</anchor>
      <arglist>(const ProjectItemID &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a301fbaef54e6e36bf368564670283665</anchor>
      <arglist>(const ProjectItemID &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ab2802ba0a4c1efdd5fa1c635d4e617b9</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a4278322e364f6fc69be5ec46c6d2649a</anchor>
      <arglist>(const juce::String &amp;stringID) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a60775a8312e9851b5dcef0c3b6362005</anchor>
      <arglist>(int itemID, int projectID) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>withNewProjectID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a39855e66a0bad653c37778f114eecce3</anchor>
      <arglist>(int newProjectID) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProjectID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a5baf725e8f7981289f56c6a58325ce0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getItemID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a4475e068afb370062642656e55caf90a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getRawID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a442b718c22e4d3cb0d6e5017cf6eea62</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a67838f7d742965023b1b4904749cfbb3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInvalid</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>af07e1cbdfcb846e839e88ff85d783b33</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ae53377e5a3e919613ed989ec70b550b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toStringSuitableForFilename</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a1211be8c66c7a327959a70a4018043fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ae1c9d2453a0b0c3ae58257566100c081</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ac1e7c80e74ec09c1a0be9b4717761224</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a18a56d124900781fe278ec8bf66a8d23</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItemID</type>
      <name>createNewID</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>add881b0fc396f12ba8f8782db89dcf3f</anchor>
      <arglist>(int projectID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItemID</type>
      <name>fromProperty</name>
      <anchorfile>classtracktion__engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a92970179debb59ef22fa6c7d7651824f</anchor>
      <arglist>(const juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::ProjectItems</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion_engine::Clipboard::ProjectItems::ItemInfo</class>
    <member kind="function">
      <type></type>
      <name>ProjectItems</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>ac0eb9f18a3bf322c06620cd3659aa0dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItems</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a9ca2673b20ad74103d4dff4bbaf3aada</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>aaba5838cadf36fbcf186fcfd702ef72a</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>ab0df573630be3457f9bdf5a2be3efa8a</anchor>
      <arglist>(Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ItemInfo &gt;</type>
      <name>itemIDs</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>aa53ebcbff539e28f33357651b68a7674</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ProjectManager</name>
    <filename>classtracktion__engine_1_1ProjectManager.html</filename>
    <class kind="struct">tracktion_engine::ProjectManager::TempProject</class>
    <member kind="function">
      <type></type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a9e2594cf923132aaa0eb33e1f879d84c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectManager</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aad9cedd3f336ad2237a807ba8887512b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3f2ee9b95f24007e09c411ab03d78be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>addProjectToList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a9d96d8d3c39ab8e5249f0896dcf2ed65</anchor>
      <arglist>(const juce::File &amp;projectFile, bool shouldSaveList, juce::ValueTree folderToAddTo, int insertIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeProjectFromList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a7cdcd00dd119b7ca16d33b08bc035cd1</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProjects</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a090732a450e7d18c8b289a615e2334cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getActiveProjectsFolder</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a0fb27956901cdac949ba274f2c7b9314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getLibraryProjectsFolder</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a1a4e846481ec0b424e538205c72dcabd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProjectFrom</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>af11db748ec3e6ec35b776790fee1971b</anchor>
      <arglist>(const juce::ValueTree &amp;, bool createIfNotFound=true)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>af5cd3c6c285b9784825d018d559d55e2</anchor>
      <arglist>(int projectID)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab3c1a1d213b9cdfe7babc34681a506f4</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Project &gt;</type>
      <name>getAllProjects</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a17601dcfe44ab189b7dcc76751f3628e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Project &gt;</type>
      <name>getAllProjects</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3c3207d0302c4e2038fe0a763922ab06</anchor>
      <arglist>(const juce::ValueTree &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackArchiveAndAddToList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>abe11e6e7cbc115a58e9ed2e9c63275fb</anchor>
      <arglist>(const juce::File &amp;archiveFile, juce::ValueTree folder)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItem</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>af0dfe0db493902125796387439236e6f</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItem</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3aedf518226a705971cb9f3255769bc6</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a6e71f383b44d670596f0c3798f89a21c</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>findSourceFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aff5b86cfe96202db9e37c28a680a5275</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveAllProjects</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a617eda4385fb834df7b923e8f9ec966d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRecentProjects</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a0f19d945ce1cb31cd10878c4628b5af6</anchor>
      <arglist>(bool printableFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileToRecentProjectsList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aef9411eec0fc67eabb4a63c0bc1d64c9</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findFolderContaining</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>afb0d8e64edc77bbc0020d49597eb0b96</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findFolderContaining</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a22ca28a3c76be04660e02c5185e7914f</anchor>
      <arglist>(int projectId) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getFolderItemFor</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a223d2efe5afaf83337306138157660ca</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFolderIndexFor</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>adbfaf42de009ef3d286d4ece7bc8c8d2</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewProjectFolder</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aaf2e64e797e5b00f19116b282aa9b7bc</anchor>
      <arglist>(juce::ValueTree parent, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProjectFolder</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a78969d12a0b0180fead040dd0c525ffb</anchor>
      <arglist>(juce::ValueTree folder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateProjectFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aa561ea78eb9ca4f6e0279cc6035a1c13</anchor>
      <arglist>(Project &amp;p, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a5e4b057a2210f9c6499b532dc2ae2070</anchor>
      <arglist>(const juce::File &amp;projectFile)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProject</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>ae01a1349629fe9921fe8e9f047cd081d</anchor>
      <arglist>(const juce::File &amp;projectFile, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProjectInteractively</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a1a51ae9a1991b4db93bffd90e33265fe</anchor>
      <arglist>(const juce::String &amp;suggestedName, const juce::File &amp;lastPath, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProjectFromTemplate</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>af174252b8d0f7bbbc5c9d46234b8738d</anchor>
      <arglist>(const juce::String &amp;suggestedName, const juce::File &amp;lastPath, const juce::File &amp;templateArchiveFile, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>findProjectWithId</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a71cf7399b90813f5a3807f6386deec70</anchor>
      <arglist>(const juce::ValueTree &amp;folder, int pid)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>findProjectWithFile</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab6c55cafb2e4b8868bba29e9704bc26a</anchor>
      <arglist>(const juce::ValueTree &amp;folder, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3f3591739c5d084fc26787f0d69f3030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveList</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a32db342e4fa73db43dd50485a01f24d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>aa8b2f65037eeb64617e4d87edd63ae2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>folders</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3f85b5ad89fecd0654d72ac30ae168e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Project</name>
      <anchorfile>classtracktion__engine_1_1ProjectManager.html</anchorfile>
      <anchor>a7aa96bc4f81b0d0c023b6d0cbf31f944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ProjectSearchIndex</name>
    <filename>classtracktion__engine_1_1ProjectSearchIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>ProjectSearchIndex</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a127697a496a85d65ba92f1cf41b5cf27</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>af76afd7d7fd7fd8fe6eff1a475b9c228</anchor>
      <arglist>(const ProjectItem::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findMatches</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a5bb49ff33d0da7790dad8c018b1321e7</anchor>
      <arglist>(SearchOperation &amp;, juce::Array&lt; ProjectItemID &gt; &amp;results)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToStream</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a46fc6a67619491a1844074e730efc356</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFromStream</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a9acf17958c0c75cfc700d3b0f9439a58</anchor>
      <arglist>(juce::InputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IndexedWord *</type>
      <name>findWordMatch</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>ac773f0c684d102bc6c9f6d40cc40e78f</anchor>
      <arglist>(const juce::String &amp;word) const</arglist>
    </member>
    <member kind="variable">
      <type>Project &amp;</type>
      <name>project</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>aeaad0556c6a498339e61486b53d58673</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; IndexedWord &gt;</type>
      <name>index</name>
      <anchorfile>classtracktion__engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a45702e2118ad2eda390f05ecacf07f02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::PropertyStorage</name>
    <filename>classtracktion__engine_1_1PropertyStorage.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyStorage</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a051adaaee7904d185f1ed5a8a3ae190e</anchor>
      <arglist>(juce::String appName_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyStorage</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>aed836c117f9de9e8e17f7b9b764f0afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getAppCacheFolder</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ab8b0383d5294b97bb5855e80e4855f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getAppPrefsFolder</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>abd113e4474a33aca592cd6d3b7651584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushSettingsToDisk</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a13cac1a0bb9b85358134fe63eb9fb7c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeProperty</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>abac6845d114f94bbb8c189d2ca10e72a</anchor>
      <arglist>(SettingID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::var</type>
      <name>getProperty</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a0b0fb40bdc964c257d964b34e4ee8dfb</anchor>
      <arglist>(SettingID setting, const juce::var &amp;defaultValue={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProperty</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a859d3aed2cd02c9fe36761afcf73d94a</anchor>
      <arglist>(SettingID setting, const juce::var &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::XmlElement &gt;</type>
      <name>getXmlProperty</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>aed4c7013ef4f4542676b1704be443b6e</anchor>
      <arglist>(SettingID setting)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXmlProperty</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ae86b46a4a7251ffa879a9a2eff9cb001</anchor>
      <arglist>(SettingID setting, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePropertyItem</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a561322ceb952a4e06ed6800d37a3194d</anchor>
      <arglist>(SettingID setting, juce::StringRef item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::var</type>
      <name>getPropertyItem</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ab519cd53d6305888d6b1779187cce3db</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::var &amp;defaultValue={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPropertyItem</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a02cad065f95f92bf467767f95fe8924b</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::var &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::XmlElement &gt;</type>
      <name>getXmlPropertyItem</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a3a2fbd385cb3421a4687b69645c0fbbf</anchor>
      <arglist>(SettingID setting, juce::StringRef item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXmlPropertyItem</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a7f1f1f96c325267b98ee6e206ddf0a90</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>aed2f8f2f1841807ae685c9fd9819e709</anchor>
      <arglist>(juce::StringRef label)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a2c6f83520a0e6302a768914c1c16295f</anchor>
      <arglist>(juce::StringRef label, const juce::File &amp;newPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ac5d90dfbbf01e5709785eb2d23e95e83</anchor>
      <arglist>(ProjectItem::Category)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getUserName</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a0300a8091424ddd8ee9a33566ae5738c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getApplicationName</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a1d3b67a3fa44558f0cd82140cbe1ffa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getApplicationVersion</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ab12ec9c1b36a89865f75b6db110d816e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>settingToString</name>
      <anchorfile>classtracktion__engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a182baa04c99421f1a89285ecb15499b5</anchor>
      <arglist>(SettingID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioClipBase::ProxyRenderingInfo</name>
    <filename>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>ProxyRenderingInfo</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a48fb79ea9c353cbbf76eed9726cfd963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProxyRenderingInfo</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a880d8bc5f53ae46a16617caadc4a8894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>render</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>abdb3092eaee2d859cb7b390390f81e8f</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;, AudioFileWriter &amp;, juce::ThreadPoolJob *const &amp;, std::atomic&lt; float &gt; &amp;progress) const</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>audioSegmentList</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a9ebd1f0eef5e2779345b0e927f8ad27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>clipTime</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a0648335092a4e5f500b040b67359f9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>speedRatio</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a602955b6a634bd38a192c9cf0b67ccab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::Mode</type>
      <name>mode</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a7d800a2575889f590c76e9714bf22f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::ElastiqueProOptions</type>
      <name>options</name>
      <anchorfile>structtracktion__engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a399070879c67abcf55faeaaf8ca97e9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::QuantisationType</name>
    <filename>classtracktion__engine_1_1QuantisationType.html</filename>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a4048390c87c83960a153681548adb863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a689f72e3498e54f1980524e5e5796efd</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QuantisationType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a6fcd0645a63ba0ef6950d3c539a1af0c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>abdb28c7d08c1a9ccb4f9d529b6a0eab2</anchor>
      <arglist>(const QuantisationType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QuantisationType &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a3b7cae8801256b017ac90f1e90687d8c</anchor>
      <arglist>(const QuantisationType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyQuantisationToSequence</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a16b2e42a878700fa73be8ffff22f6626</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, Edit &amp;, double sequenceStartOffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a6d5263249524f51092fc8b38eb3df478</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>affd2b0fb8f73d3b39c94742491ca46cc</anchor>
      <arglist>(const juce::String &amp;newTypeName)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a58e4f82415de7d3c4c78921e73b62828</anchor>
      <arglist>(bool translated) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimecodeSnapTypeLevel</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a253933594d013c68ef9b1d8398cee1b9</anchor>
      <arglist>(bool &amp;isTriplet) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportion</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>abb4233417c04b7fe2b3867e438ed4aa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProportion</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a0704c02d64655082d2918b3afc6701d0</anchor>
      <arglist>(float prop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuantisingNoteOffs</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a1a462116ba03443edc1145af86a6eebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsQuantisingNoteOffs</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>ad42df706158661f5e0d5df5edaee787c</anchor>
      <arglist>(bool isQuantising)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundBeatToNearest</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>ad1ae8dbf653ee22703740206367c7c80</anchor>
      <arglist>(double beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundBeatUp</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a9766b524792090c3eb02a58c602dacde</anchor>
      <arglist>(double beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundBeatToNearestNonZero</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>abaad24b274ad7e1da02161b45e782c7f</anchor>
      <arglist>(double beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundToNearest</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>acd22c83df0542cc51fa65a1b81366332</anchor>
      <arglist>(double time, const Edit &amp;edit) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundUp</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a901215aaa00e001cd00d061c2532986d</anchor>
      <arglist>(double time, const Edit &amp;edit) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getAvailableQuantiseTypes</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>ac6d9a5a767c720c73be97e1a88fa564e</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultType</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a7a4f9b333a999507cc3a3522f687e924</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a62f7834eeb2227287371287250cbf1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>typeName</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a9aa5e6caa35413485de37027242944c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>proportion</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>a01d962fc0d4283c9a7b5a82a2b80a64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>quantiseNoteOffs</name>
      <anchorfile>classtracktion__engine_1_1QuantisationType.html</anchorfile>
      <anchor>acce8aeacb8a2afe6bdb1bf684ff01b15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::RackConnection</name>
    <filename>structtracktion__engine_1_1RackConnection.html</filename>
    <member kind="function">
      <type></type>
      <name>RackConnection</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a73f309aa6decc9e6a8e0a44ad358f960</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a7a2b8933f35b9d19f452e36db0667dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>sourceID</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a9297c7b8ca7a20dee7298b0df6be5096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>destID</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a0f23ee47f438c15edcf8d46b8ae52984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourcePin</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a786d08ebd6360d30cf7360a7349c2892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destPin</name>
      <anchorfile>structtracktion__engine_1_1RackConnection.html</anchorfile>
      <anchor>a00931522e9c65f7d094c2b3bb0de4884</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackInstance</name>
    <filename>classtracktion__engine_1_1RackInstance.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Channel</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7de6e03f573413df3364e9a0f3369452</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>left</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7de6e03f573413df3364e9a0f3369452acca1e7af521062832e8775502f38cd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>right</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7de6e03f573413df3364e9a0f3369452a83393ebe7acc1c25a21588f7e7d4e258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>left</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7de6e03f573413df3364e9a0f3369452acca1e7af521062832e8775502f38cd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>right</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7de6e03f573413df3364e9a0f3369452a83393ebe7acc1c25a21588f7e7d4e258</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackInstance</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a6b8c319c5bf8f1f72c9efd75f6063918</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackInstance</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>afe41e2a4080ae7e0097afa252fcd66e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a1e9f0d6bcc4c052fdcf5d7d0223c5f35</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a3fe409031891a540c23941eabc33a7f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ac60df3115586a7859a03b18b6286a27d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a4c1178262e0e46dfe127c4da6fdb0eb0</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a417298b2d06350e805aa22b35a6d7c16</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7460a262c4c20e731c822ecc40ed4367</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad62b664d8cb889c6560218c65ee08055</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>af50df6bc099d0b90f4cdde6b49b9a100</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a7f8011f46983c2537951a1ab50df5953</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a1b063ca38112c5b8e053a61ef3239840</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>af99cb07528ff63fc52fc7af12554b33a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad5fdeeffcb4de726b74f5c25cddc375a</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>afe8e52a114f7420cb4f6d754e85cead4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ace96d441771dc782ebf4eb5fd7c09caa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ac3ccbc27f1d73a88ce2f75115cce5e68</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a6888f7bc7f821e08251b9084fdb3490f</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutomatableParamPosition</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a953cff61d3ab90fb48086a98e28c8e78</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a2e73b24b26533681e35309cd669d73c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceRackWithPluginSequence</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad0c59950bf2eec9bca3d32b2dd0dfeec</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputChoices</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a6f646b2f4e328ceae94b1d44d9ea3e46</anchor>
      <arglist>(bool includeNumberPrefix)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getOutputChoices</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a92ce2a0dd792dd56854bcac487b165af</anchor>
      <arglist>(bool includeNumberPrefix)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNoPinName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad1bb8cfdd031885b25f485940ae1d68d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a443dbbdbd0a1e7f88617de12c6ce543d</anchor>
      <arglist>(Channel, const juce::String &amp;inputName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>abd3fd9e70560dac91de389c86eae0d8c</anchor>
      <arglist>(Channel, const juce::String &amp;outputName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputLevel</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>aef602a397bc64cfe4a1a1b3bd212ec5a</anchor>
      <arglist>(Channel, float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputLevel</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ac86fb889a425e9bef4b4e7db0dfcf910</anchor>
      <arglist>(Channel, float)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getInputName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a59a416bbd7f13ef5bb56af57af1c017b</anchor>
      <arglist>(Channel)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a9ec83e34d45faad932e8e8b885d0e7d0</anchor>
      <arglist>(Channel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ac0c82cf33bd810241102a9ffc3f04919</anchor>
      <arglist>(RackType &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>rackTypeID</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a9de0652f06539a5924f090df4cf13e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const RackType::Ptr</type>
      <name>type</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a28758d2f18ee90512f200abfa0bacff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>linkInputs</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a9e92d74b83068b04a9f175be75f256fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>linkOutputs</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ab8f802b73a57ef24a3bd7455f97fc40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>leftInputGoesTo</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a23243ab12bbed107a98817f95c3be91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>rightInputGoesTo</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a9c39fd56c043fd8351fe360aecfab5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>leftOutputComesFrom</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ae1358d4d43d8271debee9c5de2ec6357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>rightOutputComesFrom</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>aec1d7c757ba1fbab9dcf3165ef6a1a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a54822ccd4d60eeac164d27b68846b507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad3214b93bfe31c4848869a444194e4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>leftInValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ae3405eefb3ed5c927d6c257d0e359494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rightInValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a22b19b58cb38f6dcf2053c1abdd3149f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>leftOutValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>afb5b5ac59fc7c475555d4f5a124e10c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rightOutValue</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a0fb2d8784ae2440a706538bee33e12a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>aae3560869bcfaa1ade3c7c3b0c5a4af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a5fe3d68ba2bf16b730153d1094041f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>leftInDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>aac0684621bacc7b386ed375e0e338d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rightInDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a6d0a4b5c5267ab801fcbdd386a11bb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>leftOutDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a0055d0593acbdcfb1487bbde92086b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rightOutDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>ad383e38015b0bb4a12f6fc9a84c9e773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a29460a19c9c3eac47bdc046a8b29b685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>rackMinDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a718c14ef4ad5b4becbbd1ac2b3923407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>rackMaxDb</name>
      <anchorfile>classtracktion__engine_1_1RackInstance.html</anchorfile>
      <anchor>a2f9c7ed355d17760ec9b2df9a738c2c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackInstanceNode</name>
    <filename>classtracktion__engine_1_1RackInstanceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="typedef">
      <type>std::array&lt; std::tuple&lt; int, int, AutomatableParameter::Ptr &gt;, 2 &gt;</type>
      <name>ChannelMap</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a495ac7b83f0c02f08880cb88e873b79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackInstanceNode</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>aa07d717833e3d6d47bde67e4856d4472</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, ChannelMap channelMap)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a4822664321d15c97608b35bd86d1f62f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a4b991c93248619cd8b0c252b882af4d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a87b1247f7345cd781ef783505c1b409f</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>ab85772fa06ca0d24fcfb135dee5ba06d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>ad222372802308dccdaf964fe1342fe0c</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackNodePlayer</name>
    <filename>classtracktion__engine_1_1RackNodePlayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RackNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a7dec39b2b3dbd9c4f9ec484650cbbc12</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; nodeToProcess, std::shared_ptr&lt; InputProvider &gt; inputProviderToUse, bool overrideInputProvider)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a328dd04d54646acd2daa657df94a47e3</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; nodeToProcess, std::shared_ptr&lt; InputProvider &gt; inputProviderToUse, bool overrideInputProvider, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a59b01c06116bbea8f59ced9101f3750c</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencySamples</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>ac7e3b951cb93a2952c5320ea2632b05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a77ad130aed89432e6c6a5f7f7384506e</anchor>
      <arglist>(const tracktion_graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a363e47a9b32f62713cfc44479f1b14aa</anchor>
      <arglist>(const tracktion_graph::Node::ProcessContext &amp;pc, double editTime, bool isPlaying, bool isScrubbing, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackReturnNode</name>
    <filename>classtracktion__engine_1_1RackReturnNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>RackReturnNode</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>ae945b190e1194fcf2b7f0d3c7a8a289c</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; wetNode, std::function&lt; float()&gt; wetGainFunc, Node *dryNode, std::function&lt; float()&gt; dryGainFunc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a1718c449319cdfcf898e0aa123c9acff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a4bd1c5090d276715054f7019fe87ca7e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a638e97e44cd87c4a23f4cbd4b2319567</anchor>
      <arglist>(Node &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a6135fb67e44b8e5d037ffa5d7edc13c8</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a6d61774116bfec36f06c0858a6be36bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a993414557ed837fc1a71fab86efa6231</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackType</name>
    <filename>classtracktion__engine_1_1RackType.html</filename>
    <base>tracktion_engine::Selectable</base>
    <base>tracktion_engine::MacroParameterElement</base>
    <class kind="struct">tracktion_engine::RackType::WindowState</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a405c8ebcb31f190a444d4ac6ea8aa0a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackType</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa5109cb0bc7a557963c1756968f43b82</anchor>
      <arglist>(const juce::ValueTree &amp;, Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackType</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a88061af8e96d61ebb00c64a21315c339</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createStateCopy</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a7040b7679b76159991a2acbc7df0704e</anchor>
      <arglist>(bool includeAutomation)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>restoreStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a41bc52f5c176dfbaa9fc14c12eb0aa96</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerInstance</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a9bf2f5f4e7a72540ba3827c60d419b03</anchor>
      <arglist>(RackInstance *, const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialisePluginsIfNeeded</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>acbdc3bde2c0faa0c865302e618418458</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deregisterInstance</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ad1056b5f8cb9e28e4b14457551f9ad35</anchor>
      <arglist>(RackInstance *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutomatableParamPositions</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa4b0ed88b75b7436c4ec1734b2eab715</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ac75b3ff51289452c04f276806a7d78ce</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Plugin * &gt;</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a66245c6f0469186eacc952913d2acdd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPlugin</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a4e00c340ec37c1e49ff2b4efd53b5ee9</anchor>
      <arglist>(const Plugin::Ptr &amp;, juce::Point&lt; float &gt; pos, bool canAutoConnect)</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>getPluginForID</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ad760093af1d4b120d85e9a2d770f2208</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPluginPosition</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a6abb11c131c2c2c8fe1281e617d4f641</anchor>
      <arglist>(const Plugin::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPluginPosition</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a42adfa3bb3d4c94741123e1bfa9d29e8</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPluginPosition</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a34b89b27dd94404220c23385062107a3</anchor>
      <arglist>(int index, juce::Point&lt; float &gt; pos)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; const RackConnection * &gt;</type>
      <name>getConnections</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a1f476166475fbdb7614157804507a910</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnection</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a3c4511cab0e33f1e7767febb19261f4b</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a62edf52073d069763012be6d8f0917e3</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnectionLegal</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aec6dfcd391e8d8c3154a0fbeb8468064</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getPluginsWhichTakeInputFrom</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a8dad22f4ac6ad10f1f69f802fb239e17</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkConnections</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa2af5c6f082e7c2e5ab84f2d0aa56233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createInstanceForSideChain</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a84fabca061d077856b8935b60747efb7</anchor>
      <arglist>(Track &amp;, const juce::BigInteger &amp;channelMask, EditItemID pluginID, int pinIndex)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputNames</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ac8e3fb76e96226fd9989fec29aeb0694</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getOutputNames</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ab28561906f9a8999aca72da38076cf0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addInput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>af8da2f2e77bb78ac8f42d8b1386ee510</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addOutput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa946a973aa2b8b03eed31ca86bbfe528</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>abb015e581ea112a4677b2956b849c3ec</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeOutput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a1218b9f2b6310075c06706dbf8cffaf3</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameInput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ab7a2fce389e47101b6d833967870c121</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameOutput</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aebc393a436f4a57a795c24b1c0880687</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteClipboard</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa7920bfe265c2fa0c2024d32cdc7fd5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModifierList &amp;</type>
      <name>getModifierList</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a6f8432026382f6379ae68a2f667c01b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>af8e997145d33dc23b716a3f04c82f7e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a1416cd033799b006fb4d3f2807c26d9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioInputNamesWithChannels</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aaba10127ba4f6e9748ec69e84cfc6514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioOutputNamesWithChannels</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a0cac4eaa6d297692c756b1261f215d01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; WindowState * &gt;</type>
      <name>getWindowStates</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>acfed71e2717e87bf138ddf641bf259e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadWindowPosition</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a4d97553ed4796cc0c01e1d5e57e67390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveWindowPosition</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a141f32389555507649ee6e2f5b0166d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>aa568e943d12cc00311a2bbc67e01750f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>createTypeToWrapPlugins</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a44ed9a03653444dd39adaa546360c129</anchor>
      <arglist>(const Plugin::Array &amp;, Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPluginAllowed</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>ada05da73ec4faf1cac3029254fee385c</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeBrokenConnections</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a927877879bbbf35cc18d77d2a2085008</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RackType::Ptr</type>
      <name>findRackTypeContaining</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a18ca2355717fd7fcc33f4373a4f8caef</anchor>
      <arglist>(const Plugin &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getRackPresetPrefix</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a6d2bc57749e27c1cb1dd83cf13b90258</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a572728ae854e0c188e20daf02dd9cd01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a3c3ce7b36022c7725b9af811ae997811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>rackID</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a0e7c3fff4bab9b6d5aefab92672c3942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>rackName</name>
      <anchorfile>classtracktion__engine_1_1RackType.html</anchorfile>
      <anchor>a799f83fc18cf99259c2931f50f5a63e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RackTypeList</name>
    <filename>classtracktion__engine_1_1RackTypeList.html</filename>
    <member kind="function">
      <type></type>
      <name>RackTypeList</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>a97748f0e1466c2cb51d8fddafe5cbb3c</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackTypeList</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>a9cf4915971f57edcc32e9da2fbb0fb6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>ad6cc96599204d0193d2edfa1d8a7f695</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>a1a620996870ef1082b94e84ff790ab69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>getRackType</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>ae5da0faaedfe1174bbbdeff53bbf6496</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>getRackTypeForID</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>aaab143feeb034b41696ec3d9cd1585c7</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>findRackContaining</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>af0a595aa08387f1525f908cf544f69b5</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>addRackTypeFrom</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>a247b2fc10564448b6b3784f3bbdd1b15</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>addNewRack</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>aae96b09e7cc8761efe3f55e29c040f0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRackType</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>aabe4f0bffcd969fcc62044b13b951aca</anchor>
      <arglist>(const RackType::Ptr &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importRackFiles</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>a1d29db993bae9b6dbd718182100d56c0</anchor>
      <arglist>(const juce::Array&lt; juce::File &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; RackType * &gt; &amp;</type>
      <name>getTypes</name>
      <anchorfile>classtracktion__engine_1_1RackTypeList.html</anchorfile>
      <anchor>af9e3cb9c0e2d2c57d462638aea1d713f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Ramp</name>
    <filename>structtracktion__engine_1_1Ramp.html</filename>
    <member kind="function">
      <type></type>
      <name>Ramp</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>a6bc8ecd4c6cfde40195cfef36187fa72</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDuration</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>aa073cf5dc4883e63ea20c2b4f3738683</anchor>
      <arglist>(float newDuration) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>ae140611fb6a588e31d3e51b6e2a7f54c</anchor>
      <arglist>(float newPosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>a9dcc56b93dc3e5d91490086f3f8f9bbe</anchor>
      <arglist>(float duration) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPosition</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>aa145ae8682eead5a58ccb0d6260281e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportion</name>
      <anchorfile>structtracktion__engine_1_1Ramp.html</anchorfile>
      <anchor>a1ebb2ae7c44eac039295f83f0494be3e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RandomModifier</name>
    <filename>classtracktion__engine_1_1RandomModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::RandomModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2316214915d92380e13b323d0e59e368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2316214915d92380e13b323d0e59e368ad88436525ac912811efaa03c6f785110</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2316214915d92380e13b323d0e59e368ae09d654ea0f53dabcc3666a982e2b333</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; RandomModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2255f1fc9a8f549d1bbf6723f84f142c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; RandomModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>adc889ccc96dc89d9aadc90be89d8e4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2316214915d92380e13b323d0e59e368ad88436525ac912811efaa03c6f785110</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2316214915d92380e13b323d0e59e368ae09d654ea0f53dabcc3666a982e2b333</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RandomModifier</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0def1900681a0f088070f79f2718cace</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RandomModifier</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>abc7a88cc5b6b1275888409be505b753d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>ab2fb03f187dacfedf4b9614b2feaf8ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>ac3b81bbbb2af44ff8e897eeb0329963d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>abe21c3433f0a7c90a5595d260134a751</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a19925331c11f46acde56570333ce8d41</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2778cb091cc4be77139fa5f05fa0ebb0</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a08dfdb4b35cc29132296579f7e396ac2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a6a9f6500a9169c3f12cf3fd80c3e06c1</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>ae16c4014c415849097fc55a10648e683</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getTypeNames</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2017f8e658863d4341d5f7e75fb04562</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a99391b63eee1b1756df83eb0d9f23c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>shape</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a786a6b3bd8ea9e4f6719bfa5db172e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>aff66048715e6f237259f672d4f91e782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a631d678983b0b035ae72a21114ee9325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a85c6a0b54d1a43f01c3e5d554016f9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a2e9f294f0dc5d536b3eb464932c0b369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stepDepth</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a06fbdfeff7299109653aeae2c9eadd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>smooth</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>afbb0a17ea57489636f6d6dd54140a581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>ae20106701b7375e88a950955d0a1f1ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>typeParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a4e717c7490549c73ef26465e9a30c377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>shapeParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a86c9d3596c44b07d2bfca7ca8be0d970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>ad6e5532394778a13778bd33f4f507a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a28bd2eb416489c9508482865500176f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0337102c4b070782ebccc444a8080361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a40c83d1529b8396110566c4260e01612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stepDepthParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a65ccebec257b86ebba3fc54c3a2b7727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>smoothParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>a4d4cb0192fdfd34b853628c76b994d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion__engine_1_1RandomModifier.html</anchorfile>
      <anchor>aa83eb291b36187ca9d8bd3673cfb14b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Range</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Range.html</filename>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a69ca0720136090f78f444521ba7275cc</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>acf23733903ea4dd3490d8960c4e222e7</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a0c2237ee96753577ff821d478d7ab1df</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a4962c7ec22ba47a1ceb40ccddb66eee4</anchor>
      <arglist>(float f) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>low</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a8220f7f6c65153d33b72a192287e4422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>high</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>acce8d706988756356f7582be4763cca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inclusiveLow</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a2a1d3df434c1b0c31748a68fa6905101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inclusiveHigh</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a5a8691aee492adaf4a012437862cad5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::AudioFileCache::Reader</name>
    <filename>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Reader &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a43a40b19efcca447ee6cb6651a48255f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Reader</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ab0fa1eae2b6d9f4ab4588996d30bc19b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadPosition</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a0b6c34943a5d9f7c3b6175e08e117af9</anchor>
      <arglist>(SampleCount) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getReadPosition</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a08f6806e425df7ed450c4c75cd07e005</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a21c2e603209c38dfa1108f65c8bf5d7e</anchor>
      <arglist>(int numSamples, juce::AudioBuffer&lt; float &gt; &amp;destBuffer, const juce::AudioChannelSet &amp;destBufferChannels, int startOffsetInDestBuffer, const juce::AudioChannelSet &amp;sourceBufferChannels, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a8901c80e23dfa7e34311cfb175ae2dee</anchor>
      <arglist>(int **destSamples, int numDestChannels, int startOffsetInDestBuffer, int numSamples, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRange</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a2cf03b34efe132cd6037e6786b194614</anchor>
      <arglist>(int numSamples, float &amp;lmax, float &amp;lmin, float &amp;rmax, float &amp;rmin, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a04dae9e92988f990cea6994edc7a06c4</anchor>
      <arglist>(SampleRange newRange)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a87ea65b414e9069c6ec9aaeef357a44e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>afd79a083df0b6e26b9ecac2a627afded</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AudioFileCache</name>
      <anchorfile>classtracktion__engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a2221afd3b38485316dcccb68d23d524c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TransportControl::ReallocationInhibitor</name>
    <filename>structtracktion__engine_1_1TransportControl_1_1ReallocationInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>ReallocationInhibitor</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ReallocationInhibitor.html</anchorfile>
      <anchor>a73efd64a8829b1901ebbd94925bd4560</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReallocationInhibitor</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ReallocationInhibitor.html</anchorfile>
      <anchor>aae67e7f36c2d116aa72212accd86441d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditPlaybackContext::RealtimePriorityDisabler</name>
    <filename>structtracktion__engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</filename>
    <member kind="function">
      <type></type>
      <name>RealtimePriorityDisabler</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>af76bae06430050efa2eb3aeca246f5f0</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RealtimePriorityDisabler</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>a1e3cecbcfdd63e442ddd330e08a5511f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>a7a58c8c510013466c3fc3227432e1d75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::RealTimeSpinLock</name>
    <filename>classtracktion__graph_1_1RealTimeSpinLock.html</filename>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classtracktion__graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>a4d0f749b6fd29dee4d35beffad36e91e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classtracktion__graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>aef81ec02f6487b975726d4afdcfcfb31</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classtracktion__graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>aff8bc85756c72fa3457536fddf748db3</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RecordingThumbnailManager</name>
    <filename>classtracktion__engine_1_1RecordingThumbnailManager.html</filename>
    <class kind="struct">tracktion_engine::RecordingThumbnailManager::Thumbnail</class>
    <member kind="function">
      <type>Thumbnail::Ptr</type>
      <name>getThumbnailFor</name>
      <anchorfile>classtracktion__engine_1_1RecordingThumbnailManager.html</anchorfile>
      <anchor>a45ef6e2d9f945c3ea83235337090ccfe</anchor>
      <arglist>(const juce::File &amp;f)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>classtracktion__engine_1_1RecordingThumbnailManager.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ReferenceCountedValueTree</name>
    <filename>classtracktion__engine_1_1ReferenceCountedValueTree.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ReferenceCountedValueTree &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a613209672c17feca68efccb3803b35b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedValueTree</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a10de93326e8d15b46ed62c0d0a8ad284</anchor>
      <arglist>(const juce::ValueTree &amp;treeToReference) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceCountedValueTree</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a7208e1420f5b62b83d6582691df8236c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueTree</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a2534c44e01da2cf93987b65391b79b15</anchor>
      <arglist>(juce::ValueTree newTree)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a475bd8a6c44b9cac6dcce13ea985e842</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>getTreeFromObject</name>
      <anchorfile>classtracktion__engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a56bf904f5519e3796bcd6543c9b2b938</anchor>
      <arglist>(const juce::var &amp;treeObject) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Exportable::ReferencedItem</name>
    <filename>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a6474ddab45b1a6364665d4d40ea7d82d</anchor>
      <arglist>(const ReferencedItem &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>ad68fb9d62ae4147af0626308d7c19cb3</anchor>
      <arglist>(const ReferencedItem &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>itemID</name>
      <anchorfile>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a3379d42a77f1eb90cc55288ae57fadc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>firstTimeUsed</name>
      <anchorfile>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a2b5e03eee81a7c3a60f159402e1aa447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthUsed</name>
      <anchorfile>structtracktion__engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>afaa3773057cc0e5e8a2be85f3c506e1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ReferencedMaterialList</name>
    <filename>classtracktion__engine_1_1ReferencedMaterialList.html</filename>
    <class kind="struct">tracktion_engine::ReferencedMaterialList::IntervalList</class>
    <member kind="function">
      <type></type>
      <name>ReferencedMaterialList</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a81079b67dcc31bf80a64fcbee41acf5d</anchor>
      <arglist>(ProjectManager &amp;pm, double handleSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>aa51e29ebb56114304d4b06b48e11d491</anchor>
      <arglist>(ProjectItemID id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a1730a8308bb40e42b7f9c65b1de92b20</anchor>
      <arglist>(ProjectItemID id, double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a14bf1d9b70203c4979522f4c4b293625</anchor>
      <arglist>(const Exportable::ReferencedItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a4f7c6dfbde3538343168cdae4d4b3570</anchor>
      <arglist>(const ProjectItem::Ptr &amp;mop, double start, double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getReassignedFileName</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a3bcadc20a662001f401101b86b847960</anchor>
      <arglist>(ProjectItemID id, double requiredTime, double &amp;newStartTime, double &amp;newLength) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumThingsToExport</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a0aa4755637cc2179049ca0742e2d1cec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ProjectManager &amp;</type>
      <name>projectManager</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a65c45ef57c94321505c6fe039549e47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>ids</name>
      <anchorfile>classtracktion__engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a831fc3f9eaa56c0f917ab084835c11e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RegionSequenceWrapper</name>
    <filename>classRegionSequenceWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>RegionSequenceWrapper</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>ab82b337ae0559639ce842d7fc6f9a9c9</anchor>
      <arglist>(ARADocument &amp;d, Track *t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RegionSequenceWrapper</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a4a62eeb79b8690c543c258630c7f2603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_MEMBER_PTR_ARGS(ARARegionSequenceProperties, color)&gt;</type>
      <name>getRegionSequenceProperties</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>acb2176a2a061f8d83c93a7e693cd5a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARARegionSequenceRef</type>
      <name>regionSequenceRef</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a79e8872799fb0c64f5b21928ea9e4164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>acd77ddbb5444d4564859dc7c03331ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track *</type>
      <name>track</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a47c8d9c383fe28b15c8dc0c753eb7c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RemoteSLCompact</name>
    <filename>classtracktion__engine_1_1RemoteSLCompact.html</filename>
    <base>tracktion_engine::NovationRemoteSl</base>
    <member kind="function">
      <type></type>
      <name>RemoteSLCompact</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a8d84122b63aebba547d7937c5af1afcd</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RemoteSLCompact</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>abce233480bef7926adbfb71757d77c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a85c3afb199eb19de5ba4dca21e7ec6d3</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ae82bab7fdb866a7c3a89b2ee89bd3660</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ac0495f7789d142ca2619cde83f2910bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ac183d6b0e232f9ac5fbf728f0b0ca897</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a38416b9da21965291cdc39ad1ace38e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ae5a2219c0d6b2d4522f861493594975b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a98c383dc12c5679793189dfca13bac21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion__engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ad4c9e29014aeaced3575b16e4cdc39d9</anchor>
      <arglist>(Plugin *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Renderer</name>
    <filename>classtracktion__engine_1_1Renderer.html</filename>
    <class kind="struct">tracktion_engine::Renderer::Parameters</class>
    <class kind="struct">tracktion_engine::Renderer::RenderResult</class>
    <class kind="class">tracktion_engine::Renderer::RenderTask</class>
    <class kind="struct">tracktion_engine::Renderer::Statistics</class>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkTargetFile</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>af49d3122e399843f280aee061d13a6f3</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>turnOffAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>ab060d9867515b126cfe71c44057a0d1f</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItem::Ptr</type>
      <name>renderToProjectItem</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>ae49135e9ee22a8133b0ce0d75a1d3090</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Parameters &amp;params)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>renderToFile</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>a3b813e010dcea26184bf50faffc9a74f</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Parameters &amp;params)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>renderToFile</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>a536f95b1958313d4b88b0131f4dd0234</anchor>
      <arglist>(const juce::String &amp;taskDescription, const juce::File &amp;outputFile, Edit &amp;edit, EditTimeRange range, const juce::BigInteger &amp;tracksToDo, bool usePlugins=true, juce::Array&lt; Clip * &gt; clips={}, bool useThread=true, std::atomic&lt; float &gt; *progressToUpdate=nullptr, std::atomic&lt; bool &gt; *cancelRender=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistics</type>
      <name>measureStatistics</name>
      <anchorfile>classtracktion__engine_1_1Renderer.html</anchorfile>
      <anchor>a8687157e8ef6da42517b252254c5ff21</anchor>
      <arglist>(const juce::String &amp;taskDescription, Edit &amp;edit, EditTimeRange range, const juce::BigInteger &amp;tracksToDo, int blockSizeForAudio)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ClipEffects::RenderInhibitor</name>
    <filename>structtracktion__engine_1_1ClipEffects_1_1RenderInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderInhibitor</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1RenderInhibitor.html</anchorfile>
      <anchor>a2f32e8e3319ca2596e91cfb2603d3161</anchor>
      <arglist>(ClipEffects &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderInhibitor</name>
      <anchorfile>structtracktion__engine_1_1ClipEffects_1_1RenderInhibitor.html</anchorfile>
      <anchor>a9ddd99d1da7aedf925443d92e4584e38</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RenderManager</name>
    <filename>classtracktion__engine_1_1RenderManager.html</filename>
    <class kind="class">tracktion_engine::RenderManager::Job</class>
    <member kind="function">
      <type></type>
      <name>RenderManager</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a9002632cc52d0b0c81c5fd1eaa4465b8</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderManager</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>ae15c8dec53b265bf04d672d8c669f055</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUp</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>abd524a03ad1877ed04e4d2752ae6c81c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Job::Ptr</type>
      <name>getRenderJobWithoutCreating</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a8cb19ba54f56cdd3596e9722cbd7ce62</anchor>
      <arglist>(const AudioFile &amp;audioFile)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Job &gt;</type>
      <name>getRenderJobsWithoutCreating</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>ae3d5ae5319f078393b17f00eb4226969</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumJobs</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a30fad25d9f3251944b8a71323fa39bbd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProxyBeingGenerated</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a24afcd36ebee17240babbed0f78facd0</anchor>
      <arglist>(const AudioFile &amp;proxyFile) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a5d96d91a29edf9d938dfb3edd4e83a9b</anchor>
      <arglist>(const AudioFile &amp;proxyFile, float defaultVal) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getAudioFileForHash</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a1638233bbdb996070f6fce3c4aedd55e</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;directory, HashCode hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringRef</type>
      <name>getFileRenderPrefix</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>ad87f110d9a8459ff8ce6ee9d411a9a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1RenderManager.html</anchorfile>
      <anchor>a3de90d1eff11e1984d49eedf13fa25b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::RenderOptions</name>
    <filename>classtracktion__engine_1_1RenderOptions.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TargetFileFormat</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>wav</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a2f8ac97270ef9338f7732aaf50f68a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aiff</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aa0dc023049397d02a3b96dffdaa10811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>flac</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a2ddd1a53853f1bf408742d1e1e3fe34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ogg</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aed11558ce903da82f9eae61f4b9bf981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mp3</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aeb2de812aecb10c2524f9723c89271f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a158010d35d2a339842b58400c703e00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFormats</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aecae0c6deab7464a81c0a40c0e987b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AddRenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aa4d1e3382294a8247b2808805ca1bc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aef4e2f0511135f81fa0b7927ccd4ee56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aca3fb4cd30e464a3d907704179970e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thisTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125a41059994b080f37ea8c5fe353e0f7e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceClips</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125a9791a90fca6958410e3859ffd0e5bccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aeec15b5d41d30dbe8befdf0b669b689f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderType</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a05a17d44acf7e7359252c4d63f45301d</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1RenderOptions.html" anchor="a05a17d44acf7e7359252c4d63f45301dae51779bb4944e35c733f0d34f237c90e">editClip</enumvalue>
      <enumvalue file="classtracktion__engine_1_1RenderOptions.html" anchor="a05a17d44acf7e7359252c4d63f45301daf6d8b886335927d46fad323c60335d09">clip</enumvalue>
      <enumvalue file="classtracktion__engine_1_1RenderOptions.html" anchor="a05a17d44acf7e7359252c4d63f45301da368cc7b17925cc0f9c4b5a90db1e68c1">track</enumvalue>
      <enumvalue file="classtracktion__engine_1_1RenderOptions.html" anchor="a05a17d44acf7e7359252c4d63f45301daa5f4ed7e858bf18cc1f2c0e35e7301e7">midi</enumvalue>
      <enumvalue file="classtracktion__engine_1_1RenderOptions.html" anchor="a05a17d44acf7e7359252c4d63f45301daa55ca07edaf02d9bd51201307650e1a7">allExport</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>wav</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a2f8ac97270ef9338f7732aaf50f68a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aiff</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aa0dc023049397d02a3b96dffdaa10811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>flac</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a2ddd1a53853f1bf408742d1e1e3fe34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ogg</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aed11558ce903da82f9eae61f4b9bf981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mp3</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aeb2de812aecb10c2524f9723c89271f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4a158010d35d2a339842b58400c703e00f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFormats</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a24077cbf9c84024660e08a2e84278fd4aecae0c6deab7464a81c0a40c0e987b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aa4d1e3382294a8247b2808805ca1bc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aef4e2f0511135f81fa0b7927ccd4ee56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aca3fb4cd30e464a3d907704179970e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thisTrack</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125a41059994b080f37ea8c5fe353e0f7e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceClips</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125a9791a90fca6958410e3859ffd0e5bccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0702990dd2625cf8a088c4fcf4e97125aeec15b5d41d30dbe8befdf0b669b689f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acd77dd8ca5c70ab1202c21bfa753a08e</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a19837553af5504a341463b0950727bba</anchor>
      <arglist>(const RenderOptions &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a971423c42b46806a2547e48274546e8d</anchor>
      <arglist>(Engine &amp;, const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a28fcdfb1e455f1631b7ab4ce931ccca6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a10dd45db20f631246787e194c5f6801d</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d7879bcce7d7b61c2b5b94cbc6de14</anchor>
      <arglist>(const RenderOptions &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a13398ce158ce4c22ac8b480fd44a9e68</anchor>
      <arglist>(RenderOptions &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad5dd93c8a5773032f8b8aeee1818ba9b</anchor>
      <arglist>(const RenderOptions &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions</type>
      <name>operator=</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a83af696b2cfcbfa6d7f52ba42cace48e</anchor>
      <arglist>(RenderOptions &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromUserSettings</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8055b3f7899029f7f942822fa3b4a42c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToUserSettings</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acba29992a48e8b4f20fbd74d7fec8da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToDefault</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa23bb0aef7faaabd7b65ad1ea6dbc3d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>performBackgroundRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a706181e8918a8817d5846568684b6a38</anchor>
      <arglist>(Edit &amp;, SelectionManager *, EditTimeRange timeRangeToRender)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aaccc44aaa9c2794ad8bea536e5061de5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a4157c2f9cf0474762227eecab5005954</anchor>
      <arglist>(Edit &amp;, SelectionManager *, EditTimeRange markedRegion)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ada0970abaf96f763a40ab0a1756bf8c8</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ada79223edead9e24378f5070ec3ceca9</anchor>
      <arglist>(EditClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aafedaa8184431ed23f93fde873512b3d</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getAudioFormat</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7d83e57eea80af069ba2d948012c1c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>applyRenderToEdit</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>af5830722e990f359a233638aa15312f0</anchor>
      <arglist>(Edit &amp;, ProjectItem::Ptr, EditTimeRange time, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUINeedsRefresh</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a69d15959dccba258f9f5b118b312c5bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUINeedsRefresh</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acf80dcaa4b0737f7fa15f4b57b03f826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditClipRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad2221275b10b1b40e1fdc73d6facd97c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClipRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6a15e58d4005b75511791292ba02b792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a040ffb412738d86943dfcda8f56dc878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6645014e3786039d9ab177cd51d20040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExportAll</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ae9fc6eb6aa39c152ac6f9ffe3326aa25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ae82b3b9d99d43f30b082339f553bcec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TargetFileFormat</type>
      <name>setFormat</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ae68c294a65f5918572f35480786ae616</anchor>
      <arglist>(TargetFileFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormatType</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac9b4390f5c0604367855889f0322af0f</anchor>
      <arglist>(const juce::String &amp;typeString)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFormatTypeName</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>adf6fce0b7115e05bfaadb3dda5791c24</anchor>
      <arglist>(TargetFileFormat)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getTrackIDs</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acd4c50cb0e3d8317789c6e3e7999c4f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackIDs</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8a5a9f24cd23c5965b9779b806068443</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getTracksHash</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8875cea72936ab9060e681153eaafb06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac53503b56e885efb68cb304018a74f43</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitDepth</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>adc60d69148fbdca1b3bea0d9fb4be76d</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getQualitiesList</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a492819d97c878d9d618669bb74117eea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getQualityIndex</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a9cdc6e2531d7bbacb395dcf160de05ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQualityIndex</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac28fa1bfeb09ee7bdaafce5a20dfe065</anchor>
      <arglist>(int q)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDestFile</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a219351957d98610e8aa0f260ca94b2e0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFileExtension</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a9346c5cabba58aac372e0d299b9a9b63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TargetFileFormat</type>
      <name>getFormat</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3fbc3de86c7f470bc52676180130fbf5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aab995d1171ebee32b2d66d9059e68dc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStereo</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad40120daae9bf72b436eff7b6a738a88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a712b529333eb4454ef931dc80bf0b2e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldAddMetadata</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab4f572d20bafd91ab551111d2ff13636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getTrackIndexes</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a63f6e35a20ecb51e84f40b9fc73a4740</anchor>
      <arglist>(const Edit &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRemoveSilence</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6f5cb98ea678d431072f8284f1353a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMarkedRegion</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a583c2e0ef9c0cd74ba1a59f934c9c12b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTracks</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>af35be13c1ee1cce14dc5fe30218370ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7feb8a24758467d52a977a0e4213cdcf</anchor>
      <arglist>(bool onlySelectedTrackAndClips)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkedRegion</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac713e6f12db627e0f782dfbe67bfd41f</anchor>
      <arglist>(bool onlyMarked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIncludePlugins</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6287f3c411d565d3fbaa7bcd2c7be4a2</anchor>
      <arglist>(bool includePlugins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddRenderOption</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8c3dd44238c0dfd63d11840c16461ae0</anchor>
      <arglist>(AddRenderOptions options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndAllowance</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>afcd72ccc23e7bd563879e931e3bf4c97</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a62936802a60ff32f949eae04c007ff2f</anchor>
      <arglist>(juce::String, bool canPromptToOverwriteExisting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0b0938a81a571a37d5312fa6b544ecd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getFormatTypes</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acc1e35a6e270f47fefa3e7a98ec93498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAddRenderOptionText</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa3e8ad0209cabd867e2a66dbc3aedb70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forGeneralExporter</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a706e2f7b8355961095b03ab37741300f</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forTrackRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a335f51f97409468791711d91c1e3b540</anchor>
      <arglist>(juce::Array&lt; Track * &gt; &amp;tracks, AddRenderOptions addOption)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forClipRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a30c2e03904329978809ff6537394e3ce</anchor>
      <arglist>(juce::Array&lt; Clip * &gt; &amp;clips, bool midiNotes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forEditClip</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8a5339f98d4076562e840700903dfb36</anchor>
      <arglist>(Clip &amp;editClip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>findEndAllowance</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0990c7307a4bb8366835dc2f0c5b7dc7</anchor>
      <arglist>(Edit &amp;, juce::Array&lt; EditItemID &gt; *tracks, juce::Array&lt; Clip * &gt; *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMarkedRegionBigEnough</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac473bbf93113922da8626a61abeae630</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a2160ab10f9a01fc4c7bce93a53977b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; RenderType &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a13dadcb0399e7c087bdbb2d50828f75b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>tracksProperty</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a04390f57bd6a1944ac648283275dd8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>createMidiFile</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a61e02e554a05f2c1451e805f0c73cfe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TargetFileFormat &gt;</type>
      <name>format</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a581f49aabcb5030e9a2729e5b2974708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>stereo</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ddfa1dea80f96424d74bad0b4025273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7a8bce7581d8cb864b98af24342fd9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>bitDepth</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a28e401e0a509502b5299dc421677484d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>qualityIndex</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a999b2efd72a22f44fd3aff9f2d7da94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>rmsLevelDb</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7ebbb3b04c3ab4db2a69054479703be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>peakLevelDb</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a19c5fbce7bac8550a37412967646bb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>removeSilence</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac79637722166f78b09fbe33f0b7d7635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>normalise</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3ac44bb6bc3aa3754ddf5aea4812381d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>dither</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a676098b32464146499ee4ed7b8e4c5b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>adjustBasedOnRMS</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5d409878f2bcb4df8dfd65df182c44e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>markedRegion</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aefd1d31ab2a4e1767d26eeb99e3d94b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>selectedTracks</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0090e25e513c14e3df3d4bf0eadad4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>selectedClips</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>af523d6c428987590103d4656c39d62e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>tracksToSeparateFiles</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>aba6902c9233dc65b090c71fd7e8e269c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>realTime</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>adc87e4f7b3744b70325e7066d1df5dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>usePlugins</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a62dcb1279bbc050d65dc0500097b9791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AddRenderOptions &gt;</type>
      <name>addRenderOptions</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab3eed798bff6b0d73d7c8d8668a54ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>addRenderToLibrary</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acdf41e19d5e9f0197ca6436173134d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>reverseRender</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac4f236e7da35a11fa1ab5d569601c6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>addMetadata</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7a7375196e8fc9d4ac86c5c72181bea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(AudioClipBase &amp;)&gt;</type>
      <name>offerToAddClipToLibrary</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3d952241a03c854781717d9967cddb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const juce::File &amp;)&gt;</type>
      <name>offerToAddFileToLibrary</name>
      <anchorfile>classtracktion__engine_1_1RenderOptions.html</anchorfile>
      <anchor>acd0bbdcc8783fafe0a0f0966a927d37d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Renderer::RenderResult</name>
    <filename>structtracktion__engine_1_1Renderer_1_1RenderResult.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a4d6f706dc3422e52804bda6c495a269e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a7fe513cf9cc79ea52d53395a2eb87062</anchor>
      <arglist>(const juce::Result &amp;r, ProjectItem::Ptr mo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>ac887cc95b91836293acd0c9b8a611e0f</anchor>
      <arglist>(const RenderResult &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RenderResult &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a29660fbb0af47b180a74789000db8ebd</anchor>
      <arglist>(const RenderResult &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type>juce::Result</type>
      <name>result</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>ad13e2480923d8ae3ec7b26d60a0f3d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedArray&lt; ProjectItem &gt;</type>
      <name>items</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a1c2571a28f7f494f0fbc474bb7420c11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Renderer::RenderTask</name>
    <filename>classtracktion__engine_1_1Renderer_1_1RenderTask.html</filename>
    <base>tracktion_engine::ThreadPoolJobWithProgress</base>
    <member kind="function">
      <type></type>
      <name>RenderTask</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a903f90a47c77b62f4b8b5c4f9a091c86</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Renderer::Parameters &amp;, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderTask</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a809ccd8a05c055d4402a6138c513e9e3</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion_graph::Node &gt;, std::unique_ptr&lt; tracktion_graph::PlayHead &gt;, std::unique_ptr&lt; tracktion_graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderTask</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a6ef8158c6d58bb6e874cc8fc6cebf4dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a849b40a428b7d8af776926ab54be15ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a4e44b05ba3521dd4270d87398907551f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performNormalisingAndTrimming</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a92285b6cd4c24a6d7d214dec2e00af73</anchor>
      <arglist>(const Renderer::Parameters &amp;target, const Renderer::Parameters &amp;intermediate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flushAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>aa7626d29b891805a5d7225c14071b1ef</anchor>
      <arglist>(const Plugin::Array &amp;, double sampleRate, int samplesPerBlock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllPluginsRealtime</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>af595fcc85c649385417c8f0150f40df9</anchor>
      <arglist>(const Plugin::Array &amp;, bool realtime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>addMidiMetaDataAndWriteToFile</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a022519d1b0ece9dcda63d99d2c4a35d9</anchor>
      <arglist>(juce::File, juce::MidiMessageSequence, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Renderer::Parameters</type>
      <name>params</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>aa0dbb48ad3037875139e800077d87cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>errorMessage</name>
      <anchorfile>classtracktion__engine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a762002894de331ebdb47ed8f9af58f33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::ReturnNode</name>
    <filename>classtracktion__graph_1_1ReturnNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ReturnNode</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a79edf188757e176965bed95daef7e6c4</anchor>
      <arglist>(int busIDToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReturnNode</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a98f0ad61e197981c6edb6c591957b9fd</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a8a41bbf6ee9ea5f2ea0b7b19fa5edd4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a28020aadfee864679997ec650d546e85</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a68c58299ec25c1955650d43ab23644dd</anchor>
      <arglist>(Node &amp;rootNode) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>aac877e5279a83f343d67d279308f6bab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1ReturnNode.html</anchorfile>
      <anchor>a075dbc5d97279ff10ef379dfee4eb528</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ReverbPlugin</name>
    <filename>classtracktion__engine_1_1ReverbPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ReverbPlugin</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ac38efe23ae7f8943d75ecb453f6ea8f0</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReverbPlugin</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a2b3adf5d93b7683b0ffbeed20416faa9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a70a75a8798c6be70d258ce58e75117ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ac5acd51003093e7cbd889c61590651eb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a8cbddd88874c55ad584a87645442fcdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a1f9ed7185e0158607f454911c389946d</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a60ba8d8a5d47762dce60eaa4055f453c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aa8d625e0747031faa08ff582cf12df5b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ae64f005efbfd820af1df4a3fa742023a</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a9cfcc80ac1106197cd25e2daeae34fc8</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a791aca0879a401e815407bdd3deb1cab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aea49372966c4805075e859c1366ee9c8</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoomSize</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>acfd632b69c0a4b3821d2feffbbd45fac</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRoomSize</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a60041bcc64cd538f92d3705c824348a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDamp</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ad2e89b7595ae446eb6851db6dd7c579d</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDamp</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a0edabf14c820d401d23d0651b7fb0b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWet</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a4e424db06df657953a82c595207e83f0</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getWet</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a378a6be593ada394867ab86288ec9c09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDry</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aea7b7fac31ac5d7471aa2aae367c57ed</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDry</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a561f43df0b644538423550a16e54be9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ae31abbdd4f8855f6dac8ae58a7540294</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getWidth</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aff3b5fc84d166361c4b2884614644188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a8787e9181a3a8abeac1ad579e7a05d9f</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getMode</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a8d42e8ccd03bc60e0ab7cba4fd8e4a7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a07f280ddf3407d858901f6a05fbab49e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>roomSizeValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a1225acf9b4852dbf5a05a28afdd1e216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dampValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a9ab433b9149752f9cfb51643a41e868b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a093523cf731eba7e87706ebfa48d519e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aa9fc8c361ce276373e8b56a12894758d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>widthValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ae5742d0972b7f1fe4fe7fb865e3c8fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modeValue</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>afc7dd9f6e2606480c3ca500fd9bbf7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>roomSizeParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a2a5e20c5f21e655b8d9e90536411c365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dampParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a404761503db74ae8ee78c3a6f15834a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ae83b69f3a119dfc3d4e2db9a1c0df586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a9c438bdfc966fc071c11fc3a4cef662e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>widthParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a562f8174cad2af27a8635d411c8abbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modeParam</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aec0d3ab7c93c20d4ec66ab67d45d7032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a80d135fb7abc46e650ef531ee91ae995</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ReverseEffect</name>
    <filename>structtracktion__engine_1_1ReverseEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>ReverseEffect</name>
      <anchorfile>structtracktion__engine_1_1ReverseEffect.html</anchorfile>
      <anchor>a71f52f0969d2408856c750ae044f8076</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1ReverseEffect.html</anchorfile>
      <anchor>a9d4cb266d4070e8d68dbbb812943fdb3</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ReverseRenderJob</name>
    <filename>classtracktion__engine_1_1ReverseRenderJob.html</filename>
    <base>tracktion_engine::RenderManager::Job</base>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion__engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>a0ef92abc4a4e60d8fabea1e6ed437e89</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;source, const juce::File &amp;destination)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion__engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>ae23afb13c6430baa06637153e7bd7ce7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion__engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>a54c4339ff96a64f2c687e1a361a47aeb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion__engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>aa083a78c064820238871af5f32ba0777</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SamplerPlugin</name>
    <filename>classtracktion__engine_1_1SamplerPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <class kind="struct">tracktion_engine::SamplerPlugin::SamplerSound</class>
    <member kind="function">
      <type></type>
      <name>SamplerPlugin</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a90558673e49b57109eb14f425f258ffa</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SamplerPlugin</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a15b6ab95bf9a19667458923eb327b759</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSounds</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>af63e69d7d45620cf5f5bd918f09bbf06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSoundName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a3aa2ccf4bb05f362226a88fa3ab141b7</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a1010b17d518d26d18b21e9b1522da102</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSoundFile</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7c64e8cb904bad73ba084e0304a39388</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSoundMedia</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad34d762f5584a3c8933e045190e64320</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKeyNote</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a42db2c994f252653581ac3d62eeb21dd</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinKey</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a5c0ebbf4bed70058953f40310810f69e</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxKey</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad7d83b587db9c26fe151dd76f07626cf</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSoundGainDb</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7eab04a52affd456bad1edd122db19db</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSoundPan</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a1b9497018c8248cbe4507fdd9596e747</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoundOpenEnded</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ac10a82359f74df10279030decfd4f6bf</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSoundStartTime</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ab61b5568e9e04622e9f5d596edb1cd30</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSoundLength</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a35293a347d67ed1d9f642e31a6e6399a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundExcerpt</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a54db32c85d480d05f8ff569b7e8c431e</anchor>
      <arglist>(int index, double start, double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>addSound</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aa78a9bb5da27a1f82fd6ca7016501819</anchor>
      <arglist>(const juce::String &amp;sourcePathOrProjectID, const juce::String &amp;name, double startTime, double length, float gainDb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSound</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>af8921617084101f440d67593982cac0b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundParams</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad11ec3d320e405fa79a92307458ffb20</anchor>
      <arglist>(int index, int keyNote, int minNote, int maxNote)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundGains</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a34eb501657aa3ed61a32a6cee00ea3c5</anchor>
      <arglist>(int index, float gainDb, float pan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundOpenEnded</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7fc60e8fd362719e7f4e103a6d6c42da</anchor>
      <arglist>(int index, bool isOpenEnded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundMedia</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad951b1e6b88e3560a57a98bacac29c6a</anchor>
      <arglist>(int index, const juce::String &amp;sourcePathOrProjectID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playNotes</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad432a94d287b086c7499959b01923e1e</anchor>
      <arglist>(const juce::BigInteger &amp;keysDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allNotesOff</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a03e0cfc5590d473e49d31f2b9c72fb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a912e48070ce4b772adebc5ebbbd75d07</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a6930e7993a0a723f3b70daf41677bb80</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a67ab50aa4c40ceab5d600c7a66332a6a</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a9bbfa3d76e0a015b984630bd2b335563</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a4719e63a90014bf2cb6fdaa2eb794551</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>adf4f60bd9e47eaca6f59fb3c97adf9e0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aebf4b7fa5deab3280ba6690c539f5507</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a4e27d57a5eab16c59a8f759dfa367728</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a6229ed7e56b1bca62bb8833ed4db2e93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a0b978bcb95a29fced3ce63e18d02c2ef</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a03b619510aa4862a76585229b592e961</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a22eaaae84e86ae8d6e9ee140b0bf4a9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a1c96b8a5a6f09ca5c33f981afdffe9f0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a1c492e52a48b42a48c92be9732fffde7</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aaa477f8b3fc94da3a1ef41336ef703f6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a8dfbce8482a5aabcef6c3d9c49a44cf8</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a9d06fbdb270d733fdbcb55f4cfc51090</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a0949d050ffc6d36eea160824519d9249</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a8995e3d6872ea916177cab4fcdd35f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ac5e830adeded09fb86c892b1905e4b7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SamplerPlugin::SamplerSound</name>
    <filename>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</filename>
    <member kind="function">
      <type></type>
      <name>SamplerSound</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a5b12fbe85bc9abe8192a1485e9ff1b85</anchor>
      <arglist>(SamplerPlugin &amp;, const juce::String &amp;sourcePathOrProjectID, const juce::String &amp;name, double startTime, double length, float gainDb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExcerpt</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a5faa22180462e10dd706d0d0c7d3ce09</anchor>
      <arglist>(double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFile</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a26d6eeaac1542a7c89369ec10e459c3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SamplerPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a1414b942ee849fd32c518e740cdeacc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>source</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>af96eed26b29cc08830667e32726520ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>aee1cdb24d2d65b7f82ce6e9d7fdb9b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyNote</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>abb9379f617dfef46f6a0a0d7582627c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minNote</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>af14f6e39d3b2cd668f70b1f177765fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxNote</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a3780f9a633625695d01948571a48a5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fileStartSample</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a39094a11e3930f120cdefc0e68d19f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fileLengthSamples</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a65f20232e58ba411b309e5a84d2da64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>openEnded</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a9b4358f9dc3c88125275b7db361419b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gainDb</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a4f120f65a0d9e05e059a82431b6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pan</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>aea2d7e4b29320121d13892068ff95f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>abdc021936790aee147fc24fd8c9191f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>length</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>aaa68c8f3701a6c3af6b8ede9140f656a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>audioFile</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a49f33bb540b8eb216aaafc3f61b2b12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>audioData</name>
      <anchorfile>structtracktion__engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a35b3ba242637104e401937f3e5960563</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Scale</name>
    <filename>classtracktion__engine_1_1Scale.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ScaleType</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>major</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa6d04d65555f1a424b42c06e23158d0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa8994e4d96796b6899eee96a669149ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ionian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa6b8704a2feb80ededcea9fc73d36115e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dorian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa054d5aa6a1f3877ff60191b1a6b06e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phrygian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa4390f94b8607ba7436893464b1b25dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lydian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa5c0eca11744a103686585ca49d36dbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mixolydian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa225615ece40253f239c02fa3a7d97c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aeolian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa08a7f270f739f60dc1bf42361d7bc3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>locrian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa081349d6d10efe45abadc93e28c8dbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodicMinor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa64f66b5dd36b7172f5dc9cb893958839</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>harmonicMinor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa211d4874806055c2a456378d662d9c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Steps</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Whole</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba3a9d8903a3cbf0186fd3f7341e933515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Half</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba7e35caf7e1314c3c604d29f300bb246d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WholeHalf</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba3b438034bee3b5d8f8738763cfa25212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Intervals</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a2d0ae3a7183bcef888e5761a9d53a283</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a865c0c0b4ab0e063e5caa3387c1a8741">i</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a7e98b8a17c0aad30ba64d47b74e2a6c1">ii</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a36347412c7d30ae6fde3742bbc4f21b9">iii</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283af0b53b2da041fca49ef0b9839060b345">iv</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a9e3669d19b675bd57058fd4664205d2a">v</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a35b36b28916d38b34abddf832e286126">vi</enumvalue>
      <enumvalue file="classtracktion__engine_1_1Scale.html" anchor="a2d0ae3a7183bcef888e5761a9d53a283a44b7ed6c8297b6f269c8b872b0fd6266">vii</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>major</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa6d04d65555f1a424b42c06e23158d0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa8994e4d96796b6899eee96a669149ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ionian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa6b8704a2feb80ededcea9fc73d36115e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dorian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa054d5aa6a1f3877ff60191b1a6b06e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phrygian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa4390f94b8607ba7436893464b1b25dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lydian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa5c0eca11744a103686585ca49d36dbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mixolydian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa225615ece40253f239c02fa3a7d97c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aeolian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa08a7f270f739f60dc1bf42361d7bc3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>locrian</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa081349d6d10efe45abadc93e28c8dbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodicMinor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa64f66b5dd36b7172f5dc9cb893958839</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>harmonicMinor</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3a7c774dd731ec6eb04c59487db984dfa211d4874806055c2a456378d662d9c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Whole</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba3a9d8903a3cbf0186fd3f7341e933515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Half</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba7e35caf7e1314c3c604d29f300bb246d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WholeHalf</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4f98c3b3c9338b3421f5c20ab18cdd0ba3b438034bee3b5d8f8738763cfa25212</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a095f5750bd34e9bc4cf6c2e241d4c5ca</anchor>
      <arglist>(ScaleType type=major)</arglist>
    </member>
    <member kind="function">
      <type>ScaleType</type>
      <name>getType</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4645fa8b23dc613244832629e2570714</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>ae66aa9f50b03c2462f59b388d3c6b346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4fba860f85120c08975b9af3272d318d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>afe0b6ce3a3b02de7b4bbbb2d70b2a81c</anchor>
      <arglist>(int octaves=1) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getIntervalName</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a18ee186dd5d1eae5b79f864becb8d6bf</anchor>
      <arglist>(Intervals interval) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getTriads</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a6e7ce9b03628d7fea0a37aab6bf11efc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getSixths</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a7baf534d272a1788227ea3e80bb36491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getSevenths</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a4971de5d84a6336d60fd85cc41b46951</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getIntervalNames</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a3c1aacf59cc4add745083abb139b510b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ScaleType &gt;</type>
      <name>getAllScaleTypes</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a408c4588d95eba2bac9db9998a21feb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getScaleStrings</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a85ab7cd1dd5ed4d9598e506a3605ce7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameForType</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a65f8fe2fd37383045f131aad2498a7d4</anchor>
      <arglist>(ScaleType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getShortNameForType</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>aabf5756329022bfd9ab5aba594be929f</anchor>
      <arglist>(ScaleType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleType</type>
      <name>getTypeFromName</name>
      <anchorfile>classtracktion__engine_1_1Scale.html</anchorfile>
      <anchor>a736100a5dc5c9b7ff2a7f5b58698b74a</anchor>
      <arglist>(juce::String name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ScopedBenchmark</name>
    <filename>structtracktion__engine_1_1ScopedBenchmark.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedBenchmark</name>
      <anchorfile>structtracktion__engine_1_1ScopedBenchmark.html</anchorfile>
      <anchor>a2419404bc171c458132d11388f541fc5</anchor>
      <arglist>(BenchmarkDescription desc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedBenchmark</name>
      <anchorfile>structtracktion__engine_1_1ScopedBenchmark.html</anchorfile>
      <anchor>a906c17e97f936b4fbc708f11e63176a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiLearnState::ScopedChangeCaller</name>
    <filename>structtracktion__engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedChangeCaller</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>a4eace576f42653adc1aa77373e686543</anchor>
      <arglist>(MidiLearnState &amp;, ChangeType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedChangeCaller</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>ad1cc8160b3e49c7c1057f9bd1a25a6f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>MidiLearnState &amp;</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>ac999c0a3d4741d9cc7b93e9c27c4f818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ChangeType</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>acb241a0ed344463e581128dba139309f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TransportControl::ScopedContextAllocator</name>
    <filename>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedContextAllocator</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a8247e9f538d15a9fd8d5f1207fdbf7cb</anchor>
      <arglist>(TransportControl &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedContextAllocator</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a1a468990c9ead78a52b3b186aae04059</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>tc</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>af2a261a5ae7dbfa1991c7c42f86b4cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasAllocated</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>aa3fb254bf5a9cd57e1f8c6a76a146594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScopedPlaybackRestarter</type>
      <name>playbackRestarter</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a55618d92520ce8de6e4120a3835d2e95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ScopedCpuMeter</name>
    <filename>structtracktion__engine_1_1ScopedCpuMeter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedCpuMeter</name>
      <anchorfile>structtracktion__engine_1_1ScopedCpuMeter.html</anchorfile>
      <anchor>ae0c9361c02835cc16b0a0ae8a01b62dc</anchor>
      <arglist>(std::atomic&lt; double &gt; &amp;valueToUpdate_, double filterAmount_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedCpuMeter</name>
      <anchorfile>structtracktion__engine_1_1ScopedCpuMeter.html</anchorfile>
      <anchor>a6428ac9a32e33b7c85231aff872dabfd</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::EditPlaybackContext::ScopedDeviceListReleaser</name>
    <filename>structtracktion__engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedDeviceListReleaser</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>a19fe25ede2226f43e1515dc1e6004aca</anchor>
      <arglist>(EditPlaybackContext &amp;, bool reallocate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedDeviceListReleaser</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>ad86d23c22f19dd7c4a405281411fad86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>ade4a3cc35dc1534a42588bba408734da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>shouldReallocate</name>
      <anchorfile>structtracktion__engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>afca1a23ace5f8dec4a82f4a3e9028c1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ScopedDirectoryDeleter</name>
    <filename>structtracktion__engine_1_1ScopedDirectoryDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedDirectoryDeleter</name>
      <anchorfile>structtracktion__engine_1_1ScopedDirectoryDeleter.html</anchorfile>
      <anchor>a26eeff8159141b33c6f3ac08edd22cf6</anchor>
      <arglist>(const juce::File &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedDirectoryDeleter</name>
      <anchorfile>structtracktion__engine_1_1ScopedDirectoryDeleter.html</anchorfile>
      <anchor>a02b2d07ddc4879a80f194f4f8c09c0f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::MidiClip::ScopedEventsList</name>
    <filename>structtracktion__engine_1_1MidiClip_1_1ScopedEventsList.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedEventsList</name>
      <anchorfile>structtracktion__engine_1_1MidiClip_1_1ScopedEventsList.html</anchorfile>
      <anchor>a29b43b1622d502f16477def39e4a96df</anchor>
      <arglist>(MidiClip &amp;, SelectedMidiEvents *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedEventsList</name>
      <anchorfile>structtracktion__engine_1_1MidiClip_1_1ScopedEventsList.html</anchorfile>
      <anchor>a5097897cc135ee99b1111c6dacc417ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::WaveInputRecordingThread::ScopedInitialiser</name>
    <filename>structtracktion__engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedInitialiser</name>
      <anchorfile>structtracktion__engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>a55dc6891b698129fedb4a5222cbaff84</anchor>
      <arglist>(WaveInputRecordingThread &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedInitialiser</name>
      <anchorfile>structtracktion__engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>a5944f581466607629f8c429dcba03546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WaveInputRecordingThread &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>a949307885dda16541b3d132ee0dcdbc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::ScopedPerformanceMeasurement</name>
    <filename>classtracktion__graph_1_1ScopedPerformanceMeasurement.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPerformanceMeasurement</name>
      <anchorfile>classtracktion__graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>ad3669a967633bddf56452e946c2d7c01</anchor>
      <arglist>(PerformanceMeasurement &amp;pm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPerformanceMeasurement</name>
      <anchorfile>classtracktion__graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>af575f569036417e4b8d219f2aec173de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>PerformanceMeasurement &amp;</type>
      <name>performanceMeasurement</name>
      <anchorfile>classtracktion__graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>abae71069b17d9aa8e773c7ddbaa442a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TransportControl::ScopedPlaybackRestarter</name>
    <filename>structtracktion__engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPlaybackRestarter</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>a31c93d38575154dbc21bad465392135b</anchor>
      <arglist>(TransportControl &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPlaybackRestarter</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>ad09cabe13bb138e5b6345ad6c8c5bd25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>tc</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>a191087c8edab0ed4b8863f77098a23fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasPlaying</name>
      <anchorfile>structtracktion__engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>a2d09d7ce6a58c878f977317dee4a669d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FreezePointPlugin::ScopedPluginDisabler</name>
    <filename>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPluginDisabler</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</anchorfile>
      <anchor>aefd353609575c570fef01136a09020b2</anchor>
      <arglist>(Track &amp;track, juce::Range&lt; int &gt; pluginsToDisable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPluginDisabler</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</anchorfile>
      <anchor>a3ddd68653332d6c61d5a5fbffdb04ffa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ScopedPluginUnloadInhibitor</name>
    <filename>structtracktion__engine_1_1ScopedPluginUnloadInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPluginUnloadInhibitor</name>
      <anchorfile>structtracktion__engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>a88dac48540fb41ea8477fe33bb77dc71</anchor>
      <arglist>(PluginUnloadInhibitor &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPluginUnloadInhibitor</name>
      <anchorfile>structtracktion__engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>af28064ed4dd483f6d7786c617f409006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>PluginUnloadInhibitor &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>a9ef9535720017d8dcff2d132f06cf1a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::ScopedRenderStatus</name>
    <filename>structtracktion__engine_1_1Edit_1_1ScopedRenderStatus.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedRenderStatus</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1ScopedRenderStatus.html</anchorfile>
      <anchor>a5bc8d32230fbfe88cc62e46a5486e39d</anchor>
      <arglist>(Edit &amp;, bool shouldReallocateOnDestruction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedRenderStatus</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1ScopedRenderStatus.html</anchorfile>
      <anchor>a6b56c5b865eda4374e85c80603d91d27</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectionManager::ScopedSelectionState</name>
    <filename>structtracktion__engine_1_1SelectionManager_1_1ScopedSelectionState.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedSelectionState</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ScopedSelectionState.html</anchorfile>
      <anchor>aba28d8033985a4d70b23c9a64d63ca32</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSelectionState</name>
      <anchorfile>structtracktion__engine_1_1SelectionManager_1_1ScopedSelectionState.html</anchorfile>
      <anchor>a7e6bf790bb35a741500b688afd66f08c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::ScopedSignpost</name>
    <filename>structtracktion__graph_1_1ScopedSignpost.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedSignpost</name>
      <anchorfile>structtracktion__graph_1_1ScopedSignpost.html</anchorfile>
      <anchor>a6697a372410d2a7d5c325bf3d71c28e5</anchor>
      <arglist>(uint32_t signpostIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSignpost</name>
      <anchorfile>structtracktion__graph_1_1ScopedSignpost.html</anchorfile>
      <anchor>a598d5efd783b7e196896e726a671a5c8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ScopedSteadyLoad</name>
    <filename>classtracktion__engine_1_1ScopedSteadyLoad.html</filename>
    <class kind="struct">tracktion_engine::ScopedSteadyLoad::Context</class>
    <member kind="function">
      <type></type>
      <name>ScopedSteadyLoad</name>
      <anchorfile>classtracktion__engine_1_1ScopedSteadyLoad.html</anchorfile>
      <anchor>ac7df68d47a26f34aff4205af91c2ee87</anchor>
      <arglist>(Context &amp;contextToUse, int bufferSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSteadyLoad</name>
      <anchorfile>classtracktion__engine_1_1ScopedSteadyLoad.html</anchorfile>
      <anchor>ab6f69f9c6f8cb625e0ba578718d7ec7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FreezePointPlugin::ScopedTrackFreezer</name>
    <filename>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackFreezer</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a2477e70ac8a946219bbc12afcc6393c2</anchor>
      <arglist>(FreezePointPlugin &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackFreezer</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a24634f60f8d68dc17dcc734ef9cadeab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>trackID</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>ad7f6009abe0f5047027141ff9c3f01b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FreezePointPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>ad8ca5417b0b9a0a93c137ae54482138c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasFrozen</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a7c1bb97b0ee49e9f17af09ca0d2fca89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FreezePointPlugin::ScopedTrackSoloIsolator</name>
    <filename>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackSoloIsolator</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a0010ac0ee0080c9ede0d081b7c702fcf</anchor>
      <arglist>(Edit &amp;e, Track::Array &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackSoloIsolator</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a2b5572e97240d2a0ee317734b33dc58f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>ab9bf6e0ff1d7594b08739d46951fee7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Array</type>
      <name>tracks</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a6458431fb37e74e54230f6b3cafa63b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>muted</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a212bbbb0f6dc034d31de4712e38a28ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>notSoloIsolated</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a44994d09538d3366bcf0d2712e579a5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::FreezePointPlugin::ScopedTrackUnsoloer</name>
    <filename>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackUnsoloer</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>affd72e1fccff644c0afc1aa856f7e54c</anchor>
      <arglist>(Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackUnsoloer</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>a2a9c80a36db1cad57b447fa9f6e5ab11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>a970db035fb914633474a5226adedd42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>soloed</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>a70747f1d060d28b95c12911eb26cf378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>soloIsolated</name>
      <anchorfile>structtracktion__engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>ac9a46f8afa6015265f3287ae546c6478</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ScopedWaitCursor</name>
    <filename>classtracktion__engine_1_1ScopedWaitCursor.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedWaitCursor</name>
      <anchorfile>classtracktion__engine_1_1ScopedWaitCursor.html</anchorfile>
      <anchor>acca7985af79e8dff8d54386a2fab5db1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedWaitCursor</name>
      <anchorfile>classtracktion__engine_1_1ScopedWaitCursor.html</anchorfile>
      <anchor>a0e5da0191457ce00ce30e0a622c7d5dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioFadeCurve::SCurve</name>
    <filename>structtracktion__engine_1_1AudioFadeCurve_1_1SCurve.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1SCurve.html</anchorfile>
      <anchor>a0f83df03d6f702cf7d2982f0785a4838</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion__engine_1_1AudioFadeCurve_1_1SCurve.html</anchorfile>
      <anchor>a4765e1da6b0b02a474566a3dbf8f74ee</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SearchOperation</name>
    <filename>classtracktion__engine_1_1SearchOperation.html</filename>
    <member kind="function">
      <type></type>
      <name>SearchOperation</name>
      <anchorfile>classtracktion__engine_1_1SearchOperation.html</anchorfile>
      <anchor>ac3e6ed5ce00c7929b1a98531fc647ed5</anchor>
      <arglist>(SearchOperation *in1=nullptr, SearchOperation *in2=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SearchOperation</name>
      <anchorfile>classtracktion__engine_1_1SearchOperation.html</anchorfile>
      <anchor>a911302fa2dc808881b9a50c232d7cc10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; int &gt;</type>
      <name>getMatches</name>
      <anchorfile>classtracktion__engine_1_1SearchOperation.html</anchorfile>
      <anchor>ace841aec3c75f86e9034389dad70d443</anchor>
      <arglist>(ProjectSearchIndex &amp;)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::unique_ptr&lt; SearchOperation &gt;</type>
      <name>in1</name>
      <anchorfile>classtracktion__engine_1_1SearchOperation.html</anchorfile>
      <anchor>a78d1fce941a5f8a57717f79debc3afb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::unique_ptr&lt; SearchOperation &gt;</type>
      <name>in2</name>
      <anchorfile>classtracktion__engine_1_1SearchOperation.html</anchorfile>
      <anchor>a22c49344c48bba90276f1b7bb3d0ce45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackCompManager::TrackComp::Section</name>
    <filename>structtracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</filename>
    <member kind="variable">
      <type>CompSection *</type>
      <name>compSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</anchorfile>
      <anchor>ad20095ac7f063ca84fd30055009180b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>timeRange</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</anchorfile>
      <anchor>a022fc9f78f03d347a20a15e137e0fa81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TempoSequence::SectionDetails</name>
    <filename>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>bpm</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>ab93d78679eb8e1a72e43caf4f14ef595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a3720736bc987f016d19c136cc67c8daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startBeatInEdit</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a68056a3f533e2a5f27f3535baf2bcfd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>secondsPerBeat</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a4449c0c661aaa3a0917bd9fe2ebbbb2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beatsPerSecond</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a905f3d56afaa2757d820e3ad7a5980b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ppqAtStart</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>aed768336c15d0437c923edd789148c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>timeOfFirstBar</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>ae189b5295d0b940c499eef733d3313d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beatsUntilFirstBar</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a1c3b429df66ac7f4dacc84aa36b049e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>barNumberOfFirstBar</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a2a4a4c5f107833b2da2ac6b6c99fb05b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numerator</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a9454655e006afd0625ee66acba3c773e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prevNumerator</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a98c1d6bf2ad48ecdf1dfdb96eab5d61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>denominator</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a6b726ede07414bdf7d474b6aa320351d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>triplets</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1SectionDetails.html</anchorfile>
      <anchor>a2f664a47c94dc39393a1a2516c95f285</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AudioSegmentList::Segment</name>
    <filename>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</filename>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a48349d322e494dedc3baf0a30d096bd4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getRange</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ac78c8c383c7f86e2897d4dc4bc8c03b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleRange</type>
      <name>getSampleRange</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a30f2fc973fde9cab368b11df15cf1e5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getStretchRatio</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>aac52fe75fd04000773a52b85bbac3211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTranspose</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>af0a92942e46e55c87dbc4a843af9cf17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFadeIn</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a50883c6f231dec484ae455aeaaabf987</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFadeOut</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a460490e83ceda2a65984b785a95dd389</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFollowedBySilence</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ae10b7e5b26529d313458ba94f46fddef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHashCode</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ab0bffd451d996c3f9230d05a673736b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a444c58b6818edade1f92ea317548be35</anchor>
      <arglist>(const Segment &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>adc74b172545ad777ff9326f55c9de5eb</anchor>
      <arglist>(const Segment &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a25caabfcd4d272324506c2b8058d1c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>length</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>addb5d5362005e9c76f9465387e8cb6df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>startSample</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a36292e491c91ad7f86b82fe158ab8d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>lengthSample</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ac6c2054f630fadfc3b2684a83d2180ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>stretchRatio</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a3fde1ff75337c2308360dec50b9ecf9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>transpose</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>aee933131a583c12031dc40a6ce356589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fadeIn</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a2684f5237d01c1eba910526fd87d0471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fadeOut</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a90e8d037c98ee61929a597f498489bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>followedBySilence</name>
      <anchorfile>structtracktion__engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ad9cc9bf39adc67097f7b9946cb8a9e96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Selectable</name>
    <filename>classtracktion__engine_1_1Selectable.html</filename>
    <member kind="typedef">
      <type>juce::WeakReference&lt; Selectable &gt;</type>
      <name>WeakRef</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a03901c25cc0479dcdb3fa3ce8b8b28ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Selectable</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a2096e7ed30b68632686c677ca2ed60ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Selectable</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a45f08b8b55a66158ecfb18bb50f66e46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>ab341ce1abaeaeba59718a5645a8a30ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a6b30002526a0864aad9cfe50d0301827</anchor>
      <arglist>(bool isNowSelected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>changed</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a7c23e416b6cadd9fa26a812c6e53ae6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a1a3116869ad5bc5e5109d2b80d03129f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectableListener</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>adee970dacd0dae20b18684dea4b4ef60</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectableListener</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>ab7597996ba9e6ca5fcf4a718a2b7bf77</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelAnyPendingUpdates</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a453b982e2eb7b12122c36e9086b4f0c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a47d5eec2eb12c3d707add0a96944c53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesChanged</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>af88eab7875fc29c35e5771dc29899ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyListenersOfDeletion</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a2e40fc4d2b5e358b99355c4318d88934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WeakRef</type>
      <name>getWeakRef</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a501f2e66eb9b5a343cce4474021a68c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>af14c45320a137f788381bab45aedd731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSelectableValid</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a5ac76b0a90e6323c2f3246cec58405a5</anchor>
      <arglist>(const Selectable *) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>WeakRef::Master</type>
      <name>masterReference</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>ab191a8668f20c07c1390589a0a545576</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>SelectableUpdateTimer</name>
      <anchorfile>classtracktion__engine_1_1Selectable.html</anchorfile>
      <anchor>a51cda80856015bb27c8bea46370e6e22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectableClass</name>
    <filename>classtracktion__engine_1_1SelectableClass.html</filename>
    <class kind="struct">tracktion_engine::SelectableClass::AddClipboardEntryParams</class>
    <class kind="struct">tracktion_engine::SelectableClass::ClassInstance</class>
    <class kind="struct">tracktion_engine::SelectableClass::ClassInstanceBase</class>
    <class kind="struct">tracktion_engine::SelectableClass::SelectOtherObjectsParams</class>
    <member kind="enumeration">
      <type></type>
      <name>Relationship</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>ae327c8c1e8dd82c1ddeabe29b26601c4</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4a3e6d42b1a85f907c84a3441ac16530d4">moveUp</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4aeb49ef73b67efad2244f381785cbbe5f">moveDown</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4ab88578f049997f95e33ec4dbdc0d4bcc">moveLeft</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4a0ad4a1c5f4904c3e8a6ffac98fb4fad3">moveRight</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4a44aeb6a4fdd9248f6e796dcf9ea54626">moveToHome</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4aeba59aa9190c26d6ce287a7864071d7b">moveToEnd</enumvalue>
      <enumvalue file="classtracktion__engine_1_1SelectableClass.html" anchor="ae327c8c1e8dd82c1ddeabe29b26601c4ad40dca8f15a41825a96e2d6969673297">selectAll</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableClass</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a39fcf4bb0d1bcd993e8d43067c0899ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClass</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a22e2800ed43500d61398aaa7c836f99e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getDescriptionOfSelectedGroup</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a432e4f641d083847999ff81b630a0e56</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canClassesBeSelectedAtTheSameTime</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>acc3599c2d7beb825ce65909c89ca5208</anchor>
      <arglist>(SelectableClass *otherClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canObjectsBeSelectedAtTheSameTime</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a9a46b90955641e6b5efd5b8acb194fdb</anchor>
      <arglist>(Selectable &amp;object1, Selectable &amp;object2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addClipboardEntriesFor</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>aa3fe7877759131084215dc07677ef224</anchor>
      <arglist>(AddClipboardEntryParams &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a697859f8316a48ce481fcf35a19476f0</anchor>
      <arglist>(const SelectableList &amp;, bool partOfCutOperation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteClipboard</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>ab5482952bb00a204ab2a6e42e94709ea</anchor>
      <arglist>(const SelectableList &amp;currentlySelectedItems, int editViewID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canCutSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>adfc141f824720cd86d1913808d16ba46</anchor>
      <arglist>(const SelectableList &amp;selectedObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectOtherObjects</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>ac8f238dd5e7b35f70c67e7460cfc860a</anchor>
      <arglist>(const SelectOtherObjectsParams &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keepSelectedObjectOnScreen</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>aa9e21e786e6d14309819221d8c652bae</anchor>
      <arglist>(const SelectableList &amp;currentlySelectedObjects)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectableClass *</type>
      <name>findClassFor</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a98c2c9089012063108a99d1929b2b884</anchor>
      <arglist>(const Selectable &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectableClass *</type>
      <name>findClassFor</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a83db565b1253af820d7cd7712a6aa5ca</anchor>
      <arglist>(const Selectable *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areAllObjectsOfUniformType</name>
      <anchorfile>classtracktion__engine_1_1SelectableClass.html</anchorfile>
      <anchor>a89164396843b748f8715e56051c418bc</anchor>
      <arglist>(const SelectableList &amp;selectedObjects)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectableClassWithPan</name>
    <filename>classtracktion__engine_1_1SelectableClassWithPan.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClassWithPan</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>aa13ebd779d490a4d7bc825247a6051c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPan</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>a40d40abb7e48bd03a3f1b6d889b970fc</anchor>
      <arglist>(const SelectableList &amp;, float pan, SelectionManager *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPan</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>abf8577b31e7bb55b6d88b5162859114c</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPan</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>af558e6634fcefc13d53c82dc355ef423</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectableClassWithVolume</name>
    <filename>classtracktion__engine_1_1SelectableClassWithVolume.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClassWithVolume</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>acf75f18f84660ec8c9da2a1e239f53c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVolumeDB</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a0e3afb7b39f0b40da5cfd223dbb47191</anchor>
      <arglist>(const SelectableList &amp;, float dB, SelectionManager *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getVolumeDB</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a6a79a313beaa89c34087444b071c022a</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVolume</name>
      <anchorfile>classtracktion__engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a2f12359e573ff65e67a8fcd6bc54ba6a</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectableList</name>
    <filename>structtracktion__engine_1_1SelectableList.html</filename>
    <member kind="typedef">
      <type>juce::Array&lt; Selectable * &gt;::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a3bb05706a9a9c268ebda69768d66e4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a616776fb59cc2e2030904b35f94e2387</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a7da4fb59d197e7cf1e4e0680ab7e49e2</anchor>
      <arglist>(const std::initializer_list&lt; Selectable * &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>aa114fcf1e1586fdd86b5e832d115ec7b</anchor>
      <arglist>(const juce::Array&lt; SelectableType * &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>abb4a451407c7c50ad710a7cf70da61cb</anchor>
      <arglist>(const juce::ReferenceCountedArray&lt; SelectableType &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getSelectableClass</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>ab4bd24e4416913a8ad35ab69cb6bb932</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Selectable *, SelectableClass * &gt;</type>
      <name>getSelectableAndClass</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a3c0c32526bb9b005cf075112a9a087ad</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; SubclassType * &gt;</type>
      <name>getItemsOfType</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>ae8135cb1824fd56dd28f410341b3e62c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubclassType *</type>
      <name>getFirstOfType</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a59002a2595856735326f2f4417d7512c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsType</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a724f7e5db6052f09f177d04f4a9a9010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a5c418d1a07e1a0dea6f28f843e3991d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>af878fb1e26269aaa51feae57716d9436</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNotEmpty</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>abb530967725414e863709ac1cc75e017</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>begin</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a4123a2a8ca1ba446afd54e11d257302c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>begin</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a67bc5575fc02c66a4763045dcddcb98e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>end</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>acef8d7a7dc3663110552d67c146d867d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>end</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a195e2d00baca6d983f687abe8a0ffcb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>data</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a58146aa87b6d6a5caf24845dea30b372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>data</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a908da151a4829b69a49dd281ccb49fee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>operator[]</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a6356180148afb412f54afb5c9bd59ca7</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getUnchecked</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a562fd25073d2bed54bb49cbbcdc1ecab</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getFirst</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>af94c8a1e097f9640341fd0789d8e5aee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getLast</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a8140e42fd18909224c8d1666b03c9c5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArray</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a513024502e3e9738857bad0c6b1ee060</anchor>
      <arglist>(const OtherArrayType &amp;arrayToAddFrom, int startIndex=0, int numElementsToAdd=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeArray</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a6e455f451ea8fc76db509b1dfa22514b</anchor>
      <arglist>(const OtherArrayType &amp;arrayToMergeFrom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>ae67ac7e72e9606f59f9394eed3b19505</anchor>
      <arglist>(Selectable *newElement)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addIfNotAlreadyThere</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a7b9047ad87af5fc3d087bac958f8ce78</anchor>
      <arglist>(Selectable *newElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>adcad42c4e4ff1af133109b7ba85a7557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>aa89d6b89480b8164de2b89d4de5401db</anchor>
      <arglist>(int indexToRemove)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeAllInstancesOf</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>abc203592fa53938d1421cb3fda241405</anchor>
      <arglist>(Selectable *s)</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>removeAndReturn</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a552ec9359d9daf2004fe222f6cf6e92a</anchor>
      <arglist>(int indexToRemove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a9b40f143f76947375b9f7824560b4edd</anchor>
      <arglist>(Selectable *elementToLookFor) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a8584e117cc26ea771328c00ee80f2997</anchor>
      <arglist>(Selectable *elementToLookFor) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Selectable::WeakRef &gt;</type>
      <name>getAsWeakRefList</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a35f9929a51fe7f18ad3b9cd71cfb8d61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>ab8b2578aae64364574ec22dd9362a331</anchor>
      <arglist>(const OtherArrayType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a59a052f815532a926a7538178fa15605</anchor>
      <arglist>(const OtherArrayType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>af70c21ab0af666b454f032eda68d39d0</anchor>
      <arglist>(const SelectableList &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>aca2020d48098ac200c92ad9c79484c89</anchor>
      <arglist>(const SelectableList &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::DummyCriticalSection &amp;</type>
      <name>getLock</name>
      <anchorfile>structtracktion__engine_1_1SelectableList.html</anchorfile>
      <anchor>a2efcad1e837c6419d5e306e25db33993</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectableListener</name>
    <filename>classtracktion__engine_1_1SelectableListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableListener</name>
      <anchorfile>classtracktion__engine_1_1SelectableListener.html</anchorfile>
      <anchor>a11723ed0ad3e9ac7b20480676610f51b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion__engine_1_1SelectableListener.html</anchorfile>
      <anchor>a920a2833a384540186a854a9f54ddfff</anchor>
      <arglist>(Selectable *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1SelectableListener.html</anchorfile>
      <anchor>a839fc6da1b170f5ab7177fca495ece64</anchor>
      <arglist>(Selectable *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectedMidiEvents</name>
    <filename>classtracktion__engine_1_1SelectedMidiEvents.html</filename>
    <base>tracktion_engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>SelectedMidiEvents</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a2599468a4885f6122fb2d02a5dd977d4</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectedMidiEvents</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a2a2da6834f3f95c7175f2fe8006a6b9e</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectedMidiEvents</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a587f237017bf590ddba78a6b33fa73c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a704f4da5ac95dbc4f6c2d9aaeff27023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>accb8018014186c9c7ab834366431358b</anchor>
      <arglist>(MidiNote *) const</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aaf61bb742c506666b04c06a9a21e26da</anchor>
      <arglist>(MidiSysexEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a206c1a550db36a2d47944da21b449a55</anchor>
      <arglist>(MidiControllerEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>acb3647b8f2538846059f3c68a7299da5</anchor>
      <arglist>(MidiNote *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a44aa5a952dd6c964de3cd05b0d47dc02</anchor>
      <arglist>(MidiSysexEvent *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>af0d062f603c1a81327546d4c4bf3f2b4</anchor>
      <arglist>(MidiControllerEvent *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>adf7310659aef5a213d67cb2ce388f6f0</anchor>
      <arglist>(MidiNote *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a160a7795c01396cb68a6956b8b666b5c</anchor>
      <arglist>(MidiSysexEvent *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a2764457e33df9d89eef3a44964883ccb</anchor>
      <arglist>(MidiControllerEvent *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a79ecb20e20b2a1a2f0c19e6bf2029cab</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiNote * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aac85e38146e555562d47eca35d2d6727</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiSysexEvent * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a84853029bba7e9cd280acc3a7748220d</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiControllerEvent * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a14b35d4375ed5875ef53797642a75d2e</anchor>
      <arglist>(const MidiNote *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a16b3515ed708edb1610783356acff69a</anchor>
      <arglist>(const MidiSysexEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a20615b5908cabfbc69dffe52fde55967</anchor>
      <arglist>(const MidiControllerEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a312e5dad28929d471b7e479438638512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anythingSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a2d7a9f0fb28a5ad499596afe05d26678</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiNote * &gt; &amp;</type>
      <name>getSelectedNotes</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a4dc69d7e2beb43ee7fa1458f69c20d15</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiSysexEvent * &gt; &amp;</type>
      <name>getSelectedSysexes</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aa6ff30352bbd9bd3eba4c45607ee2f77</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiControllerEvent * &gt; &amp;</type>
      <name>getSelectedControllers</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>ae868527e2909a5ae71ea1ea3ff421bae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveEvents</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a4003744f67b787e89832867e701cc8e5</anchor>
      <arglist>(double deltaStart, double deltaLength, int deltaNote)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteLengths</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a5aa47ce8318d39717d55d82dd22cb81e</anchor>
      <arglist>(double newLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a5a1d31b78bbf8d817bd9c24fc0c8c1ba</anchor>
      <arglist>(int newVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeColour</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aa1f9014927e4dd97495be9aa487f3026</anchor>
      <arglist>(uint8_t newColour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudge</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a286a3f5bb23e090b491ef53ded8b49c4</anchor>
      <arglist>(TimecodeSnapType, int leftRight, int upDown)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getSelectedRange</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a394bd157756860b04e1751a4d32e4ac3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aaaec998dd1e70839ac007d8677e560a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a4f199ef9d7260b60a740a3a0f289806e</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiClip * &gt; &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a7a8750151a4a785b08dc4cbc77179a8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClips</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a9c8f71d4063271a6b8a79ac145e641ea</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt; clips)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>moveControllerData</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a1fded5a4afb9c292362afdcaddb3f66f</anchor>
      <arglist>(const juce::Array&lt; MidiClip * &gt; &amp;clips, const juce::Array&lt; MidiControllerEvent * &gt; *onlyTheseEvents, double deltaBeats, double startTime, double endTime, bool makeCopy)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool()&gt;</type>
      <name>shouldLockControllerToNotes</name>
      <anchorfile>classtracktion__engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a8d19db7245923a03cc485edf1d277630</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SelectionManager</name>
    <filename>classtracktion__engine_1_1SelectionManager.html</filename>
    <base protection="private">tracktion_engine::SelectableListener</base>
    <class kind="struct">tracktion_engine::SelectionManager::ChangedSelectionDetector</class>
    <class kind="struct">tracktion_engine::SelectionManager::ComponentWithSelectionManager</class>
    <class kind="struct">tracktion_engine::SelectionManager::Iterator</class>
    <class kind="struct">tracktion_engine::SelectionManager::ScopedSelectionState</class>
    <member kind="function">
      <type></type>
      <name>SelectionManager</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a79f418c866190a10152340d02678b835</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionManager</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a4ac074a51a99e91a4c243132492738ce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumObjectsSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a9a846e42ffb5b8d93b3f0d54b4f13f46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getSelectedObject</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a577a33a759bed7a7012448ea5695fd25</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a1492e0220d4481aa3c921d50d85a8d74</anchor>
      <arglist>(const Selectable *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a95f4c983ee77fa8ea5bee2c2b9ea1b0d</anchor>
      <arglist>(const Selectable &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>const SelectableList &amp;</type>
      <name>getSelectedObjects</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>aa793cae6a895b053ca6344d24e7cb8dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getFirstSelectableClass</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a40f2df68c40018c4d44c48ec2129cdaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOnly</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>af253bb27a6a25f72fe6f9c8369dfd41c</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOnly</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ade01c22f7adfa020304dda2214fcac39</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToSelection</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a95c2ed8375113bc79f9c168696593ffc</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToSelection</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a1a1337429c82f2e7510bbbbf36138e5e</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>aa344ece295e4a20c20612c7efc74d6f5</anchor>
      <arglist>(Selectable *, bool addToCurrentSelection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ab431587ba8b2f4fe527f14122da5fd4e</anchor>
      <arglist>(Selectable &amp;, bool addToCurrentSelection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a682887008884025738c0a2415acd087e</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselectAll</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ae2ac997c860a991817b247e51a8dc55b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a87033fc91677221071435bf27d2fe9d9</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObjects</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ae9409964e6750d71a7014fc9f3556e64</anchor>
      <arglist>(SelectableClass::Relationship, bool keepOldItemsSelected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsType</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ade8bfb27a67649e3ec64a4825ec1bce2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumObjectsSelectedOfType</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ab8a4bf269699c05e5eadd9bb66aa3bc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; SelectableClass * &gt;</type>
      <name>getItemsOfType</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a62f9fd24051cf5d09680cc7e51a33ec0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getFirstItemOfType</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a6460da4c3a236ea7a276e96601368ce3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>ac0bb7c197a22b7400a76f7b8229b44f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copySelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>abd38f688f5e4958ef867e657010d6a4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cutSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a6920eb6e5497ef53b10925768b0935a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteSelected</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7e67ba81d8f70098345b66f36955ec05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keepSelectedObjectsOnScreen</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a5e8acd2dff93b33e4391ce90f1c6ea1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshPropertyPanel</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a3298d10f7230128f81055ea4a2b764c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a9dadbef61158e5d7000dab4510a7cc5e</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a4a14a8068ab50a63860df5b952b5bdb6</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a9e1c12b2be52b6d0bca854c40465f9f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshAllPropertyPanels</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>aafcbc5d059ad91ac5fc806c52b56590c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshAllPropertyPanelsShowing</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7c3483f2e6a226b72cd0c784f3c34536</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deselectAllFromAllWindows</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>af178324d108e2d12d293682dda04c0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManager</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a38dc1b2ac296496a589892cad01ab154</anchor>
      <arglist>(const juce::Component *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManager</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a83a6740a2d0f0ea3907091dc2153fb82</anchor>
      <arglist>(const juce::Component &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManagerContaining</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a0af6432a6bbd4c6f60e7d8b444c0c3c3</anchor>
      <arglist>(const Selectable *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManagerContaining</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a741a25b809f8d2b66aa92b66b9672cdc</anchor>
      <arglist>(const Selectable &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>selectionChangeCount</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a14ae0918b97447b56ab9c54439eaac9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Selectable::WeakRef</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a348e2fa193b2aa02a6fffc43101066b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a4b427cf0247befe83bf009ec4316ced2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditInsertPoint *</type>
      <name>insertPoint</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a56d0c7fe499070102a5da60fb933b3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a28198d50a0858765040708850fdabdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Selectable</name>
      <anchorfile>classtracktion__engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7c249580575f05f752871a291926d328</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SelectableClass::SelectOtherObjectsParams</name>
    <filename>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</filename>
    <member kind="variable">
      <type>SelectionManager &amp;</type>
      <name>selectionManager</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a1e4a4fb94df1c8dd7708c91f0850f7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectableList</type>
      <name>currentlySelectedItems</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a839f9304c9340bc8c6448c3db9e31b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Relationship</type>
      <name>relationship</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>adba76ba5d566ffe022bd22b8913f7e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>keepExistingItemsSelected</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a30b3c34663424819133ba435e7607242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>structtracktion__engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a9b2aa2f66ab61926dd97a2eb86905487</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::Semaphore</name>
    <filename>classtracktion__graph_1_1Semaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>Semaphore</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>aa26de276e3d48646dcfc49a1338343be</anchor>
      <arglist>(int initialCount=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Semaphore</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>a015d240e762a8c4b79dbc0fc800e2fb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>a11de886179f85987f048904118ebda49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_wait</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>a6bd549c65f86bad0f14bc94aa1e5e98e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>timed_wait</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>ac26149b74d87c314f11be778ae29fb07</anchor>
      <arglist>(std::uint64_t usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signal</name>
      <anchorfile>classtracktion__graph_1_1Semaphore.html</anchorfile>
      <anchor>a242559bdf2c30709d6d04bf107a0c404</anchor>
      <arglist>(int count=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SendNode</name>
    <filename>classtracktion__graph_1_1SendNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SendNode</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>a627a4996aa23c5bd20684a54629efa0c</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse, std::function&lt; float()&gt; getGainFunc=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBusID</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>a14cfab0f0f8b3ddaa9c936210de18410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; float()&gt;</type>
      <name>getGainFunction</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>ab8efc359ef86b35ccb34a9f94fc37783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>accc806a8aa9ebbc812ee9ce7ef19c94f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>a8963f58cb9ede9a13b9dd6b115886bc1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>a77c2be108bcc75687c0ada35a9c022c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SendNode.html</anchorfile>
      <anchor>a684ef85ece3ffa51f82eea62bb77f14d</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SharedLevelMeasurer</name>
    <filename>classtracktion__engine_1_1SharedLevelMeasurer.html</filename>
    <base>tracktion_engine::LevelMeasurer</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; SharedLevelMeasurer &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a721890212c051f13dad22bf1f9f23130</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startNextBlock</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a4f8ce36b6e3b8716c837db6106d8ed85</anchor>
      <arglist>(double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>adf65ef90f6ad9773c06456f9bb5f8081</anchor>
      <arglist>(int channels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBuffer</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a12a7be7d9cacb72d71f6259a51582811</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;inBuffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="variable">
      <type>juce::SpinLock</type>
      <name>spinLock</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a944bf3439165dcfa4f8f4c0885ddbe7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lastStreamTime</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>aee06a45487af9844d9a88a86770796f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>sumBuffer</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a47e70f7cba39fd80b29b31b229777c73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SharedLevelMeasuringNode</name>
    <filename>classtracktion__engine_1_1SharedLevelMeasuringNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SharedLevelMeasuringNode</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a9586e2dd432960e26c8bd06bf6a60faf</anchor>
      <arglist>(SharedLevelMeasurer::Ptr, std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a6ec82fb1ecda8b8bd64671067bab9d94</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>aeea01617d2c2ba4e03120c0d275a465c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a978b06f0e57e42e3ed0387c5c0492ec8</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a1a97efd6df7f18a27946539348398b7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a9ebb8f04d540e3eebd119bba86c5d703</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>ab76b9fb52469137e64772983a015170e</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SilentNode</name>
    <filename>classtracktion__graph_1_1SilentNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SilentNode</name>
      <anchorfile>classtracktion__graph_1_1SilentNode.html</anchorfile>
      <anchor>aab6955907ffea0c8329329a10047d6c0</anchor>
      <arglist>(int numChannelsToUse=1)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1SilentNode.html</anchorfile>
      <anchor>a8746c9aaaed2e1759a0f7a74fe27a37d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1SilentNode.html</anchorfile>
      <anchor>af9ff801f767f25f7b01aea6fadc47ed6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1SilentNode.html</anchorfile>
      <anchor>a9a336c1460c85114f294450a9cf09382</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SilentNode.html</anchorfile>
      <anchor>a2c711b9f41ba17e85d258d486da9e6bc</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SimpleLFO</name>
    <filename>classtracktion__engine_1_1SimpleLFO.html</filename>
    <class kind="struct">tracktion_engine::SimpleLFO::Parameters</class>
    <member kind="enumeration">
      <type></type>
      <name>WaveShape</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9abffe17c5305c9e14fe8cb12ce45a5e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a4eb0a887dd2ced0b702f171a4a155da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9ae6a9d16368f726312e543e720a8cf4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawUp</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a2f0819e4fc8d168fef265a825418ea37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawDown</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a8f6ba9451ddbc34536887fb4864a5b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a76d8c7c8300e777aa19f3670bff8ea04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9ae8dd37936205230164f07a6384d36c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9abffe17c5305c9e14fe8cb12ce45a5e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a4eb0a887dd2ced0b702f171a4a155da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9ae6a9d16368f726312e543e720a8cf4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawUp</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a2f0819e4fc8d168fef265a825418ea37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawDown</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a8f6ba9451ddbc34536887fb4864a5b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9a76d8c7c8300e777aa19f3670bff8ea04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aec3bff49156d12d0d4fbf81b2466f5a9ae8dd37936205230164f07a6384d36c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>a193987e94a5500150605a2a0ae3be50c</anchor>
      <arglist>(double newSampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aa31639d6c49cfb6f798434e635af070a</anchor>
      <arglist>(Parameters newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>a0a2d8120f2c19063cb438b67eeb36716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ae9f0aafc5216bef27b76d54395dcc1b9</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aaf86d6ef25d655a4132a0099da44412f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SimpleNodePlayer</name>
    <filename>classtracktion__graph_1_1SimpleNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>SimpleNodePlayer</name>
      <anchorfile>classtracktion__graph_1_1SimpleNodePlayer.html</anchorfile>
      <anchor>a7592212093e973de5b0e24ce4543794f</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; nodeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1SimpleNodePlayer.html</anchorfile>
      <anchor>a179d1f0f8bbc5a01d0249b481ea6c04d</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SimpleNodePlayer.html</anchorfile>
      <anchor>abbd43d1bfeef2e3817e0877e61f2402f</anchor>
      <arglist>(const Node::ProcessContext &amp;pc)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::test_utilities::SineOscillator</name>
    <filename>structtracktion__graph_1_1test__utilities_1_1SineOscillator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>a4d38c3fee82535f9ea759d845d6abc91</anchor>
      <arglist>(float frequency, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNext</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>a6c9f1433beb68a66145df2f0e35ef587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>aa34c68de5df04303b075c4e8439c733c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phaseIncrement</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>a41a8b1728a329754c29b67f310a4689a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SingleInputAudioNode</name>
    <filename>classtracktion__engine_1_1SingleInputAudioNode.html</filename>
    <base>tracktion_engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>SingleInputAudioNode</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a314684759bae4da09192a297c0e25698</anchor>
      <arglist>(AudioNode *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a9b18c7dc1a3c3310d7e722314ef346bf</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>aa41163fb504d5e9bb0b36a0737743595</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a6807283857647f18107831db8761bf40</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>ace68e78bbe1d74ab0aa4e1f133ee1f7d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>abf65d624c8d907aa2f7c609753e4170d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a3eced4e5267000a5ba1d74340daf0378</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>ac796222ffc92097210f8860f8c421ead</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a7501e46f407610aed74b1af4bdb9f8b3</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>aeb7fe083f1727540530df8bc7ac079d3</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a7302867f61b80526a43596f413b85694</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>const std::unique_ptr&lt; AudioNode &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion__engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a98e81c439265d7f2be2a128d38622c5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SinkNode</name>
    <filename>classtracktion__graph_1_1SinkNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SinkNode</name>
      <anchorfile>classtracktion__graph_1_1SinkNode.html</anchorfile>
      <anchor>a898727be9b78cd15c8d12583a549fe43</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1SinkNode.html</anchorfile>
      <anchor>a3971da0b20252553c695c5b9a6c7cbb8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1SinkNode.html</anchorfile>
      <anchor>aa128f838ca96b81f63af955656849e84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1SinkNode.html</anchorfile>
      <anchor>a43c4923a6e1fc67127d8d5a055a364c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SinkNode.html</anchorfile>
      <anchor>a5b8e2e65cdac69e2cd4b16d623d38c62</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SinNode</name>
    <filename>classtracktion__graph_1_1SinNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SinNode</name>
      <anchorfile>classtracktion__graph_1_1SinNode.html</anchorfile>
      <anchor>ae4b0adf3c8ac71bf558c0638464296f3</anchor>
      <arglist>(float frequencyToUse, int numChannelsToUse=1, size_t nodeIDToUse=0)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1SinNode.html</anchorfile>
      <anchor>aba52a985176c4018e33cfca05b1f1e1f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1SinNode.html</anchorfile>
      <anchor>a5b3b9f9da6ffbd46be1e89094bde4b85</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1SinNode.html</anchorfile>
      <anchor>a6d643b5f9dc7f412359cd4c1f24ef978</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SinNode.html</anchorfile>
      <anchor>a728205efa0663b4fab25c74384c5674b</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SmartThumbnail</name>
    <filename>classtracktion__engine_1_1SmartThumbnail.html</filename>
    <base>tracktion_engine::TracktionThumbnail</base>
    <member kind="function">
      <type></type>
      <name>SmartThumbnail</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a28b6fc18af1350a0299b195dcab5e438</anchor>
      <arglist>(Engine &amp;e, const AudioFile &amp;, juce::Component &amp;componentToRepaint, Edit *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SmartThumbnail</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a6cd92a4d437b3dd44c2fec729d8b4c93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewFile</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a1ec70e60dee0b5c699426b349cd1535a</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGeneratingProxy</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a9b82ca5c3053e967604a1bd4851a5fd1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProxyProgress</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>ac68ad2f4315fb2219f918e8da388a20b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOutOfDate</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a234d2d4901a7863471ce1bd0f3096695</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>audioFileChanged</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>aff7932ade196a762933c619a01bc18b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseFile</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a95a2a2e3dc5ab80df1332afe6e4da048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a0f640e5e248ef5469f7eac90ea7beab7</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areThumbnailsFullyLoaded</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>ad87b7c0ea915dd33d6622201538ba0a8</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>file</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a0c938544805bcd4d315f6064153e61c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>acdc56d001c7b09c3599e149004392b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *const</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a13cf993e978cb0f76ddf96992c472fcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SoftwareMidiOutputDevice</name>
    <filename>classtracktion__engine_1_1SoftwareMidiOutputDevice.html</filename>
    <base>tracktion_engine::MidiOutputDevice</base>
    <member kind="function">
      <type></type>
      <name>SoftwareMidiOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1SoftwareMidiOutputDevice.html</anchorfile>
      <anchor>a06b1719d5cb59f4415d98abb6a6e7b22</anchor>
      <arglist>(Engine &amp;e, const juce::String &amp;deviceName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SortedValueTreeObjectList</name>
    <filename>structtracktion__engine_1_1SortedValueTreeObjectList.html</filename>
    <templarg></templarg>
    <base protection="protected">ValueTreeObjectList&lt; ObjectType &gt;</base>
    <member kind="function">
      <type></type>
      <name>SortedValueTreeObjectList</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ab0fe6703f957e8d9d4f367034ac7bd3a</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sortObjects</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>abb12c2a158583998b502b202ffde96c3</anchor>
      <arglist>(juce::Array&lt; ObjectType * &gt; &amp;objectsToBeSorted) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSortableProperty</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a1a28970b4c8075a236c61fbec9075416</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>objectsAreSorted</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ae77b9e97e30703ab26a83d13b42a5c05</anchor>
      <arglist>(const ObjectType &amp;first, const ObjectType &amp;second)=0</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ObjectType * &gt; &amp;</type>
      <name>getSortedObjects</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a17354ef602450be0bcd757d281155ef8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a2121e8b46f9b62d13675739956b7b56a</anchor>
      <arglist>(ObjectType *o) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>aba27c3d22e4ffb6fbb4ccf9eb0e03395</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a039bcf9473f610a7cd85989f9b32c258</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SourceFileReference</name>
    <filename>classtracktion__engine_1_1SourceFileReference.html</filename>
    <member kind="function">
      <type></type>
      <name>SourceFileReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a8f56cd5cfa9b661932c3948164d1af99</anchor>
      <arglist>(Edit &amp;, juce::ValueTree &amp;, const juce::Identifier &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SourceFileReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>ae3f294b7273648a8c7c43f1186f5cd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a40f499403d35616425014eca4183f3c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingProjectReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a668d4a5481baf8f3290c5eaa20b22edc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getSourceProjectItemID</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a95e1a92eb9b3c4f136e728b91c85545e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getSourceProjectItem</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>ac58452e43d6bbfc9486222d5de18ad5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToDirectFileReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a7519c23931c55062b89a607d6857855a</anchor>
      <arglist>(const juce::File &amp;, bool useRelativePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToProjectFileReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a5684dc5ca657ef67a43e1475bb54830c</anchor>
      <arglist>(const juce::File &amp;, bool updateProjectItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToProjectFileReference</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a4bd7f7bfeb842c795a716f912c9ac471</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>findPathFromFile</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>ac0c1fb92e0abda81a3f4268e54dd787b</anchor>
      <arglist>(Edit &amp;, const juce::File &amp;, bool useRelativePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>findFileFromString</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a37ac0438543816453b736255f5bc254d</anchor>
      <arglist>(Edit &amp;, const juce::String &amp;source)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a8703dd5b90d499717bc6ed1f03108458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>source</name>
      <anchorfile>classtracktion__engine_1_1SourceFileReference.html</anchorfile>
      <anchor>aaf1200051ed27ebe39034b913284e895</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SpeedFadeDescription</name>
    <filename>structtracktion__engine_1_1SpeedFadeDescription.html</filename>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>inTimeRange</name>
      <anchorfile>structtracktion__engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a2364c7d35d39903b1138987df98cb6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>outTimeRange</name>
      <anchorfile>structtracktion__engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a4487e1a1b9bf6836e294b88de4a3f372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFadeCurve::Type</type>
      <name>fadeInType</name>
      <anchorfile>structtracktion__engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>aa6031e9ef086c1c26c135f22dc42d309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFadeCurve::Type</type>
      <name>fadeOutType</name>
      <anchorfile>structtracktion__engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a9ccefe27ad291d7e6806a37c99108db1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SpeedRampAudioNode</name>
    <filename>classtracktion__engine_1_1SpeedRampAudioNode.html</filename>
    <base>tracktion_engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>SpeedRampAudioNode</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a99b90604c68487a1f9d287579bf98156</anchor>
      <arglist>(AudioNode *source, EditTimeRange in, EditTimeRange out, AudioFadeCurve::Type fadeInType_, AudioFadeCurve::Type fadeOutType_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a50fecbdfefa5c648e39244c8c4af8e71</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a8fa5dd24a42d45a87ec20de37fb7879d</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a7d18fa40cbe2a2a12493c0a1ba591450</anchor>
      <arglist>(const AudioRenderContext &amp;rc, EditTimeRange editTime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SpeedRampWaveNode</name>
    <filename>classtracktion__engine_1_1SpeedRampWaveNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>SpeedRampWaveNode</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>ada29326959433903f18fbbc11c3959ae</anchor>
      <arglist>(const AudioFile &amp;, EditTimeRange editTime, double offset, EditTimeRange loopSection, LiveClipLevel, double speedRatio, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender, SpeedFadeDescription)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>a0f66d6ea5b13b100479bcf027beec1b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>ac26ea30cb495ab0517d3c07cd0f1bb97</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>ae01caa195ba94e0510bb114dfdf4bb71</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>a5afbffd286f71a086cfecacfacccf2fb</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Spline</name>
    <filename>structtracktion__engine_1_1Spline.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getNumPoints</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a968887baa0b827fe94b91ad3f0396e69</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPoint</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a787d5d2b6734108bda44da0d0eb5970a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getY</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a84c8e64f03e8eeaf25b04c579260e040</anchor>
      <arglist>(float x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a81bcb25cf95b950737f55f670b24b6b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePoint</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a99206d2d4eae17c62e7a334bb7206a73</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>structtracktion__engine_1_1Spline.html</anchorfile>
      <anchor>a83eae6dab37ebf87a3794f8828eec110</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::SplitTimelineRange</name>
    <filename>structtracktion__graph_1_1SplitTimelineRange.html</filename>
    <member kind="function">
      <type></type>
      <name>SplitTimelineRange</name>
      <anchorfile>structtracktion__graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>abfeb9394ce94b76291d5dd8c3f518570</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; range1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SplitTimelineRange</name>
      <anchorfile>structtracktion__graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>afb564bca0751e25e6fc8827d4e8178dc</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; range1, juce::Range&lt; int64_t &gt; range2)</arglist>
    </member>
    <member kind="variable">
      <type>const juce::Range&lt; int64_t &gt;</type>
      <name>timelineRange1</name>
      <anchorfile>structtracktion__graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>a906103db40fad2c515b2c83ca691c3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Range&lt; int64_t &gt;</type>
      <name>timelineRange2</name>
      <anchorfile>structtracktion__graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>a0d2d8a8178b31e02f6d849a22fd22028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>isSplit</name>
      <anchorfile>structtracktion__graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>aa03328a90c60a24daf983cd03726eb90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::BreakpointOscillatorModifier::Stage</name>
    <filename>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Stage.html</filename>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>valueParam</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>a0998a62a78908881fa148ef3fbacc721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>timeParam</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>a5dd9ca09b22ad789b764c4d959c2e958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>curveParam</name>
      <anchorfile>structtracktion__engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>aed737931e00c2e6b48c3cba2e7995d27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::PerformanceMeasurement::Statistics</name>
    <filename>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</filename>
    <member kind="function">
      <type></type>
      <name>Statistics</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a2dcc32cfc31d877b0555f9e6a9120fe7</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a9924db5591dbebb731da40ed00896d0d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVariance</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a018c50d584eb2c9fdf20b595196da6b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>ad3a726c03bf1aaf75af90c84f7490d5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResult</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>ac2f80a6f2e4b7b644a50a5ed33b5e056</anchor>
      <arglist>(double elapsed) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a4e10c15f2661330ac580f3a8d941e28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>meanSeconds</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a7d4279b28f9b06064c559008709cf796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m2</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a1c0d000f27ada422129aae6c8faa33c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumSeconds</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a1cdf07beb7970938db05f3be7b0925b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumSeconds</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a1506159bfb84f32e4d091b293ffcdede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>totalSeconds</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>aabef2530210c40166b3b2bccb64aba73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>numRuns</name>
      <anchorfile>structtracktion__graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>af739074eccffada098e3683667734961</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Renderer::Statistics</name>
    <filename>structtracktion__engine_1_1Renderer_1_1Statistics.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>peak</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>af6c079832079c87af78a02ee8ad9e70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>average</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>a79f4eb0f0cb08257914938bae454f26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>audioDuration</name>
      <anchorfile>structtracktion__engine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>a339f649e3c9496c5a28bc95d41433981</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::StepClip</name>
    <filename>classtracktion__engine_1_1StepClip.html</filename>
    <base>tracktion_engine::Clip</base>
    <class kind="struct">tracktion_engine::StepClip::Channel</class>
    <class kind="struct">tracktion_engine::StepClip::Pattern</class>
    <class kind="struct">tracktion_engine::StepClip::PatternInstance</class>
    <member kind="enumeration">
      <type></type>
      <name>Defaults</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a9e335263968dad3e3092dab00dbb2d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a91251c5fc52ce07c7322e864df1158f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a0426c62e48863f1e1bc8be73d4216e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a599aa17d1bb460e8a23d1a5c73152dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteValue</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a2116c4e180a0c5a6f3b8eb0568dc88d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a20373f1b5d4a4185b577db090ad8b2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6ab3f231a476f8d881b57387eed57f6d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a5ca8287b2a061a51d9da2d00e253f5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a9ebc5602883e53cf19854f877ab8ea85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; StepClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a6d8a77bb038726ab3bdaf4f10bb04b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; PatternInstance &gt;</type>
      <name>PatternArray</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a0695522aab25b27276a9ed8892416fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a9e335263968dad3e3092dab00dbb2d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a91251c5fc52ce07c7322e864df1158f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMidiChannel</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a0426c62e48863f1e1bc8be73d4216e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteNumber</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a599aa17d1bb460e8a23d1a5c73152dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteValue</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a2116c4e180a0c5a6f3b8eb0568dc88d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a20373f1b5d4a4185b577db090ad8b2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumNotes</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6ab3f231a476f8d881b57387eed57f6d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a5ca8287b2a061a51d9da2d00e253f5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afbd6c9cbf8c5a7b9571f5aad5c0441e6a9ebc5602883e53cf19854f877ab8ea85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StepClip</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a77d50b8051d1c558fb47984fd04a0346</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepClip</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>abd3346f1b40a17e5afc04305cce39751</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a229d623fa1af9c2ec4dd1faca4446f96</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Channel * &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a2248961acb3163c740f196ea6f6857c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChannel</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ac2d2780fb29a9306c02a7d08468c506a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertNewChannel</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a66273492bf7e065b789e7e605e9cea54</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesProbability</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a23562c861a9ea647dfcb97006f584660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PatternArray</type>
      <name>getPatternSequence</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a193bf9094792a35ade8a5326c1b46155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatternSequence</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a62b792e5daec8da6b974c41f0035e31c</anchor>
      <arglist>(const PatternArray &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertVariation</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>aae95e5bd582dcbd3060ced494d25c723</anchor>
      <arglist>(int patternIndex, int insertIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeVariation</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>aa0b0ac7d0f48f62ef07a30e5be7e0f04</anchor>
      <arglist>(int variationIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllVariations</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ab1950440765af6bd9d08f8f121ebe554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDefaultPatternIfEmpty</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>aa6cbb9ab16bb42244677a982d6ce4306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatternForVariation</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a3d4edeed13f41aab90a3b35198b2c4c6</anchor>
      <arglist>(int variationIndex, int newPatternIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertPattern</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a96066739e8a1e6df4624da0b9f816e00</anchor>
      <arglist>(const Pattern &amp;, int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertNewPattern</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a2968bce12b133a7c3d7401d97b06e17a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePattern</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a64c81abfe3aa3986d3ad567af4f036a1</anchor>
      <arglist>(int patternIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUnusedPatterns</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a72096639d5496a49381365579866b086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getCell</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a06a1f73ab7b8bee2cb28de7b763348ea</anchor>
      <arglist>(int patternIndex, int channelIndex, int noteIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCell</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a4921c1683c899d3b2d0cae2a2983f8c1</anchor>
      <arglist>(int patternIndex, int channelIndex, int noteIndex, bool value)</arglist>
    </member>
    <member kind="function">
      <type>Pattern</type>
      <name>getPattern</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afdabf70073f89a8bcfca15c33999770f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPatterns</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a8abf78e5169a6bbc933e11ecb3ebac7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Pattern &gt;</type>
      <name>getPatterns</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a8153741b3884ea1c85a547d2b9b5ad24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>aebf8af9bd8e19fa6dbd6955543fd8d50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>afe6f70fe19321e1de5fc33d8370e005a</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMidiSequence</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ae06a430930035a65b8bec73dfce00db6</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, bool convertToSeconds=true, PatternInstance *instance=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; double &gt;</type>
      <name>getBeatTimesOfPatternStarts</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ae17cc98c1ba1ee4b54354be8b3086968</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeatOf</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a561ca5738cff757374835641cef4a42c</anchor>
      <arglist>(PatternInstance *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndBeatOf</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a4c6aab455026e3f0960a2d2711e84953</anchor>
      <arglist>(PatternInstance *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBeatsPerBar</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a41bcac1112ec7fe4c498a0c30a669225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeClipForPatternInstances</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a0ebe0cb39db35249c72fc34d9e4fbcb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGoOnTrack</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a18afbaa7ee7503ee492598ebc90cd0a4</anchor>
      <arglist>(Track &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ac75079e7cee4bdaaf854b9075d78d666</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a75543a308864bd974964421b409b4920</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a21bc00806ad3216119fa4ac01c59bd8b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>abb7e2d4e314565ac864ffc12fe333ba7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a2a847029f7ea148dacede9056edc85f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a7a59eb30343a7359bb53b47ac7c9ed2c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ad7ccbb2fe9eb2f5ce3bc880564cbff90</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a8c27ade6c9a016e1f1c0cdc086a88f0f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>aece77c6b0e694bfd05969b6fb41537e8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ae17a0de890aa7f2a81fb4e9a017981c0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a3fd98ad829348e73c033f1272b4e1340</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a583678c1114e23277cc3393c82039572</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>af4d77fa6b8ede67dc7bd7571145de967</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>a3fcf95af8b1d4faa54c8b9f49847af69</anchor>
      <arglist>(bool m) override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>ae56920cac31dbcc35dc89ac9618f2507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>repeatSequence</name>
      <anchorfile>classtracktion__engine_1_1StepClip.html</anchorfile>
      <anchor>affaac7fbb7eefd0883712763b2dd118d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::StepModifier</name>
    <filename>classtracktion__engine_1_1StepModifier.html</filename>
    <base>tracktion_engine::Modifier</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion_engine::StepModifier::Assignment</class>
    <member kind="enumvalue">
      <name>maxNumSteps</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a31d10c468d02db9b676332ef6fc2d7baa2893131a498472fb46f81adbbcffff50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; StepModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a44d7f07f38382aaa47db2858fc1ddea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; StepModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a5f03fece4e51ac4d26b62ce8c35cd7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSteps</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a31d10c468d02db9b676332ef6fc2d7baa2893131a498472fb46f81adbbcffff50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StepModifier</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a0a214d13fdba1da0e4d5b00e82d45ba7</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepModifier</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>ace870b5adc1daf2bf13ed29fabf18d17</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a6f84550c03c93916a4520aa0f13d7c26</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a2dccb4f8ab5dfff179c43ed8fb8c76bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a35d4413add21236afcbd10eb5d5705a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getStep</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a1f88adeaec99c3ac54112acd2b251205</anchor>
      <arglist>(int step) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStep</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a0f39558f2c6648b0acbd28b4545d1a90</anchor>
      <arglist>(int step, float value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentStep</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>ac538874d596a39004efaa93c08543563</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a36c8fe20c27043b9b737c80b3ac9ad0c</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a6c7b815e6ac22079ab30486bae737958</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>ade18266b8a265de338ad2f95b136c737</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a62f3d5dfe37835bccdea85d2dcf9c5a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a8cbb6b9e8c928b7e90f6514b2e4c5963</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a1f69222f86cc0d476eee665fdf9d5575</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a135e0e89f25fe162f487c4b4c8c04190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>numSteps</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a3b013112f2466e0e763049a9bfdd472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a53016d543a9f46131d3f96dc409adf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>ab9ef9455de43862a98814e6d26118376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a1c60437cea24cdaade86fd292194b7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a67d1e88c4b3e0956e91bc38e535a2328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>numStepsParam</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a776a999628cc694991f5742348b7e53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a74b5d98dd3f165a42f9a905bb2d763b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a6695ac335af84b898567a1878ee8a877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion__engine_1_1StepModifier.html</anchorfile>
      <anchor>a5be20c03711fe3b4aa8461ff7b7338b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StepVolumeEffect</name>
    <filename>structtracktion__engine_1_1StepVolumeEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <base>tracktion_engine::Selectable</base>
    <class kind="struct">tracktion_engine::StepVolumeEffect::Pattern</class>
    <member kind="function">
      <type></type>
      <name>StepVolumeEffect</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a4370c1243d229088796a5b5fe8c7e5de</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepVolumeEffect</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>ad09267afd1a890fb18240a83d934cd9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumNotes</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a76d4528857391ec2a5046a026294e392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a0789267f2f844024a4c7e49035c29fb4</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a04188c78fec8bae28e4919fa651f3bde</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>af93399c55b562545331faa374d7c7b3b</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a2213a5c7f521670563aa334fe250ffac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>noteLength</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a705ebb1309984c59c77043c22f6964e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>crossfade</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>ab7c7d74c4d13b8b9a44e862860a76c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>pattern</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>ac04e0cd5dee2ce64f2e0da127efefcea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a84eaef64d3c2cbfe7db3de585ee08199</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::StopwatchTimer</name>
    <filename>structtracktion__engine_1_1StopwatchTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>StopwatchTimer</name>
      <anchorfile>structtracktion__engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a30926f0431ae4e7b83e9dfc60d4103b7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::RelativeTime</type>
      <name>getTime</name>
      <anchorfile>structtracktion__engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a97b2cb2fb0884bcae476a406f3195735</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>structtracktion__engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a9fe0e1701aec25511134d3681ec28389</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSeconds</name>
      <anchorfile>structtracktion__engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>ae53a4053697da4ee4ea72079fd2d7afb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::SubSampleWaveAudioNode</name>
    <filename>classtracktion__engine_1_1SubSampleWaveAudioNode.html</filename>
    <base>tracktion_engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>SubSampleWaveAudioNode</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a344ae9063874ae9dd618ce57d3dbf1c7</anchor>
      <arglist>(Engine &amp;e, const AudioFile &amp;af, EditTimeRange editTime, double off, EditTimeRange loop, LiveClipLevel level, double speed, const juce::AudioChannelSet &amp;channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a0c14ff73a65ad18cbfc4a453dd64740a</anchor>
      <arglist>(AudioNodeProperties &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a6eca77ed11a716b7e0e16b5b3e976b64</anchor>
      <arglist>(const VisitorFn &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a15bffcc77872c1a9ea82641979b4b2a2</anchor>
      <arglist>(bool keepAudio, bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a3f0a3d15bbffc86153f08cf5eb79ba12</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>ac5b8b193f2ccef3e35b453bc9bfb3af1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a1bf23b1550be8b9276fb6cbb10c17e4c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a2415b593dca3ff3cbc374c03d9412894</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a5c46cc9ca9d8170099f1d838a0d4c18b</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a40304a502373a4cd417459366185b923</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>ac071c240941006d3ae390bf74f92ac45</anchor>
      <arglist>(const AudioRenderContext &amp;rc, EditTimeRange editTime)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>af318889628b1fcf55cd8b7460dd5d9c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::SuffixedParameter</name>
    <filename>structtracktion__engine_1_1SuffixedParameter.html</filename>
    <base>tracktion_engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>SuffixedParameter</name>
      <anchorfile>structtracktion__engine_1_1SuffixedParameter.html</anchorfile>
      <anchor>af1979b82f3f91ad0253f7cddc7cfa398</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, AutomatableEditItem &amp;owner, juce::NormalisableRange&lt; float &gt; valueRangeToUse, juce::String suffixToUse={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SuffixedParameter</name>
      <anchorfile>structtracktion__engine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a73aa66e9057405063be4778fb52e432e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>structtracktion__engine_1_1SuffixedParameter.html</anchorfile>
      <anchor>ab390db30546c79ce064f58dbe7ea6f64</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabel</name>
      <anchorfile>structtracktion__engine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a28ac48cd549dc157f06304a70aa48e9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>suffix</name>
      <anchorfile>structtracktion__engine_1_1SuffixedParameter.html</anchorfile>
      <anchor>ab5c9ec7b42cae77ae6c00d6a6adad467</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_graph::SummingNode</name>
    <filename>classtracktion__graph_1_1SummingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a6ba9e5a783acfd6844db92209ee332e5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>add3444bb6107014aa17312de4496ec5f</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a382fed876d0150551ccc8b1ec7122e31</anchor>
      <arglist>(std::vector&lt; Node * &gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>ae41e50f9316d62fce4746f1832e5bc58</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; ownedInputs, std::vector&lt; Node * &gt; referencedInputs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>ac9e8a063597c78c6df42c21330c71cec</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newInput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleProcessingPrecision</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a6a0c9c377c1a768526d7d39186289ceb</anchor>
      <arglist>(bool shouldSumInDoublePrecision)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a5837adafb91b66bfa24e9dd700673a0e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a120b1f1f1ef50e3bbb7b62afc4b49b80</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transform</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a3cb908d4ce7d474600ee8a7641119b04</anchor>
      <arglist>(Node &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a980b4e1197d75832518f6815d381b2c6</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a92f08685f927e65b67c0589cf0e6faba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__graph_1_1SummingNode.html</anchorfile>
      <anchor>a07621dd8eae9a4035840de264edee2d7</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Takes</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Takes.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Takes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>aaf05a3bcbbc2a336e44e98631cebe3dd</anchor>
      <arglist>(const WaveCompManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Takes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>a211d1300689d31f3e790f51b1aaef3f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoClip</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>adc0b86f3ee2cbcc0429a52eba2cbbf27</anchor>
      <arglist>(WaveAudioClip &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>items</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>aef2236e1997508ffd5a6459535e103c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::Template</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1Template.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Template.html</anchorfile>
      <anchor>a28d3e394d9abbacce0dfd545556c4a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Param &gt;</type>
      <name>params</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1Template.html</anchorfile>
      <anchor>a0f5ddfbad7418480b41fb4571fb9f2cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::TempoChanges::TempoChange</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>beat</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>a60cec89969023bc65a88e5618528de59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bpm</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>ac3cedd382355efbce4f0fb6f68036b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>curve</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>a26dc05920443c1668395ae867e946aff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::TempoChanges</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion_engine::Clipboard::TempoChanges::TempoChange</class>
    <member kind="function">
      <type></type>
      <name>TempoChanges</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>ad5e81329a86c4593d3e1ab946735a9b8</anchor>
      <arglist>(const TempoSequence &amp;, EditTimeRange range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoChanges</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a2f98f9107a20375405e64a0fbebd97a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a614e80de3c4304ced933aa1cddc31b11</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteTempoSequence</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a48b36ca709ac5854859210cffddc2ae9</anchor>
      <arglist>(TempoSequence &amp;, EditTimeRange targetRange) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; TempoChange &gt;</type>
      <name>changes</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>aceb8b0f8b9a7db2a975eef3732dcdad8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TempoDetect</name>
    <filename>classtracktion__engine_1_1TempoDetect.html</filename>
    <member kind="function">
      <type></type>
      <name>TempoDetect</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>adcc958ba9ece74de266b980554ea5535</anchor>
      <arglist>(int numChannels_, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>processReader</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a0e95cd7de594d1158177a0141eb29563</anchor>
      <arglist>(juce::AudioFormatReader &amp;reader)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>processAndDetect</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a8a4b75aa20a09f88fbe39ef0c6057f6e</anchor>
      <arglist>(const float **const inputSamples, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getBpm</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a0ac78c633ec1de23ed724233f9ee23cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBpmSensible</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a2e6c7f5bf1fa3cdff650bc305649014e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processSection</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a6e689c1de8dd1ec5c829971bf78f3f73</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int numSamplesToProcess)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>finishAndDetect</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a5c796857ee32777922fe4251f4abea74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processSection</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>ae43b14ef573d71471a976318234bf680</anchor>
      <arglist>(const float **const inputSamples, int numSamples)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Range&lt; float &gt;</type>
      <name>getSensibleRange</name>
      <anchorfile>classtracktion__engine_1_1TempoDetect.html</anchorfile>
      <anchor>a8f51677728c8827aa8537c5a43897489</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TemporaryFileManager</name>
    <filename>classtracktion__engine_1_1TemporaryFileManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TemporaryFileManager</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a0480d10439f97329808922d5d86c5d4e</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TemporaryFileManager</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a94ea016408c417ca6fa379c2cf44965a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasTempFolderSuccessfullyCreated</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a65a68ff823f4487670f6c9d72c10317a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiskSpaceDangerouslyLow</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a8a0c2e7073a729ecda7812265fc17b62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getMaxSpaceAllowedForTempFiles</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ae801cc4062bb81e441399bf835ab3470</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumTempFiles</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a9c7c6e2b96c1a0e70e940f80b3bbeb6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUp</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a98911591a5242e6a37392a6a8faa573b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getTempDirectory</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ae299a890f2b0e601d7ef80dc46b6bd17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTempDirectory</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a74b578ceb44582f78bf432fba3920d00</anchor>
      <arglist>(const juce::File &amp;newFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ressetToDefaultLocation</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a09cf4521fc318362f92e3bca41aaba5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getThumbnailsFolder</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a11a55fef81f26b66c65efb2e2a2e9e7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempFile</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a3bd62cf96ccdc80656bf5cc64a968fb2</anchor>
      <arglist>(const juce::String &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getUniqueTempFile</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ac695df306e7bf8495ecec2eb7c6b619b</anchor>
      <arglist>(const juce::String &amp;prefix, const juce::String &amp;ext) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purgeOrphanEditTempFolders</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>aab6777d428a67a8d392fdc6e816c937d</anchor>
      <arglist>(ProjectManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedClipRender</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a93a6bf3e05e54709fcfdf2160f19320a</anchor>
      <arglist>(const AudioClipBase &amp;, HashCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedCompRender</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a29ecd992f0c5b6838b86b11474aaf4fe</anchor>
      <arglist>(const AudioClipBase &amp;, HashCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedFileRender</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ab5f00dbad7a3d505326b435a4f9d79b8</anchor>
      <arglist>(Edit &amp;, HashCode hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getFreezeFileForDevice</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a99a4f6c381b148f006a9b9e2d8a2ec72</anchor>
      <arglist>(Edit &amp;, OutputDevice &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDeviceIDFromFreezeFile</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>af7707900e5604458b74f3206f58b4267</anchor>
      <arglist>(Edit &amp;, const juce::File &amp;deviceFreezeFile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getFreezeFileForTrack</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a371be09f9873128360c58084c3785c54</anchor>
      <arglist>(const AudioTrack &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; juce::File &gt;</type>
      <name>getFrozenTrackFiles</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a782fcba18d39927e77f79723b446ede9</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>purgeOrphanFreezeAndProxyFiles</name>
      <anchorfile>classtracktion__engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a897eaaeec8fb6552eba7a445493ed881</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TempoSequence::TempoSections</name>
    <filename>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</filename>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a8775dbb20587a30ff0f9033050db5529</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const SectionDetails &amp;</type>
      <name>getReference</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a0139fe86dbd5c6b8be1458db2274b163</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>timeToBeats</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a4e8d95ce7ef61dea05562defc94b4233</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>beatsToTime</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a32794c575923e73560a77c68aec691f4</anchor>
      <arglist>(double beats) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapWith</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a5d99b52cd16117691f7fc8258b01a43d</anchor>
      <arglist>(juce::Array&lt; SectionDetails &gt; &amp;newTempos)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getChangeCount</name>
      <anchorfile>structtracktion__engine_1_1TempoSequence_1_1TempoSections.html</anchorfile>
      <anchor>a9c25fbf39c508f899a15ebb9752346e2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TempoSequence</name>
    <filename>classtracktion__engine_1_1TempoSequence.html</filename>
    <base>tracktion_engine::Selectable</base>
    <class kind="struct">tracktion_engine::TempoSequence::BarsAndBeats</class>
    <class kind="struct">tracktion_engine::TempoSequence::SectionDetails</class>
    <class kind="struct">tracktion_engine::TempoSequence::TempoSections</class>
    <member kind="function">
      <type></type>
      <name>TempoSequence</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a43d20791c483c0d273cdaaf5f008dd4b</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoSequence</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a1d4786dca9cc5a7f27f1bad1352c6d82</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a753cd33b25884b2f75c0d69c42417a5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::ValueTree &amp;</type>
      <name>getState</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a4c65634fc2faad20091cf66bada10371</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a9d606d719bfc603a79ca00e9c0942fbb</anchor>
      <arglist>(const juce::ValueTree &amp;, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createEmptyState</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3adf7dfa67d0f055853ccac81bdbc79c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa9dc64ef92a4f4dfcd203a934beabeee</anchor>
      <arglist>(const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeResources</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6606750549354041970a3ddf28258ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>afa2903f2b04fb06fc39b69073c9a42f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; TimeSigSetting * &gt; &amp;</type>
      <name>getTimeSigs</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a89b872cd1ee7d2a5eca74bedc447dc95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTimeSigs</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a840b3a32bc3815d56be6aded33915c3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting *</type>
      <name>getTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a8d9c90f60f9562810a37ef7b1e8294ae</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getTimeSigAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a8a56ca03bd938b58d614933e141050b9</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getTimeSigAtBeat</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6e468fa37a87a188e2b9d10ff1f7dcc4</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTimeSigAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>af738ed02984886a7d76a243e1067f586</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a24aa0d6c06230432976bd8b47db37f72</anchor>
      <arglist>(const TimeSigSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; TempoSetting * &gt; &amp;</type>
      <name>getTempos</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a557ccecec8ba56a1bac346403b5db7eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTempos</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>abd5384979a485d197049d6cb74cfdefa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting *</type>
      <name>getTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a12aca439579a5afcbc97b02f35211baf</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting &amp;</type>
      <name>getTempoAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad9842acef015bfec0093e61a3e7a385f</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting &amp;</type>
      <name>getTempoAtBeat</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a0a6f3631d3ccd22c45692601d1f7ddb4</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpmAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a5dc9793a56e1bc0a277e2e5ba61fa310</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsPerSecondAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6b89b7d3bf2665052e6f19db633bd2e7</anchor>
      <arglist>(double time, bool lengthOfOneBeatDependsOnTimeSignature=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTripletsAtTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a45785e55602678f398ab94776690e2e5</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTempoAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3ed47772cc0a9a2e502ed51a58cc87d4</anchor>
      <arglist>(double t) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfNextTempoAt</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>af056b7bc3cf229c8dfed40b44671ede8</anchor>
      <arglist>(double t) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>af99a13fdfce869bd2d035659379bc095</anchor>
      <arglist>(const TempoSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>countTemposInRegion</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a64edd9700dea55981ae062a4f95973b9</anchor>
      <arglist>(EditTimeRange range) const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>createHashForTemposInRange</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa3d567194ba47d4327d557d28736b59e</anchor>
      <arglist>(EditTimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting::Ptr</type>
      <name>insertTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a017810017935f6cba367f5a0c563594c</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting::Ptr</type>
      <name>insertTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a9db53e5749a734fa2139268985788343</anchor>
      <arglist>(double beatNum, double bpm, float curve)</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting::Ptr</type>
      <name>insertTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aac389582d7c5fc2d1b59a526dfc6dd9c</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a8c405f30352810247f617511a4a8d7ed</anchor>
      <arglist>(int index, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTemposBetween</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a2116f3eed6203ab7a4e5f1988f279251</anchor>
      <arglist>(EditTimeRange, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa170cbccefc3368ef8c51506dbf83cb4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTimeSigsBetween</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa0c7e11bac25815a681a68f13e7c00e6</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTempoStart</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad824765f38c3e403f9f787d846522e26</anchor>
      <arglist>(int index, double deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTimeSigStart</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a41153e940ed1f9e205a1143a8cb53060</anchor>
      <arglist>(int index, double deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoSequence</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a485d81c295825d5fcd3c761aca533753</anchor>
      <arglist>(double time, double amountOfSpaceInSeconds, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a68ab4b88eaafcefa28f810376feab587</anchor>
      <arglist>(EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>timeToBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a4564f73ee6f0bcb5f41f51ae5041bef6</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; double &gt;</type>
      <name>timeToBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad9b999db1584c8841b4d8f91139e8242</anchor>
      <arglist>(EditTimeRange timeRange) const</arglist>
    </member>
    <member kind="function">
      <type>BarsAndBeats</type>
      <name>timeToBarsBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>ab84dfc2db634d49a22f0b042fd99876f</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barsBeatsToTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aaae8b24a90d51f7efb658dc894cf5c16</anchor>
      <arglist>(BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barsBeatsToBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a0c4d44a71a841c52e28ae5ec1b6b3bdc</anchor>
      <arglist>(BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>beatsToTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>aac35f651f91bf51e3ebfecec9f1f9d86</anchor>
      <arglist>(double beats) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>beatsToTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad2f546c8636d58036f08e74c3ae5024d</anchor>
      <arglist>(juce::Range&lt; double &gt; beatsRange) const</arglist>
    </member>
    <member kind="function">
      <type>const TempoSections &amp;</type>
      <name>getTempoSections</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a9814027fea9c224611a32bd12f80537e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a975a71967ca07ec7398d5b50dc54cd1e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTempoData</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a21016ca8a9ab9189725de3d9c26984b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a702a21207b605bfd34dad8cd8a6910b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TempoSetting</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a372401f34f590890c7d14fae675792eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimeSigSetting</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>af7ebf8c0c0c73e2d559175daf5a73e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TempoSequencePosition</name>
      <anchorfile>classtracktion__engine_1_1TempoSequence.html</anchorfile>
      <anchor>a71239666956a0520e23bd54eae71f57b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TempoSequencePosition</name>
    <filename>classtracktion__engine_1_1TempoSequencePosition.html</filename>
    <member kind="function">
      <type></type>
      <name>TempoSequencePosition</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>aec775f125ab0e82536a597da5620e26c</anchor>
      <arglist>(const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TempoSequencePosition</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>aca5a94b64954beab7c571f7fe48c7090</anchor>
      <arglist>(const TempoSequencePosition &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoSequencePosition</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a1036b6619cde21a08b1052d398408de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a68dc49dfd4d24a8bc98457690d0297f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoSequence::BarsAndBeats</type>
      <name>getBarsBeatsTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a56561ec8289cb277ecd5ca5d246dc59d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const TempoSequence::SectionDetails &amp;</type>
      <name>getCurrentTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>afb573949e13883699073628bb84ce03e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPPQTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a093951df1301e928f71bfc7b0078750a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPPQTimeOfBarStart</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a63b960728c59ba2991cdc4f35e979fe6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>ac09b9f92e1fb254214126fb9e248ddab</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBars</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>ae9813661e9f8e98ee702350d9a45ca86</anchor>
      <arglist>(int bars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a12da54e61e5bd3a6fe3f3f53a7d5a2f2</anchor>
      <arglist>(double beats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeconds</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a5927368615fb0734c8cc351d8893e700</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarsBeats</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>a586ca0887397fc63307b1a001a6e0715</anchor>
      <arglist>(TempoSequence::BarsAndBeats)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPPQTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSequencePosition.html</anchorfile>
      <anchor>ad0fc994b5d76dc081649f03cb8786246</anchor>
      <arglist>(double ppq)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TempoSetting</name>
    <filename>classtracktion__engine_1_1TempoSetting.html</filename>
    <base>tracktion_engine::CurveEditorPoint</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TempoSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>aaea4e1e2fc546ff989083245f59d0861</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TempoSetting</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a836a9464419bcc5fc869deefaba0c62d</anchor>
      <arglist>(TempoSequence &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoSetting</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a701549859ddd9944b35fd20d59aa582d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>aa3688594684fcf4236cfa250a46bf1bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a1ba14d31fe0826b3000bab4e87bd5f42</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a0dbb0b6ad1752af41e85c006eae22ef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpm</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>ac54472efd1e58ef55cb08a181334ae3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurve</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a8ae508e6d71686cd186a0d6eeebf72d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>aa1da71e5d6ed4f7f309912fbdc8fcd4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>afae9fa65f3f45a6ae8bce9d59f3be325</anchor>
      <arglist>(double startBeatNum, double newBpm, float newCurve, bool remapEditPositions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBpm</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a11f6543197ce1bc4f0583baf5c8cda14</anchor>
      <arglist>(double newBpm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurve</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>af72fc7e2d890bbcd13317f7685f702ef</anchor>
      <arglist>(float curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartBeat</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a383ddecd810630976cb295d7ad56b150</anchor>
      <arglist>(double newStartBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a1b198af9d89e5d96a26871b3667744e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getApproxBeatLength</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>ab26a52e02acd3d6ec21586242884fe63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting *</type>
      <name>getPreviousTempo</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a42f726ba1563ceac537cd2c5ea28b9ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getMatchingTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a6b5a82880d236a4fdc5c9b0cc67b1826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a2f08655269eae96f3850ec182ed81e5b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a2e3faafbcc3b0745bacb04030c87def9</anchor>
      <arglist>(double startBeat, double bpm, float curve)</arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence &amp;</type>
      <name>ownerSequence</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>ac8ce3a5f55f86c76bfd7ca5fccb6a83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>adf9c00e482047cce09b4675f9d5306a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>startBeatNumber</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a695c27c0d8274637494a1f0bc8f375c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>bpm</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a3dc5d129974064e6a5c52e23262c6bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>curve</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>ae88ca40db12f6d2c85432fbb16444729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>a6c6e2a6eb40fe8e600eaf3559ae9aa72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>minBPM</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>abf0ab5d2c676b99e17b29a6019bf7ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>maxBPM</name>
      <anchorfile>classtracktion__engine_1_1TempoSetting.html</anchorfile>
      <anchor>afaaee29700344ddb297906026ddba66d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TempoTrack</name>
    <filename>classtracktion__engine_1_1TempoTrack.html</filename>
    <base>tracktion_engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TempoTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a2d5e96320ccc71d9bda9e55caeff1022</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TempoTrack</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a57e52ce192ef111ddf14ce0e0e2535ee</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoTrack</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a91449f0636fa58e7c14f887c15ed963e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTempoTrack</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>aa2127f461358057a3273d16f3841f7c1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a236daf9c29197e4797005d6abcd0138f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a1d416062682caf3111a0f0d4bf2f4edf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>aa9518ab9c9329419057daa239dc31fd6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a7692ee97ed4c259f945e146e1cf51fe3</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a27758c3897c1eae47b24a382e878f23a</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a6cc57623ad6b76150cb616ff56191da6</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a089b92b76171bc8a6f8cbc3638dc30df</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>acb7c84311b5e0bd3233ff70a0f557beb</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion__engine_1_1TempoTrack.html</anchorfile>
      <anchor>a65c6b786f4ebfbb207a170d3e86cf86d</anchor>
      <arglist>(double time, double amountOfSpace) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ProjectManager::TempProject</name>
    <filename>structtracktion__engine_1_1ProjectManager_1_1TempProject.html</filename>
    <member kind="function">
      <type></type>
      <name>TempProject</name>
      <anchorfile>structtracktion__engine_1_1ProjectManager_1_1TempProject.html</anchorfile>
      <anchor>a66d6756689d578508c56db6932465756</anchor>
      <arglist>(ProjectManager &amp;pm, const juce::File &amp;f, bool createNewProjectID)</arglist>
    </member>
    <member kind="variable">
      <type>Project::Ptr</type>
      <name>project</name>
      <anchorfile>structtracktion__engine_1_1ProjectManager_1_1TempProject.html</anchorfile>
      <anchor>ad4d29a04093da601820d16d7585dfdd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::test_utilities::TestContext</name>
    <filename>structtracktion__graph_1_1test__utilities_1_1TestContext.html</filename>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>buffer</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>a3d1df9c01be016eb9cc433f59cc89bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MidiBuffer</type>
      <name>midi</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>afd41b486d689f1158b7103b2257e132d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numProcessMisses</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>a29d2ff7b76cbad5fdc53f3d858d4fbab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::test_utilities::TestProcess</name>
    <filename>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TestProcess</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a22e1a58d6519ce0829e52dd33b67d285</anchor>
      <arglist>(std::unique_ptr&lt; NodePlayerType &gt; playerToUse, TestSetup ts, const int numChannelsToUse, const double duration, bool writeToBuffer)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDescription</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a90b9b96a0401567126cfde7164512edb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PerformanceMeasurement::Statistics</type>
      <name>getStatisticsAndReset</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a59533003dd277faec74540397c91e616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Node &amp;</type>
      <name>getNode</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>ae5ff253d8f7756beca631e2a56d83a8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NodePlayerType &amp;</type>
      <name>getNodePlayer</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a9e8a3d9bdd7aa2a15b79a7fcfc20620c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>abfbc8f82ac44cb33281598c31358af42</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayer</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aef77ca2cd91b320cde45ca95c4a53dd0</anchor>
      <arglist>(std::unique_ptr&lt; NodePlayerType &gt; newPlayerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayHead</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aad67dd6185be5a6d9b0a02efe8373345</anchor>
      <arglist>(tracktion_graph::PlayHead *newPlayHead)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>ad5fa02c17161e7e26cf2f4b7f8fe93ff</anchor>
      <arglist>(int maxNumSamples)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TestContext &gt;</type>
      <name>processAll</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a8932e7ee941db16748245cc8aee0839b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TestContext &gt;</type>
      <name>getTestResult</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aa7d5c44ec28e14e91e5351810c4d731c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::test_utilities::TestSetup</name>
    <filename>structtracktion__graph_1_1test__utilities_1_1TestSetup.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>a16052c554c00db5e34aafe964069f1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>a60e4e054b48b0befddb40c303c3696d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>randomiseBlockSizes</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>a5079ae95dddcb5b7b3fb77cb6ad1f965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Random</type>
      <name>random</name>
      <anchorfile>structtracktion__graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>a77fb4b7ce280bc3e67bc13e225c9cdbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TextPlugin</name>
    <filename>classtracktion__engine_1_1TextPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>TextPlugin</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a830f8127395f4e1040bf027e299f1a15</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextPlugin</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>af3b704dc7bd68d4a7b780ba6a380a94d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a19bcf9f43c1d9e83407a4713c647849a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>ac5f8d3130fcaae944139072731e8d300</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a540a7eb4d0371e869ca7650792899f55</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a32042fb30e4038bbbddc2ad45a1ab5d6</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>aa19cdc3e3180c026ce691763907aa94e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a1e2074b80378b6f14a3eb82f97fc2c6b</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a5a3a6d81f6eff1a2a6e5d30fcea1f7dc</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a0df36a7af0cd468c3f475f14be7fb26c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>aab8cd56044e2d18c9a60ce85879a7b66</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a89118c65270cfb6186a9aa62ecea2032</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>af2f882c36e058270cf569468f7b6a019</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>acd75b42ab3d820f88ce7fa8cf6480df2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>textTitle</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>ada760a08fc285fa1b0236b436b644f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>textBody</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a329ad01ab13c4adcc8577a070e2cf4b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1TextPlugin.html</anchorfile>
      <anchor>a53ff846f4cc239f89dc003352c4ecbc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::LockFreeMultiThreadedNodePlayer::ThreadPool</name>
    <filename>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPool</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a73c5ba6cfa6bc80946f3f93762dea6a5</anchor>
      <arglist>(LockFreeMultiThreadedNodePlayer &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThreadPool</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>ad3aae85a0c43a72964ed483ce3df289b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createThreads</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a0fdbb782e76e8895276579890fcd5fb4</anchor>
      <arglist>(size_t numThreads)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearThreads</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a0d43d9e51021b402bd529e203272865c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>signalOne</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>ae4214dcba498462df228622d14c3ba2b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>signalAll</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>aa5659f7420d52250a3347e06b6e92803</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitForFinalNode</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a2ad8f5a37bee81341fecb7981494ac29</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalShouldExit</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a1e5d1afc12163cb0d4d31b6fdfa2f230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetExitSignal</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a62b4173ac72ce92e653effdabe91f6f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldExit</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>ae1da7f41e443a3a743020e574ca7bc18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldWait</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a09f293c47e1a3dd7de43374a9b7decd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinalNodeReady</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a7bb2e24009588ca4b61f119124157b27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>structtracktion__graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>aef5899842a397fa1c74d1b908e45ef85</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ThreadPoolJobWithProgress</name>
    <filename>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>a82060e3cad2cb14fda0470e25686cdd6</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>adab07c2f32781ce5e1047d1a052a7f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>ad3423f50e751d026b0d2ad823f60a003</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canCancel</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>ab7e03a7e9017548728bd8bb8aab195e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManager</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>ab0c82908e6c0512f668a96ce008eb353</anchor>
      <arglist>(BackgroundJobManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>ad27c30f5548daabe449a3e2c7f9cd0ae</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForJobDeletion</name>
      <anchorfile>classtracktion__engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>a3e22b7c635de4d505c9187d672c8138f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::RecordingThumbnailManager::Thumbnail</name>
    <filename>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Thumbnail &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>aca403d756cd340cace4a6b1c76ca3966</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Thumbnail</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>ad50b577b76d75af20248deb726799cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a9f2d83e1671036d717d207c7ea86598a</anchor>
      <arglist>(int numChannels, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlock</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a5953d7db20a2cb474ddb9cfeb2e40972</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;incoming, int startOffsetInBuffer, int numSamples)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>ac93fb22b88c429317866812c68b54bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TracktionThumbnail</type>
      <name>thumb</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a34f12d9c38b84e925641794ec1a5aad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::File</type>
      <name>file</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a090b17ae3963ce14ccb7e038b95bd326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const HashCode</type>
      <name>hash</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>ab6b59a0fa89c79c4e2c79545c27e6610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>punchInTime</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a100d12dd04043610613b3d89a860415c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RecordingThumbnailManager</name>
      <anchorfile>structtracktion__engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a458b3d015342d331bc5cf5022a1536d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TimecodeDisplayFormat</name>
    <filename>structtracktion__engine_1_1TimecodeDisplayFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayFormat</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a0a84c95f6b37de0c9194dd713940404e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayFormat</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a53fe5fae23815774e13ec20fc926ae8e</anchor>
      <arglist>(TimecodeType t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>ada0fc46d3043b55db43828eeb7d5fcc9</anchor>
      <arglist>(const TimecodeDisplayFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a9584528ae2160892e2329383bee070c2</anchor>
      <arglist>(const TimecodeDisplayFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBarsBeats</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a4b616ca3b6f15118f33132915e360c54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMilliseconds</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>ab9bd0e0c00c05a56fd0c8401d2c7ef14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSMPTE</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>adc01def5330194a56373f7c89fc7ae34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFPS</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a8eb35db1da029b266abdee3073583be5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRoundingDescription</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>add36227568516a3d80f33947ca262795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getString</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aa9304df088815066d86885bcb98ea6df</anchor>
      <arglist>(const TempoSequence &amp;, double time, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getStartLabel</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a053b3e09d681d34ba5c5476209ce672e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumParts</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a75ef91e2fd75eb277d3d4470d2ebe85d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSeparator</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a86fe81d8c762311015d9dc74f9687e16</anchor>
      <arglist>(int part) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxCharsInPart</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a9aafd886a9dd652b2c738fde09d4a525</anchor>
      <arglist>(int part, bool canBeNegative) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxValueOfPart</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a94f45e50c0e602e8be67c9a6b80d4586</anchor>
      <arglist>(const TempoSequence &amp;, TimecodeDuration currentTime, int part, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinValueOfPart</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a6cbe192c8dbbd1ed76eb15afce5ebfa5</anchor>
      <arglist>(int part, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPartStrings</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a0b58f3e214290da39fd629f55db7232f</anchor>
      <arglist>(TimecodeDuration duration, const TempoSequence &amp;, bool isRelative, juce::String results[4]) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeDuration</type>
      <name>getNewTimeWithPartValue</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>ab9145c118438cbf33d8297708453aa5f</anchor>
      <arglist>(TimecodeDuration oldTime, const TempoSequence &amp;, int part, int newValue, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getBestSnapType</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aae5a4ae6c0f8ca5fdb719e99fce1d8aa</anchor>
      <arglist>(const TempoSetting &amp;, double onScreenTimePerPixel, bool isTripletOverride) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSnapTypes</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>afdfd6cba341f41118e981fa0d957fffa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapType</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aff9641b43211d323ad16d9f2a6730de3</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSubSecondDivisions</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a1bfffb34f5e2fdc54cd1152b3651c1fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>toFullTimecode</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a5131ab825e3d5961083af534da929c3f</anchor>
      <arglist>(double seconds, const int subSecondDivisions=1000, bool showHours=false)</arglist>
    </member>
    <member kind="variable">
      <type>TimecodeType</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>abec06ce5be2ff15751a77f3895f0b842</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TimecodeDisplayIterator</name>
    <filename>structtracktion__engine_1_1TimecodeDisplayIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayIterator</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>ae04718094968ce57745eb769808d1531</anchor>
      <arglist>(const Edit &amp;, double startTime, TimecodeSnapType minSnapTypeToUse, bool isTripletOverride)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>next</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a2eb57f6d0594f5b713aa1f15dd7a0050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTimecodeAsString</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>abfdcccdb20d4f81bccea467b00d765d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentResolutionLevel</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a22711e6a701c7060d2533bf08166a944</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinimumResolutionLevel</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a203565cb822605633ff9cfb94bfc213d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneBarOrGreater</name>
      <anchorfile>structtracktion__engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a16e1adb2a8978f806eb0d130dfb40935</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimecodeDuration</name>
    <filename>classtracktion__engine_1_1TimecodeDuration.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDuration</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>affd71e02fcd922286911d6553f7d2cb5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>af83c761e2dbd8d773053ac5adfc35c42</anchor>
      <arglist>(const TimecodeDuration &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a3ee9937926f5cbc0e09b047cde524b44</anchor>
      <arglist>(const TimecodeDuration &amp;) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromSeconds</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>ac992d4f138f494f98a15c370aafe2e31</anchor>
      <arglist>(Edit &amp;e, double start, double end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromBeatsOnly</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>ad0aa801a88ed55be20d67c2e9187835a</anchor>
      <arglist>(double beats, int beatsPerBar)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromSecondsOnly</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a739bf10d7f831773c22a31a26554b7c8</anchor>
      <arglist>(double seconds)</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; double &gt;</type>
      <name>seconds</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a7c1a2b91391ad962795af4518adaad24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; double &gt;</type>
      <name>beats</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a18212675d212d4afc35a2a379662dfaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>beatsPerBar</name>
      <anchorfile>classtracktion__engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>ad0221f97385a884c2ce152e8a609cd12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TimecodeSnapType</name>
    <filename>structtracktion__engine_1_1TimecodeSnapType.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeSnapType</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a7ff207d06d92cde9161ff120bc7c3edc</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimecodeSnapType</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a2482da97892a4ae5955661e8c0819c5e</anchor>
      <arglist>(TimecodeType t, int lev) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>aab8ea61bb2c4ccbd33c2464814d762ed</anchor>
      <arglist>(const TempoSetting &amp;, bool isTripletOverride) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getApproxIntervalTime</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>abd37791610cac79728f62079a154cee8</anchor>
      <arglist>(const TempoSetting &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getApproxIntervalTime</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a6c61ce599d535b2a58903693e00a9263</anchor>
      <arglist>(const TempoSetting &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTimecodeString</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a075d5955f3c891a92412a214f240bc93</anchor>
      <arglist>(double time, const TempoSequence &amp;, bool useStartLabelIfZero) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeDown</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a6f1b23665c6071113ca8d502fc5fd7c9</anchor>
      <arglist>(double t, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeDown</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a8a69e03bfba8ffdb3a802abeae3e3141</anchor>
      <arglist>(double t, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeNearest</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>aaf2a839f1819a28d20aa94f07ba01157</anchor>
      <arglist>(double t, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeNearest</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a8350b46ac5b8e721a5c26ea405201d32</anchor>
      <arglist>(double t, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeUp</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a1ab1c6f7ba4c63a727d38e30e05eac88</anchor>
      <arglist>(double t, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>roundTimeUp</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>af761172a76d7d1954d55f4b2148b192a</anchor>
      <arglist>(double t, const TempoSequence &amp;, bool tripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevel</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>aafcb740ea511ffd52400b621fe8376d8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOneBarLevel</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a7e4c9002d72e16dcaf6012e2ed3fc805</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapTypeForMaximumSnapLevelOf</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a19f0f8462db892079a82b0e31a9c559a</anchor>
      <arglist>(double t, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapTypeForMaximumSnapLevelOf</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a5a6087c30701a6ac80aea4d23141547e</anchor>
      <arglist>(double t, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeSnapType</type>
      <name>get1BeatSnapType</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a9c22b707963f9ca7845ed86f2a73e6b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TimecodeType</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a3277b26586597c4c91b8827f1a083127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level</name>
      <anchorfile>structtracktion__engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a4d2116dcc9d4cfa6e79515dca57a4706</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimedMutingAudioNode</name>
    <filename>classtracktion__engine_1_1TimedMutingAudioNode.html</filename>
    <base>tracktion_engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>TimedMutingAudioNode</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>aa36e19fbc3487f8f15788f4c1534be82</anchor>
      <arglist>(AudioNode *inp, const juce::Array&lt; EditTimeRange &gt; &amp;muteTimes_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>a5caaa70a1fa602e40909fbded8cbabeb</anchor>
      <arglist>(const AudioRenderContext &amp;rc, EditTimeRange editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>aecbf20d69a649ae1471c7a86e940d75b</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>ac91b3490cc889145f95e8ce5f242da24</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimedMutingNode</name>
    <filename>classtracktion__engine_1_1TimedMutingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TimedMutingNode</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a53dcb4b717ac5e0fd206d7a545c8a1c1</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt;, juce::Array&lt; EditTimeRange &gt; muteTimes, tracktion_graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>adcbc7d9bbde574c76d8e2b46d40fb47c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a052d205382753e8ff9001893c88e8c08</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a5579f318d818c7d8e58a711820edce82</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>ab4b1dfd6f127b5ed6d4e685707b1e559</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a269707fc5b9de5feb46e2847a15895e0</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::TimeSigs</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>TimeSigs</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>af4e863fa0bba5d12e7287b8f2d66375f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeSigs</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a0356891571a669ef2445f934ed55f827</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a00f80dedff923d9d9cf47ebcdef691ac</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>timeSigs</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a1f911448cda1e33b4404e65685a63c16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimeSigSetting</name>
    <filename>classtracktion__engine_1_1TimeSigSetting.html</filename>
    <base>tracktion_engine::TrackItem</base>
    <base protection="private">tracktion_engine::ValueTreeAllEventListener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TimeSigSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3544baa96f86ccf7f6d082cc5cefdcdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; TimeSigSetting &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a4f7b8dc5830973193e5b36325f98a037</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeSigSetting</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a6f26bfa7d70d9173112e754a8ec22134</anchor>
      <arglist>(TempoSequence &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeSigSetting</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a1d14adfe598a0d5ee7ee3551ef47b240</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a81b4d13cb79da03a6d07dba3a9da360f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ad427e33f02909b4d910c0e6e25deeca1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getStringTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a8af66c0ebd627940f1afaa022e491c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringTimeSig</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>adaab355e778e15c84a33b42862add353</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a6d62db22040af339dcc05b7203faf883</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a34248cda2cd65bf432c37bfa8c587bda</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3c9cc00015c3a2c9d8f5c2db031199d6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a32cab4ac5662bc9bad77f858c3edae4d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3db0346c013d0b337f24d701416ef0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence &amp;</type>
      <name>ownerSequence</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a32819665ea3a0cf5de5f4d7cbf767e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>startBeatNumber</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a2fa99a5ea0a85b297c48c569db8d47c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>numerator</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>abf25585141f129fe14bbd2922cfa35f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>denominator</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>aa2e735e612ef8b728541d018acb292ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>triplets</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a871c1a153cf4e448aca8fa723ddab41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a54267eb893c001c9dc3229ff166fb000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>endTime</name>
      <anchorfile>classtracktion__engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a1191e0b3e0ad50d62072935fb801bd1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimeStretcher</name>
    <filename>classtracktion__engine_1_1TimeStretcher.html</filename>
    <class kind="struct">tracktion_engine::TimeStretcher::ElastiqueProOptions</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>disabled</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba1184336425d6e4b90db9e58e82a80ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTransient</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba234bfb8f8cb7fa4c5a1abdb72583f1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTonal</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0baaabdc0524ccabd4167cfba1c942ec475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchNormal</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0baec741ddaa36b71cd1b60157c85ecc193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchBetter</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bab541b7e2fd8b8f404e9776b0bb0f33a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodyne</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba7bb98784c90aed1889c989d086cfb198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiquePro</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba03550834172d16d4f35bea4b26713afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueEfficient</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba7acca5ccea40948e400fbab9283a031e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMobile</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bae14fc91254b9a4ff815e6485f705eb2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMonophonic</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bab6c4fc41b156f497fe7b5c2440640f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandMelodic</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba18dae9574f59c1331f678a15b0efdabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandPercussive</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba34588585680f50780643e8862318d0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMode</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba95a13eb50c2e22b7b016a79ec5e58596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>disabled</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba1184336425d6e4b90db9e58e82a80ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTransient</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba234bfb8f8cb7fa4c5a1abdb72583f1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTonal</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0baaabdc0524ccabd4167cfba1c942ec475</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchNormal</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0baec741ddaa36b71cd1b60157c85ecc193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchBetter</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bab541b7e2fd8b8f404e9776b0bb0f33a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodyne</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba7bb98784c90aed1889c989d086cfb198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiquePro</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba03550834172d16d4f35bea4b26713afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueEfficient</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba7acca5ccea40948e400fbab9283a031e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMobile</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bae14fc91254b9a4ff815e6485f705eb2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMonophonic</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0bab6c4fc41b156f497fe7b5c2440640f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandMelodic</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba18dae9574f59c1331f678a15b0efdabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandPercussive</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba34588585680f50780643e8862318d0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMode</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a867fc09d026f0019c3b2feac9b6acb0ba95a13eb50c2e22b7b016a79ec5e58596</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStretcher</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a887b2e6a6b35af65112192532a5926d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeStretcher</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a6dea8f5ca6503fe60d93ff04f867be86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>af4aae421efe37f33ec10c203358c6736</anchor>
      <arglist>(double sourceSampleRate, int samplesPerBlock, int numChannels, Mode, ElastiqueProOptions, bool realtime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialised</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>ac4d3fdacc490abec99f87c7afc74142f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a564e165b30714e26d1a82eba89686805</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSpeedAndPitch</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>ac01c2e131fdd8623aed99605d34a3e21</anchor>
      <arglist>(float speedRatio, float semitones)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFramesNeeded</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>add5d7a224dcc9474d7ce4ebce062c283</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFramesNeeded</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a238747a849c3770d0345ef1922efba9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processData</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a62f2cd189e232d946d6320369571cc67</anchor>
      <arglist>(const float *const *inChannels, int numSamples, float *const *outChannels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processData</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aeee322a57f8b1c41d57590bde81b245d</anchor>
      <arglist>(AudioFifo &amp;inFifo, int numSamples, AudioFifo &amp;outFifo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>flush</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a8d266a98f75c56cec728a218969147c9</anchor>
      <arglist>(float *const *outChannels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mode</type>
      <name>checkModeIsAvailable</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>ab1da5f93ea641b463be88d6e7cab9ce8</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPossibleModes</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a97e1d48e8c078879d95063c915ddf5ce</anchor>
      <arglist>(Engine &amp;, bool excludeMelodyne)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mode</type>
      <name>getModeFromName</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a0858d909f780c989a40d480cc7da3714</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameOfMode</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a751fdefc8a1aac100e7fb708ac6bed93</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMelodyne</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a54b2e70ef41003c8a22a81607e07ca90</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>canProcessFor</name>
      <anchorfile>classtracktion__engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a5685f65cc2f1e7aa3ab7216f2ebdcead</anchor>
      <arglist>(Mode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TimeStretchingWaveNode</name>
    <filename>classtracktion__engine_1_1TimeStretchingWaveNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TimeStretchingWaveNode</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>ae28e1a00763e4b42b8061075a9deab4c</anchor>
      <arglist>(AudioClipBase &amp;, tracktion_graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a1e94d2860225e394cecbd9bf09b265ce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a1b6fb067f02998d060a2dc77f8ba7a42</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>adf420b57450c91c634f387c7114ec0da</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a9853278e55e6575ea2009524054e9f78</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a3d77726a22c7b4c7eed28ec063baecb5</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ToneGeneratorPlugin</name>
    <filename>classtracktion__engine_1_1ToneGeneratorPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>OscType</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ae1e8a55ecbc93fc4bea000e6b5ae31e4</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4a7d27e4a7ca7533a3bef4fad10a0c19c7">sin</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4acef44b46f16ae8ecf664df4266ffdbf9">triangle</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4acf87f9eb2bfacc5a0362031eba539290">sawUp</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4a3593df94728cd88f078bbc6c41df9876">sawDown</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4a2fc01ec765ec0cb3dcc559126de20b30">square</enumvalue>
      <enumvalue file="classtracktion__engine_1_1ToneGeneratorPlugin.html" anchor="ae1e8a55ecbc93fc4bea000e6b5ae31e4aaaddc3454ccbefbb2d8d8461f8f7f481">noise</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ToneGeneratorPlugin</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a42f227ef321e3d09060c77a7b63c651a</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToneGeneratorPlugin</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a9ae6e834748420e486dcf451ecec3c94</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a11adf1509da2e65cbc6fe908e9f3f533</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a738a6bb3e32bec5faf8afce5df0ec246</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ae62e712c87950e3d2642deaa538bea05</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a790703c253cf5cc5939c02314de88f04</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a8e34b07893602c854c69db6791a33e6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a682e5b5bb28b82d4856ac42513ed3e07</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a9024b317575b6dd6186aa19ef0788d73</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ad7a0544b2e30f5382f29cb2648bf8bcf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a486e5dd8d3db86a55e86f826f686564d</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ae84d4b100d41a8512d5bbdc2e7e4c23e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ad4a9e3563b9aea4e713f94039a38c9ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a483a103347d2929d0581f5da31ec6246</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>aaf7b82527b57a5d5e8c17bd4a5dcb966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getOscTypeNames</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a565420b146c685ad70974c246e2b39a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>oscType</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>adbfdbb9bd8068cb70a38bbee5caf1bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bandLimit</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a9dedbf163bebaf2491cc2e0ababd68ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>frequency</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a17d844902e5ce1667ee73fe01b9eef1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>level</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>acea03f52df53a6bfc11420cd9e7d0ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>oscTypeParam</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a0cce7adb4bb85fdf2df7c10897b61413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bandLimitParam</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a045a7c72e4b5987487fb26753f743946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>frequencyParam</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ac6cb70dfc8ab7d9920a6d7a31f2fda62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>levelParam</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ab3fddf6222cd20f37e094d45784ce352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a9550653a49a45780ec2d07a42b8b757c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::Track</name>
    <filename>classtracktion__engine_1_1Track.html</filename>
    <base>tracktion_engine::EditItem</base>
    <base>tracktion_engine::Selectable</base>
    <base>tracktion_engine::MacroParameterElement</base>
    <member kind="enumeration">
      <type></type>
      <name>FreezeType</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>groupFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1a13589841e89bbe72e29bfe639ae50ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>individualFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1ada389e2825f7d99bbbb99a54edbb83cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>anyFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1a336d1b85056aba3fd61378562b847c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MuteAndSoloLightState</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloLit</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702aa0ca7095a140b60157877417449d96a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloFlashing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702aba4a9521bf5b9d41ca1ca1162a948ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloIsolate</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702afd1a3327ba53c9e30d35ebd0c32a200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteLit</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702a4f7185382a63c1e60459ed905ec6593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteFlashing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702acf78f26d815d5b27ecf0ef708343b5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Track &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>afdc1ed18e1cb9375af9052cc3937f37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Track &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a1382dbb0a1d8588732aa065333e106fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>groupFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1a13589841e89bbe72e29bfe639ae50ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>individualFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1ada389e2825f7d99bbbb99a54edbb83cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>anyFreeze</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a08c9e5775ff105835e103e955ca29dd1a336d1b85056aba3fd61378562b847c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloLit</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702aa0ca7095a140b60157877417449d96a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloFlashing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702aba4a9521bf5b9d41ca1ca1162a948ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloIsolate</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702afd1a3327ba53c9e30d35ebd0c32a200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteLit</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702a4f7185382a63c1e60459ed905ec6593c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteFlashing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a63b8fd4800f10b56f9c00902d0d1c702acf78f26d815d5b27ecf0ef708343b5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a02fcc02ca567dd105b763dc449c10388</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, double defaultTrackHeight, double minTrackHeight, double maxTrackHeight)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Track</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a82d153246f2e4b34eea596dcd28a0661</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a83ec965b961469345610d723548229ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2e8c3106c340dc8d0f35817ce3f0070c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshCurrentAutoParam</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>af51f96a8a2190fd9e9700d73acfe7180</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aedd0ca6f8b0a16b68e0a69b34c6bd096</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a4c23905d7586a0339a4a714516733b2e</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetName</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a596d550d5494918a0247a13f6d861850</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aeee7639cf7a768b3c8c644e077b9bdc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aaa86b80cc481655ddf7a844b1751b6ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a35ea706802002b938491727c68f8121a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a48e2c40a5ae9736b4d7245f6fa9b56c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ac1688c951a0ed757e3f8e80228482636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTempoTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a80876998cceeee5d9500c3c3f6e7f566</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChordTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a1e885dcc7ca3aaece56f8ad85a975ed9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a23bc00a624518a4b2cab0b96e0aa483f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMasterTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2ddd9f26904372d8f74826cc46ecdcdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMarkers</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a47fb329d1b50eb6ab8250f5f1e4ec138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMIDI</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a9de3425600b128922027bc30521f8e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainAudio</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a9cd16c511b5108fcebee9aca1e830708</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainEditClips</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aef41dbe33b3295294f8011ca59b26dc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugins</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a5f280a0bf34c17f08d9cbf746a0d6ada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMovable</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>affce42a3519def41c53418ad37af90e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTop</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2e8837765c2c56449a58308d1a1c197e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>acceptsInput</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a92406c76005f7dde0ab62c897ce9dacd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createsOutput</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a662a4d7e43460c40808fa1dcf72ee3f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsAutomation</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ae4bbde4cc936166566cc2a5a173c3b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a4d7e4bbb74ffade2225b2a856a01fb65</anchor>
      <arglist>(Plugin *) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a8c5cbcbf30d042c4244ec195c57730d8</anchor>
      <arglist>(FreezeType) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>adfa4dabf83d593a92f188d2366892ba8</anchor>
      <arglist>(bool, FreezeType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a83bf32ed1d17c8e415693870fb66a044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a945e7154239a49f72999fb703843bf3e</anchor>
      <arglist>(bool h)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProcessing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ad34cd1739c15fd12e0293c7b30d77343</anchor>
      <arglist>(bool includeParents) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessing</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a32fab03c2c9cb023e8e12f8e2176daf9</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processAudioNodesWhileMuted</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ad97d4c3a3ffaafa764f7122f46d30067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a3178cc01a306d0fefbf31fd7a99bba9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllSubTracks</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a414e521230b1a1f64c45d9a1e3dffa83</anchor>
      <arglist>(bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAllAudioSubTracks</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>afdca79c695337c3244264e515a7a5812</anchor>
      <arglist>(bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>TrackList *</type>
      <name>getSubTrackList</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a6865b248a6b46af08efa5532bc094a14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSubTracks</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a5e2f14b35dfd4526f73ab371c8120837</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Clip *</type>
      <name>findClipForID</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a8ca823b12c45e003b3c1904215fd61f9</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getSiblingTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>af0a6c982893312deedff96ad25934e63</anchor>
      <arglist>(int delta, bool keepWithinSameParent) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a37566b1b7f8fbcf913336d1f41349faf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aee3b8daeff6a3320c515648755b58f8f</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a9048eb085867ac81b09a1ddcf32aada8</anchor>
      <arglist>(TrackItem *) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a81e6ccd30a6f97437f9082944c9f7354</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a1e3373f9d0c5c8dcb69ddc671b0e8fdb</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a916b4f9d3f178bb60010a64fa5365a22</anchor>
      <arglist>(double time, double amountOfSpace)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getParentTrackTree</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>adf63558ae68b7cd34e7907e86001b80e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getParentTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>abd1c409c7e3ec899c89215641759473f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FolderTrack *</type>
      <name>getParentFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a85899b5d547541ad11357e211782e849</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAChildOf</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>adbcdf4a6317912764f516a0ce3048917</anchor>
      <arglist>(const Track &amp;possibleParent) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPartOfSubmix</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>abb818a2c526a4758e7e784768fae5f4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexInEditTrackList</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>abbf7af2c4f7af17a8d245054d420d7c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTrackDepth</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>af07b69bbf20fc54b05e914a3b8fc169e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a42c2663067a33580916adea06aa8f0ca</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a70c313af25f3d859a6412d34e2713550</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a5ec2880aaf2718b7b2e4e8c7e52ed9a6</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMute</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a9e90955e866ba2c0521fc40bf2a8cf05</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>acdad78caea13bd370ac469cac4430263</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a5ed595661b18f19cb90371e33c7981ab</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>MuteAndSoloLightState</type>
      <name>getMuteAndSoloLightState</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aede4f590003eebc7fb9c815acd5e3716</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldBePlayed</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a1b3d7d36cceeeed8b6e18691ebfda1c3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAudibility</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aeda6cbc59d57d83ab63decf4d7241ff7</anchor>
      <arglist>(bool areAnyTracksSolo)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParams</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ac01ca40713b72b1fc90a3d869c5155ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getCurrentlyShownAutoParam</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>abf393391de79bfc88d367ac2f02dea1e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentlyShownAutoParam</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ab228bc2f97939213b66c9b9e12f42920</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAutomatableParametersForSource</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a30e5158bdb4a4e50fef7f552cdb179f0</anchor>
      <arglist>(EditItemID pluginOrParameterID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>containsPlugin</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ae550f55260a5251f90e38d0bdf4dc834</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFreezePointPlugin</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2243b0964f6156cdd4edc4a857778178</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2a2c4117b40ef4aeeb6e47225aa12e12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aec20164616ecdf507135e3384ee2582b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a5670177a74022656e43e2cd8b802e459</anchor>
      <arglist>(Plugin &amp;changedPlugin) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipAllPluginsEnablement</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>af458467705f86244163360c9b79e10a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModifierList &amp;</type>
      <name>getModifierList</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>adc494b561169c2a3da487170aecd9747</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a95907bb846bb6b737291d4dd78b974f0</anchor>
      <arglist>(juce::Colour newColour)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a92b41738bdebf1b2d5ff27704ce48829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canShowImage</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a13f4a157dc40e272eb04849979a56336</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackImage</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a96d69d81c0d04f76c95e0b92bff2f2a2</anchor>
      <arglist>(const juce::String &amp;idOrData)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackImage</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ad088987c565d7e2149a7a01cf823fbd8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>imageHasChanged</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>aedef02cf5f09ea08e05d0a12e0e6d53f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTags</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a7f6f558acf7cec9fcc692dfb60ec8840</anchor>
      <arglist>(const juce::StringArray &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTags</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a83b7b00b8268e308091e359fe2685073</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::StringArray &amp;</type>
      <name>getTagsArray</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>acb8b7054adf11b440a3489c17a933c1f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>defaultTrackHeight</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a9e04e0b12f2effee8a51acb9fbfbffe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>minTrackHeight</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a7ac28d264bf757972e2d3a725cc41b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>maxTrackHeight</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ae3b8a5a0d04b9a5f7afb4f3235d37710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2eed48593f4c88010045e253f7997029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PluginList</type>
      <name>pluginList</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ab2d35c31abd50bbf802ecaa21db813ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>minTrackHeightForDetail</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ab7448a8f3b2c410890a65c0a9661a5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>trackHeightForEditor</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a2d62fe79da26342b46ddb365233260c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>frozenTrackHeight</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a6e1e7b82820c6bc29d00be1fcb0ab543</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a129a65320357f1f875d4d5a070e74eb4</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>adc225d5a241444941bc8fa2293f156bb</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ab003e4d4c2d9e5ced89023bc67d5c877</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>a7b0eb11bcef1063035b2f5e7b04fe2c7</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>ad169dbd2b25dd355e04f5c38605ca106</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTrackAudible</name>
      <anchorfile>classtracktion__engine_1_1Track.html</anchorfile>
      <anchor>abbb569a138935374527443aa03ba3e6e</anchor>
      <arglist>(bool areAnyTracksSolo) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackAutomationSection</name>
    <filename>structtracktion__engine_1_1TrackAutomationSection.html</filename>
    <class kind="struct">tracktion_engine::TrackAutomationSection::ActiveParameters</class>
    <member kind="function">
      <type></type>
      <name>TrackAutomationSection</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>ad0030f1d1dde002f71cd37e89415aade</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackAutomationSection</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a9c3873632600a18c6f1c51949dfd2b95</anchor>
      <arglist>(TrackItem &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeIn</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>abeaf0c7024c3e99a3732dc8a797ec38e</anchor>
      <arglist>(const TrackAutomationSection &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlaps</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>af18652c063335dcf45352a7a5d499150</anchor>
      <arglist>(const TrackAutomationSection &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsParameter</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a9ab2ce9f67ad7aff829e00dad8e6e7bf</anchor>
      <arglist>(AutomatableParameter *) const</arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>position</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a1747a518df8dd54f8078f1c165b79d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>src</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a1d949b8cec3124eb63dc4547ed125837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>dst</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a744d7d7e570a899f88c53a4923a8ca25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ActiveParameters &gt;</type>
      <name>activeParameters</name>
      <anchorfile>structtracktion__engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>ab1e0c5567afac0da7db863ef73927b5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackCompManager::TrackComp</name>
    <filename>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</filename>
    <base>tracktion_engine::Selectable</base>
    <base>ValueTreeObjectList&lt; CompSection &gt;</base>
    <class kind="struct">tracktion_engine::TrackCompManager::TrackComp::Section</class>
    <member kind="enumeration">
      <type></type>
      <name>TimeFormat</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a546aff7fb3efe57b1bded52c57e3700f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>seconds</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a546aff7fb3efe57b1bded52c57e3700fad7efe6f3e2de0ced305c956e7d8ab369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beats</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a546aff7fb3efe57b1bded52c57e3700fa64185d2346f83f91caed7d860b69b5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TrackComp &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a8b25d8fe6945df48f13e96a0ecc6115d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>seconds</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a546aff7fb3efe57b1bded52c57e3700fad7efe6f3e2de0ced305c956e7d8ab369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beats</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a546aff7fb3efe57b1bded52c57e3700fa64185d2346f83f91caed7d860b69b5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackComp</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a7480caf9ec7016a2d506921df9e5f8d9</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackComp</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a99deb2c050a41ec3cea2646f4b3cbbc1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a3d7b7de9aad91676f1e5c241bd1a603c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TimeFormat</type>
      <name>getTimeFormat</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ab58873096a734c709098c2d09bb21f02</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeFormat</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4a722a3b43b4ff26ff3b6e911828a250</anchor>
      <arglist>(TimeFormat t)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditTimeRange &gt;</type>
      <name>getNonMuteTimes</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a538b3f5253b55235f5b36711fbf6f625</anchor>
      <arglist>(Track &amp;, double crossfadeTime) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getTimeRange</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ad77b13c99988c3c3739ef57e1d97ddf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0ee13da2a7a211f54d22d6e41a3a06b7</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSectionTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a232df8d877e0ef4764d2a89604c03ed8</anchor>
      <arglist>(CompSection &amp;, const Track::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a473c2eb8b352116c58449c10f831f193</anchor>
      <arglist>(CompSection &amp;)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSectionToEndAt</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a9f4602f35dbdbf0b515cd06050f55151</anchor>
      <arglist>(CompSection *, double newEndTime)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0f9f9ef08a7dc50c66966d635839210f</anchor>
      <arglist>(CompSection *, double timeDelta)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSectionEndTime</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ae2df1ef78268d41e085cb62b8eddf517</anchor>
      <arglist>(CompSection *, double newTime)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeSectionsWithinRange</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a2ac1f1922917d1f6aab8b91ac3686e3a</anchor>
      <arglist>(EditTimeRange timeRange, CompSection *sectionToKeep)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a1d8db2ecf354035fff6f7d2203d4e513</anchor>
      <arglist>(EditItemID trackID, double endTime, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>addSection</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a198b122e4c7fd1feccfb0d3a803a2a14</anchor>
      <arglist>(Track::Ptr, double endTime)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>splitSectionAtTime</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a421efd7988efc08a624a28bf6e5e8820</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>findSectionWithEdgeTimeWithin</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>af5d4716ccd9377c1c767a0b36ea1d7bb</anchor>
      <arglist>(const Track::Ptr &amp;, EditTimeRange timeRange, bool &amp;startEdge) const</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>findSectionAtTime</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a26fd99217f89f544c7ae5b8a92e6012d</anchor>
      <arglist>(const Track::Ptr &amp;, double time) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Section &gt;</type>
      <name>getSectionsForTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>aab577b641a065d6a5b0bad71f0be8671</anchor>
      <arglist>(const Track::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4526c9d3eba03ec730d689b839d0ccd1</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a41cf8ff62769fd2870e0544342c30044</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a572ff5dd3444713d3671428bd41750d9</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ada4bb8f947c4d4ef6d6c13663508fea3</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a44b36adcc05c9846b9fd29d3f79619ee</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a58116f27fa9ad875a8833a38b0b4a228</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a54ad82579aa83404ee257715f1cccd93</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackComp *</type>
      <name>createAndIncRefCount</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a2f8c6b9c20c18bdafce825e27ae43e58</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; EditTimeRange &gt;</type>
      <name>getMuteTimes</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>abe8e110ee3a134c71e31b57dd0ea02d7</anchor>
      <arglist>(const juce::Array&lt; EditTimeRange &gt; &amp;nonMuteTimes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>getSourceTrackID</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ab4c7fc214e6fb4f76a3c608ad08e6a1a</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSourceTrackID</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a96d2aa36a678872a71490a01e90be7fb</anchor>
      <arglist>(juce::ValueTree &amp;, EditItemID, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a503c56319aa4229aeb9e79d8d6f9e789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a992383238bceb54e893ba170c80e943e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ae49d4585c3d86af1524662c4fa3fcd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>includedColour</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a97d3989797c08ad2d00c4c83e09ef6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>excludedColour</name>
      <anchorfile>structtracktion__engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a3ed58f32e5f94a741825fa0d00c2e294</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackCompManager</name>
    <filename>classtracktion__engine_1_1TrackCompManager.html</filename>
    <class kind="struct">tracktion_engine::TrackCompManager::CompSection</class>
    <class kind="struct">tracktion_engine::TrackCompManager::TrackComp</class>
    <member kind="function">
      <type></type>
      <name>TrackCompManager</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a216c16ffd9f041215fc6d4c830a3058f</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackCompManager</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>af317cf347cda614b785289f764f1ee98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>ac33c4d33923565762669ac410f164094</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumGroups</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a6b36121cd641694a4e236252f2742bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getCompNames</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a6509507ab74538b71338eac0da819542</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCompName</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a1f6943ddb90d24b54b6b1b4170d5195b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompName</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a942338cb03e9d9fb6a465988bd2c96a9</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addGroup</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a0e6b856873c4d2960f8fa3ba15d3b59c</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGroup</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>aa1864b94b4eba5dae51084bc2f07b20d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTracksInComp</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>ac95eb749eb662cbfff0cceed7920608a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>TrackComp::Ptr</type>
      <name>getTrackComp</name>
      <anchorfile>classtracktion__engine_1_1TrackCompManager.html</anchorfile>
      <anchor>ab367074e1c79ba84a49f4a01c2b13411</anchor>
      <arglist>(AudioTrack *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackInsertPoint</name>
    <filename>structtracktion__engine_1_1TrackInsertPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>ab2ba02c4483c4a1e3d14daa4192d230c</anchor>
      <arglist>(Track *parent, Track *preceding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>ab3ac67689c0d37a607b6ace71c8c9d21</anchor>
      <arglist>(EditItemID parentTrackID, EditItemID precedingTrackID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a8662e3ddb57b16ca49278e3f50133f3d</anchor>
      <arglist>(Track &amp;currentPos, bool insertBefore)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a1341b42a0bad72f7de6ca5f7536c712a</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>parentTrackID</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>af48a5cf508481f81c3ed03781d9ba40a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>precedingTrackID</name>
      <anchorfile>structtracktion__engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a5524c7719974204f8ab408ee148277be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackItem</name>
    <filename>classtracktion__engine_1_1TrackItem.html</filename>
    <base>tracktion_engine::EditItem</base>
    <base>tracktion_engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a3f25eeb14a154b5ca7f8887494fa564f</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564faad921d60486366258809553a3db49a4a">unknown</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fab2d7d7656eb4e5153688637c8fbf7b49">wave</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564faa5f4ed7e858bf18cc1f2c0e35e7301e7">midi</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fade95b43bceeb4b998aed4aed5cef1ae7">edit</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fa2764ca9d34e90313978d044f27ae433b">step</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fab272bda9bf0c1cdcba614b5ed99c4d62">marker</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fa8ee0b79fb35b0efe85b44c0ee243f8d5">pitch</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fa61bb438f543e9b31452d35841573a702">timeSig</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fadb6d9b451b818ccc9a449383f2f0c450">collection</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fa421b47ffd946ca083b65cd668c6b17e6">video</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fafb89b9c2b78261ef2ab506e30d9c84f7">recording</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fad277c74c6c67461c562bdc2051681029">chord</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TrackItem.html" anchor="a3f25eeb14a154b5ca7f8887494fa564fa6f86810cd8a76fcf25984c82cc40c219">arranger</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackItem</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>ae4f639d6bc1574947fedd1cb71755a48</anchor>
      <arglist>(Edit &amp;, EditItemID, Type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackItem</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a28d7d18050ba6558d027a8119f5ebfbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>ac93af4dd4fc312b77587150e2db12967</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGrouped</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>af88bf1ed1dd1b5ae842eba186c39e88d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getGroupParent</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a3b4445c9c3de9362d33e9b30c11bbfc6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>ab8501f832b1d3c643597e6d55330a2ba</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a370965a10caf924bae19f55b0ff9b75c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a2113686ee77097d3b86cf51816626c44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getContentStartBeat</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a066a4a327d78346968202990c0f2ad7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndBeat</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a810f904e78fff07031fc7b195735a6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthInBeats</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a504bce4a0672af21a873a5489aa4063c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeOfRelativeBeat</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>aaae5d888c030637eeb3a7883cf990c46</anchor>
      <arglist>(double beat) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatOfRelativeTime</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a00e20db0c060314cce359af67acbb7db</anchor>
      <arglist>(double t) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffsetInBeats</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a30851910a58682400a6d850b74108a6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getTrackID</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>ae4202eb1cd42f782b37dfae549b76c88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>typeToString</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a6a21dd32bc747b00c34e4020f2ed7903</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Identifier</type>
      <name>clipTypeToXMLType</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a75846be530497b7fb96ea7c8a588b31b</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackItem::Type</type>
      <name>xmlTagToType</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a79f4633cd662ef7b133f61359940a220</anchor>
      <arglist>(juce::StringRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackItem::Type</type>
      <name>stringToType</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a0a6d20767f5a03eb583fe67f58fbc3da</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getSuggestedNameForNewItem</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a497028e77c41c612169b3bb9f33667ab</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortByTime</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>ae63192af60220cc6481cf06262d45b49</anchor>
      <arglist>(ArrayType &amp;items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stableSortByTime</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a6035c2a88d14c657becc84fc9747b25c</anchor>
      <arglist>(ArrayType &amp;items)</arglist>
    </member>
    <member kind="variable">
      <type>const Type</type>
      <name>type</name>
      <anchorfile>classtracktion__engine_1_1TrackItem.html</anchorfile>
      <anchor>a718d566ce1a885f3302067ca27807931</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackList</name>
    <filename>structtracktion__engine_1_1TrackList.html</filename>
    <base>ValueTreeObjectList&lt; Track &gt;</base>
    <member kind="function">
      <type></type>
      <name>TrackList</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ae2475e9a3d314ea2ba7acda4ad3fd773</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackList</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a01d1d3c0531a7c902495b2934c369d19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackFor</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a6a7621e9d7c7cc6343a0900e64fd402d</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visitAllRecursive</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ad4bfb695817832402f7bfcfb67bcf31c</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTopLevel</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a148582762f0ea8f72f0980f397930f59</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracks</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>afed637352b41c055230e2f3db084bf70</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;, bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ab67419006a6be2c201de9f335ce93b38</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a1d3f897821aef4608a1a3b9d1ad8292c</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a3b0765d824270d535fc206dd290aeb4c</anchor>
      <arglist>(Track *t) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>aca82be4fe9c872575986f15ddac3483d</anchor>
      <arglist>(Track *t) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a8f0cbf287450e3590c29f18edf901253</anchor>
      <arglist>(Track *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a904fcc66713f274c14e7960698be917c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMovableTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a0cb9733df924806b11c9a345c2b13ac5</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a02fc55d5a16b2b0eb53700b0fbc5283c</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isChordTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ae161cb74fbf68dd842bb05f47d72f66a</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ad20a92bf8c9b7d1b7b0cb66ec58f3eb4</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTempoTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ab1129d81311930a428fd0b7dc60c613a</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMasterTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>aee687133a58b6b9ac210d0230824c8b2</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isFixedTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a54317744994818091517a502b5355205</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ab951b2f835c0d757f4731c393e516a5d</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTrack</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a0e497d4db3a399a9f21ca06081594f06</anchor>
      <arglist>(const juce::Identifier &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasAnySubTracks</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>adafdd9046c6cda39a6ace4a4b097b7bc</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortTracksByType</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a03f21b7cc0412bfcdde9aa85b45ba9a1</anchor>
      <arglist>(juce::ValueTree &amp;editState, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>a1a973b8ea16a0d34012f5dd5e0751987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rebuilding</name>
      <anchorfile>structtracktion__engine_1_1TrackList.html</anchorfile>
      <anchor>ae7ec2a26ee08e6e99ef3bc0b842ea405</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackMidiInputDeviceNode</name>
    <filename>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base protection="private">tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>TrackMidiInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a3c4cf90f82132a0be1969a34ad3c4621</anchor>
      <arglist>(MidiInputDevice &amp;, std::unique_ptr&lt; Node &gt;, ProcessState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a296c08cf20ba87c44156d5ba1366aec7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a3e87f1f4375a1100516b90535d74c1c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a1606abf433119bd956a2d104ad44f468</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a771cbaa4e4c00447a343956f89e9e4e2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a288eaf3e1d45ce983f01a5ad858bcb6a</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackMuteState</name>
    <filename>classtracktion__engine_1_1TrackMuteState.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackMuteState</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a013fd152064667bfac0a0e5db33abf11</anchor>
      <arglist>(Track &amp;, bool muteForInputsWhenRecording, bool processMidiWhenMuted)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackMuteState</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>aa10e44b4cfecfbe43987a9a787d7b3b5</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a47bfaa54e12a16961eb6668398de7141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeAudible</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a547b76768ec160440cf69aa40f423e70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackContentsBeProcessed</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a784643c7544deeed8881148ca8eddf62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackMidiBeProcessed</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a5d3c53077c565347991bc201eee53ce7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasJustMuted</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a5c2f409a6b8710a8acdcc215e61528ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasJustUnMuted</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a477fae22c6d6c6e4243c4d1e5ec20ccf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getItemID</name>
      <anchorfile>classtracktion__engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a84b1dc5c99563b84517afbd6a57d1c43</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackMutingNode</name>
    <filename>classtracktion__engine_1_1TrackMutingNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TrackMutingNode</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a9afd8ea1a093398623041e3ef2343b16</anchor>
      <arglist>(std::unique_ptr&lt; TrackMuteState &gt;, std::unique_ptr&lt; tracktion_graph::Node &gt; input, bool dontMuteIfTrackContentsShouldBeProcessed)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a5ca1b0bbf8b187b48352984ebf4fbd58</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>aa334d4eb3faa20341b34ade68811e274</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a0ac615448e47ff053977c19f854fb50c</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a11a3344aae4999aaeefde392b433a6bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a44604c5f237eb0e7ed57893a04352f80</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a34a4e9e6ea4419bc0365fd5b71823677</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackOutput</name>
    <filename>classtracktion__engine_1_1TrackOutput.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackOutput</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a11cf6f92a7c6f9d9b1300e1b68e7b666</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackOutput</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>af9440aa2154b2d1b2233553937c43a00</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>ab6adaad214d11ab76eac1df8ab7d8214</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a47c3bd9a66a4aebf1f28ae6579298b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateOutput</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a5b2cdfb43d919d2f5ead351a22cecd56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>outputsToDevice</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a45fe8c5922f38147ac4e7e4732dfc5ad</anchor>
      <arglist>(const juce::String &amp;deviceName, bool compareDefaultDevices) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputName</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>acfe9fd0490b6d8729c1b64475ac810cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescriptiveOutputName</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a78d8adfb6077a0794a0729a3ff784b11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getDestinationTrack</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a92fb6ee93b6e262b13f64981df3dcc98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>outputsToDestTrack</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a765036a7ce94fbc3baf76407db773b98</anchor>
      <arglist>(AudioTrack &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>feedsInto</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a9d32212da6726950f6aeb395984eee64</anchor>
      <arglist>(const Track *possibleDestTrack) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>getOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a350a0071b6457adc03928f98d3327ee5</anchor>
      <arglist>(bool traceThroughDestTracks) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputByName</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a980aa5546295b6df4cb213a834306561</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToTrack</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a435e270308c4688187a496fa9347a43e</anchor>
      <arglist>(AudioTrack *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToDefaultDevice</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>af9d995e868c387eba265568b47de1be4</anchor>
      <arglist>(bool isMidi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayAudio</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a35b7f4f68f746f61bedb1e030c503fbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayMidi</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a5f38b6f0a2ad07a8f7ea618528890938</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a5fe8659a17b890ce5b2a404c8be89bc4</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getPossibleOutputDeviceNames</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a0ccb0d6ae7d8bccfc4e0afe860d9fe5c</anchor>
      <arglist>(const juce::Array&lt; AudioTrack * &gt; &amp;tracks, juce::StringArray &amp;s, juce::StringArray &amp;a, juce::BigInteger &amp;hasAudio, juce::BigInteger &amp;hasMidi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getPossibleOutputNames</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a2008ecb3113cdddf80f5ffa672892026</anchor>
      <arglist>(const juce::Array&lt; AudioTrack * &gt; &amp;tracks, juce::StringArray &amp;s, juce::StringArray &amp;a, juce::BigInteger &amp;hasAudio, juce::BigInteger &amp;hasMidi)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1TrackOutput.html</anchorfile>
      <anchor>a7ebfed8adef2b63e94f1b0a0f3b0858c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Clipboard::Tracks</name>
    <filename>structtracktion__engine_1_1Clipboard_1_1Tracks.html</filename>
    <base>tracktion_engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Tracks</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a3405d1f5dcfbaa49e07eee94e7c18ad3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tracks</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>ac8d0387c88311be44d89e55c3889751c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a0d84187021c857f035a8429441789fca</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>adff924cef562c9e5af1cea090c66b5fa</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a8499c409cfdb40fdd826f7f08db4cedc</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>tracks</name>
      <anchorfile>structtracktion__engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a7afe0456081cb8e7e9479067a3bd1aa6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TrackSection</name>
    <filename>structtracktion__engine_1_1TrackSection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>merge</name>
      <anchorfile>structtracktion__engine_1_1TrackSection.html</anchorfile>
      <anchor>a7a2f21f865117ed94d7666617ec04589</anchor>
      <arglist>(const TrackItem &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; TrackSection &gt;</type>
      <name>findSections</name>
      <anchorfile>structtracktion__engine_1_1TrackSection.html</anchorfile>
      <anchor>a220c1eb489b8c8975b9a296b2c3c301d</anchor>
      <arglist>(const TrackItemArray &amp;trackItems)</arglist>
    </member>
    <member kind="variable">
      <type>Track *</type>
      <name>track</name>
      <anchorfile>structtracktion__engine_1_1TrackSection.html</anchorfile>
      <anchor>af6de9f9e55ad8c555989860b1755719d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditTimeRange</type>
      <name>range</name>
      <anchorfile>structtracktion__engine_1_1TrackSection.html</anchorfile>
      <anchor>a4b0f5bbe8431a10a6de6f4b923490de8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TracktionArchiveFile</name>
    <filename>classtracktion__engine_1_1TracktionArchiveFile.html</filename>
    <class kind="struct">tracktion_engine::TracktionArchiveFile::IndexEntry</class>
    <member kind="enumeration">
      <type></type>
      <name>CompressionType</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a101d98d3e4e89e1b2bec7ee4bb0781e1</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1aadcdbd79a8d84175c229b192aadc02f2">zip</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1a90ac1172c9ea271784a5efb8fa7aa101">lossless</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1ade14355369d8036ad58bc2ecce5c5bc8">lossyGoodQuality</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1a7c5bc43bf45352a46d70187a91fde8a5">lossyMediumQuality</enumvalue>
      <enumvalue file="classtracktion__engine_1_1TracktionArchiveFile.html" anchor="a101d98d3e4e89e1b2bec7ee4bb0781e1a995fa6c08d1dae45c695943215dc1a84">lossyLowQuality</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TracktionArchiveFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>aa9b79d85338dd45b9ef5677abaee25ca</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TracktionArchiveFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a4bf63c046ed69f59ca032236500b3518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidArchive</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a9026d8a32c72505c89fecc6b1bcf4644</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a4d06aef5852d8220f53c37d13a73680e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFiles</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a500c3abc46f4a0737bd3bb2fcf5f8acd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOriginalFileName</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a212ee60ad8cfb1b4f4bb2cc5326fc6c0</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a4829dd06846d483c843dc7dc58c1764f</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::InputStream &gt;</type>
      <name>createStoredInputStream</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a5d412730329f8c8f5010930d58e82def</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>aa91c6b04657ab5d3bc7edb3b4b7a70c2</anchor>
      <arglist>(int index, const juce::File &amp;destDirectory, juce::File &amp;fileCreated, bool askBeforeOverwriting)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractAll</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a321e36a9a7041f453b0f19e37f92d910</anchor>
      <arglist>(const juce::File &amp;destDirectory, juce::Array&lt; juce::File &gt; &amp;filesCreated)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractAllAsTask</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a0b0ead82668475801f772e087027185d</anchor>
      <arglist>(const juce::File &amp;destDirectory, bool warnAboutOverwrite, juce::Array&lt; juce::File &gt; &amp;filesCreated, bool &amp;wasAborted)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a4921414a2ea824a6dfe4da460b17c2e7</anchor>
      <arglist>(const juce::File &amp;, const juce::File &amp;rootDirectory, CompressionType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFile</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a24960a8e85ec9bb1db8cf34e283e4bba</anchor>
      <arglist>(const juce::File &amp;, const juce::String &amp;filenameToUse, CompressionType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileInfo</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a09237ea26cb545d7ec7bdc9b04592590</anchor>
      <arglist>(const juce::String &amp;filename, const juce::String &amp;itemName, const juce::String &amp;itemValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classtracktion__engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a56b80c94b0994c7feeb665f3cdf09652</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TracktionEngineNode</name>
    <filename>classtracktion__engine_1_1TracktionEngineNode.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionEngineNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a5bf56799814d644f4bac164592f3ddf6</anchor>
      <arglist>(ProcessState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TracktionEngineNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a630e0249781df63faad7df1374597e46</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamples</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a7337b3924b1d3cb05e9f0d8287e362de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>ac5030ba3c55e5ebe133b729c8968c5cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getTimelineSampleRange</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>adb3a9b9b9667ccd0a1da3c929515d9a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>acf0ee7388067bcf349d823be0f39dc1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getReferenceSampleRange</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a15e755a87ca0ad28f6d5bd25832d3a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::PlayHeadState &amp;</type>
      <name>getPlayHeadState</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a4217ac0989b4690839f6c62ea132ec93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::PlayHead &amp;</type>
      <name>getPlayHead</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a3bbd155e377768ade7c240625d4ce273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ProcessState &amp;</type>
      <name>processState</name>
      <anchorfile>classtracktion__engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a27b6be49cca6e09ad6a82d355c6dbd2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TracktionNodePlayer</name>
    <filename>classtracktion__engine_1_1TracktionNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>aac8d66ae6c77cd239e60e1df81a3df73</anchor>
      <arglist>(ProcessState &amp;processStateToUse, tracktion_graph::LockFreeMultiThreadedNodePlayer::ThreadPoolCreator poolCreator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TracktionNodePlayer</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a5bb989ac7c0ce584ef9de88af1f448b4</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; node, ProcessState &amp;processStateToUse, double sampleRate, int blockSize, tracktion_graph::LockFreeMultiThreadedNodePlayer::ThreadPoolCreator poolCreator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a0dfd915bd6aa40a658ab11d6446bba08</anchor>
      <arglist>(size_t numThreads)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a2f51f44f30d0e0a2bb77543d13337de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>ac7ef09c2d01620c7a78836025afd65c0</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>abd6c54f95107b2f9d652eb47c4096413</anchor>
      <arglist>(std::unique_ptr&lt; tracktion_graph::Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a8cac50fa917c236240f8b209d6179527</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a7804a6030007f3413f5bbee65f0a89c4</anchor>
      <arglist>(const tracktion_graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a9c7247832565a60179476af22f1b4eb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>ad6c6250e592372fe594a35943798ffcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePooledMemoryAllocations</name>
      <anchorfile>classtracktion__engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a1b78c0e903ddbf586d27efc7a9a639fe</anchor>
      <arglist>(bool enablePooledMemory)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TracktionThumbnail</name>
    <filename>classtracktion__engine_1_1TracktionThumbnail.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionThumbnail</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a5472d104082aceab910b01e0f2338f50</anchor>
      <arglist>(int originalSamplesPerThumbnailSample, juce::AudioFormatManager &amp;formatManager, juce::AudioThumbnailCache &amp;cacheToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TracktionThumbnail</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a5a8c1632f9d31a5c55b1ecd21f52585b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a418a45576583932c5c7d7f61bb409963</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannelData</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a2ecba1c2ece2dfbae9189c9e96b1c2a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>ae84901c3bf44076033418120620a8337</anchor>
      <arglist>(int newNumChannels, double newSampleRate, juce::int64 totalSamplesInSource=0) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createChannels</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a3711bfa326c3697285ad9340f28cd21d</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFrom</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a23c65ce63951e567f2dcc3d5e6b4a1b1</anchor>
      <arglist>(juce::InputStream &amp;rawInput) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTo</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>ac1f9e54558bd620b75f7db7a71b8bc94</anchor>
      <arglist>(juce::OutputStream &amp;output) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSource</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>af356e3c123918d0285ae299b79e512d0</anchor>
      <arglist>(juce::InputSource *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReader</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a4e002349acd082fb736f7b4bdbdb5f15</anchor>
      <arglist>(juce::AudioFormatReader *, juce::int64) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseResources</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a7d2e60a6a2ffb7dd82f574295f81a90e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::int64</type>
      <name>getHashCode</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a575795ffb9d20f547e01283eda005341</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlock</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>afd9fbd76171fedd2a69725a9b139d6c4</anchor>
      <arglist>(juce::int64 startSample, const juce::AudioBuffer&lt; float &gt; &amp;incoming, int startOffsetInBuffer, int numSamples) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a411318bf3792a75e594aec9cc50b843b</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalLength</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a5edbd1dcf6b72ed991167806fdf351df</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFullyLoaded</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a6f665c5cba1788296f032aef4acda191</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a5d7bb57049d4b1816c6aa695c4d1f674</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::int64</type>
      <name>getNumSamplesFinished</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a027ba2c8155c425b2d0ab6f52133b6d0</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getApproximatePeak</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a7e1cf4cd9886c19e2db0aac9df4b472f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getApproximateMinMax</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a23beb348f1bc0e48017d0ddfa1874fd8</anchor>
      <arglist>(double startTime, double endTime, int channelIndex, float &amp;minValue, float &amp;maxValue) const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChannel</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a9a8479d41e28af3e92bcfb6ec1ba30da</anchor>
      <arglist>(juce::Graphics &amp;, juce::Rectangle&lt; int &gt; area, bool useHighRes, EditTimeRange time, int channelNum, float verticalZoomFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChannels</name>
      <anchorfile>classtracktion__engine_1_1TracktionThumbnail.html</anchorfile>
      <anchor>a0255ea4c4e182eb886e84121a5280e00</anchor>
      <arglist>(juce::Graphics &amp;, juce::Rectangle&lt; int &gt; area, bool useHighRes, EditTimeRange time, float verticalZoomFactor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TrackWaveInputDeviceNode</name>
    <filename>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TrackWaveInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a4fa8aaee404efd63e8ac5c48ecf0fe06</anchor>
      <arglist>(WaveInputDevice &amp;, std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>aa2531932e09caa6e6b9ed3d4f258f5d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a3cf71353407d6e583fe126a654c4b9e2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>af84c15a0a925f4039b2ab263c5d2a618</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a04b7cb78c003952f55e64ea11f54d70e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a2d76934226be60e3b6148d090a12ab73</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::TransparentToMouseInTrackItemComp</name>
    <filename>structtracktion__engine_1_1TransparentToMouseInTrackItemComp.html</filename>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TransportControl</name>
    <filename>classtracktion__engine_1_1TransportControl.html</filename>
    <class kind="struct">tracktion_engine::TransportControl::Listener</class>
    <class kind="struct">tracktion_engine::TransportControl::ReallocationInhibitor</class>
    <class kind="struct">tracktion_engine::TransportControl::ScopedContextAllocator</class>
    <class kind="struct">tracktion_engine::TransportControl::ScopedPlaybackRestarter</class>
    <member kind="function">
      <type></type>
      <name>TransportControl</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ae159663c7010ec4bd46da26db58062c5</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransportControl</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ad92327f3cc3132b4c38c8d268f5df63e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a7a870e8df78bade9605b8168e4e55cff</anchor>
      <arglist>(bool justSendMMCIfEnabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playSectionAndReset</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ad6b42fe5d9ed2d05c43f15da68bce730</anchor>
      <arglist>(EditTimeRange rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a0b6dcdd42fa635c5ce5f9c384e4a0033</anchor>
      <arglist>(bool justSendMMCIfEnabled, bool allowRecordingIfNoInputsArmed=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a9c3f5713faa4d28f154bf0c67880d89e</anchor>
      <arglist>(bool discardRecordings, bool clearDevices, bool canSendMMCStop=true, bool invertReturnToStartPosSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopIfRecording</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>add8fd7a5f99002b4a671ccfbffd5b3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>aa4ff5304cec4c7f0daa289bead9ea118</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::File &gt;</type>
      <name>getRetrospectiveRecordAsAudioFiles</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a5840469197a6ecb3a4bd3d2e06d3a748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syncToEdit</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a7c5155d8b41ba96c3e50c168d25b6cc3</anchor>
      <arglist>(Edit *editToSyncTo, bool syncToTargetLoopLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a2789400ce74395c9003a60465856a0c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecording</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>aa4106d0c769426e78a1d89e92a7cdbfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSafeRecording</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a62664f93dbee721c5bf6e4329b1c88ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopping</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ac80b44a2eefa3c62ad23db4257d55026</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeWhenStarted</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ae57647f221bbe2b777e9e3a9902f697c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentPosition</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a33b6350e76272c7f2367bd0d9a82f1cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentPosition</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a4ce90c654d6d730768cff4a4dac517d7</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserDragging</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a76dc0068694459bb6ff3adbaf91cf184</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a7165e08005243f1cea5b20a5b902b8f0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPositionUpdatingFromPlayhead</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a2c7a9c4e3116852ca69270bd5936a0f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopIn</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a5e19079c406a3f9b994fdc17857c669a</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopOut</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a5ca017c50f3ee004737d356aa84539c2</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopPoint1</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a725bf67bb815d3c825fbe45ba24740b7</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopPoint2</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ad38958e30b408eb1ff02095dd716bded</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ae29e0faf47fca8f53ca21b0e03d09995</anchor>
      <arglist>(EditTimeRange range)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>af197db63c76715fdea79658fd5854d8d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSnapType</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>afea4a0fb82ede38d94c194b46588f297</anchor>
      <arglist>(TimecodeSnapType)</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapType</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>abf0889a7397d9b11735318d014a4fb6c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditPlaybackContext *</type>
      <name>getCurrentPlaybackContext</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ababdc5853a447520fcf0d9da7aa51930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayContextActive</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a4fb585bcf9e2c4f53f0ab12edde6b0eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureContextAllocated</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ac1d42a020ce0dae7c7207cc8e77e88f3</anchor>
      <arglist>(bool alwaysReallocate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContext</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a633f4dbe962fdbe83a473caab7523a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerClearDevicesOnStop</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a677bb972df7eb34e69dd3018cc508f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceOrphanFreezeAndProxyFilesPurge</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a2d0bd0ef68327210327485561757ca98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRewindButtonDown</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a80777c186b3021889f6e3b69373c6e0d</anchor>
      <arglist>(bool isDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFastForwardButtonDown</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a4bd9fd4129a9f765345785e287962a93</anchor>
      <arglist>(bool isDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a7cad88bc494b88e953a56f59d5264113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a4e3408a673f3073e38d73697ef3dc166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editHasChanged</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a5cca7b3af5d955bb0e64ae07c3a59e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowedToReallocate</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>acdcc276d0aaacaf1fc68e3ac841daee4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a9f7e86a5af44b26d64de969ff499a212</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a523181358c6a5718068040c8826a45be</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRecordingFinishedListeners</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a77d604b70a0b166c8ebd54d69a96693c</anchor>
      <arglist>(InputDeviceInstance &amp;, juce::ReferenceCountedArray&lt; Clip &gt; recordedClips)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; TransportControl * &gt;</type>
      <name>getAllActiveTransports</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ae0aa6ca073ca12bb8e305d6b837590ac</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumPlayingTransports</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a0ba563940f3d4bee96940ac138dc0456</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopAllTransports</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>ad6a01300cc381b57cf724d5a3e3fd931</anchor>
      <arglist>(Engine &amp;, bool discardRecordings, bool clearDevices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::unique_ptr&lt; ScopedContextAllocator &gt; &gt;</type>
      <name>restartAllTransports</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a06540294d976cca3d6974cacf71aeaf8</anchor>
      <arglist>(Engine &amp;, bool clearDevices)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>af62e20ea56b0b134dd3696f9e305858a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a4c6d065fba19fea2444f453aeab5c355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a77a4b7b74e5f0a9b18e2294b1ce351a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>position</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a673fa9caa61a0e4e259f3aa8132bcc93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopPoint1</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a2fc3d12a5b4fa29d1152cc1b7b8638c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>loopPoint2</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a88613a20aa81b9c8af9ee1663e13eda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>scrubInterval</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a24ce0f3c9406a3de566e95ad462cbc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>snapToTimecode</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a7391051ad9a6bc0a5ebe9da1fec242b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>looping</name>
      <anchorfile>classtracktion__engine_1_1TransportControl.html</anchorfile>
      <anchor>a73bf5ccb0e2a19ebd0c597d2b913554c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::TranzportControlSurface</name>
    <filename>classtracktion__engine_1_1TranzportControlSurface.html</filename>
    <base>tracktion_engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>TranzportControlSurface</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>abba9116e7e084744c4baa48b5a8cf79f</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TranzportControlSurface</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>aaf5f5568cca13561e35538c3dee4b657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>af278d53239e142efabc76f24287c42d2</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>afbeffdddde12d51c2d068a40df3d8fbe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a35469cfd2782778026b0744a356e9489</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a6d29ecc58f2ee3a903206ab85928645a</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>acdbd97cafb1d45642cf622d74d1e037d</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a357b56ed10c0022e3389ec1f72e2cfff</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a5a12405c0d0a66b75b731edb5a8527c7</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>aafe8391699650d68e9270313dfb4c4f0</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>aba2628ed965df6b2767b083787bf20ca</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a696e9b41aeba6f810b773b75501b063b</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a1c75947975bb9704a86835872a9084bf</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a7dedb2944ae3226e9a66fa78f8da827a</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a89e0b4e7cf47abf7f74ef278d8a70050</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a64c67c6cd072b33aa39214bfb2a3e941</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion__engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a36a2a84292d4b6ce83f1083d6bf7377c</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::AutomatableParameterTree::TreeNode</name>
    <filename>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeNode</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>afb36aa49acac9269a5a9c280eeec476d</anchor>
      <arglist>(const juce::String &amp;groupName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeNode</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>aeee9b07cd568ded87807855d473192db</anchor>
      <arglist>(const juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt; &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSubNode</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>adadee4bc4f112ac509512f761070dfd1</anchor>
      <arglist>(TreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getGroupName</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a4ec4b938e363339822383b0f9ef452be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a917f458963d9cbd88a41ceafb319835b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt;</type>
      <name>parameter</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>aad01a9a4f7df1af32c24c4b2986df6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeType</type>
      <name>type</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>ab338d7be9cf33ded3a4bac65642c61d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; TreeNode &gt;</type>
      <name>subNodes</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a34fe7e0f6aa7d199be45b74518172d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TreeNode *</type>
      <name>parent</name>
      <anchorfile>structtracktion__engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a4f0f5df4b18edd0070a04fe6233f6af8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::UIBehaviour</name>
    <filename>classtracktion__engine_1_1UIBehaviour.html</filename>
    <member kind="function">
      <type></type>
      <name>UIBehaviour</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ab590f06641d6a1834e60de321e1ba5b1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UIBehaviour</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a59f53e1b02f460375c40010202508926</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Edit *</type>
      <name>getCurrentlyFocusedEdit</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a707974ef6a086a07cc937a4033056ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Edit *</type>
      <name>getLastFocusedEdit</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a82e0502dfbf56c033f1fa2cca8496202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Edit * &gt;</type>
      <name>getAllOpenEdits</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a9fb5a6f4d886addaf656f51597400c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEditVisibleOnScreen</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a59932e27a08bed116037fe01a1a71078</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>closeAllEditsBelongingToProject</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a996c6128e10cef01a91fc59a19613dce</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>editNamesMayHaveChanged</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a420a2757de62cbb7735758a95eee29dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionManager *</type>
      <name>getCurrentlyFocusedSelectionManager</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a854326ff53060cfda20c20a34b0d6468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionManager *</type>
      <name>getSelectionManagerForRack</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a617343d14399446917581136d5b0950e</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paste</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a10da8728caa55a714f65a0a244a5ddeb</anchor>
      <arglist>(const Clipboard &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Project::Ptr</type>
      <name>getCurrentlyFocusedProject</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aef6b9928c672860449e874b2b7554247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectProjectInFocusedWindow</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ac4dbd47f47cec838032ed991dd812f4f</anchor>
      <arglist>(Project::Ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAllProjectItemLists</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ade4b11cdfbc441ac14aa22c82bdddd61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ApplicationCommandManager *</type>
      <name>getApplicationCommandManager</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ab582a614f60821126a397db4462e692d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getAllCommands</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a304c34d9c8a27c6a10f7e297d31bb1f8</anchor>
      <arglist>(juce::Array&lt; juce::CommandID &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCommandInfo</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>afdbeebc7799c688565c63b99c843f754</anchor>
      <arglist>(juce::CommandID, juce::ApplicationCommandInfo &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>perform</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a8e3b13f5172eb323dc613e99a8d1acf9</anchor>
      <arglist>(const juce::ApplicationCommandTarget::InvocationInfo &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Ptr</type>
      <name>showMenuAndCreatePlugin</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a95b7adb20eab92b75f966f4573ec40c5</anchor>
      <arglist>(Plugin::Type, Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::Component &gt;</type>
      <name>createPluginWindow</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a87213e8195ed06aa0bc22162a432b577</anchor>
      <arglist>(PluginWindowState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recreatePluginWindowContentAsync</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a8c27473baff485d6effdff5f38377b26</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newTrackCreated</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a488ee608b6f6327a1db01fcc5c3e656a</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showWarningAlert</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a41970ec4efeca07a6121fe8be10d562a</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showOkCancelAlertBox</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a66393dfe992995bc903ee7ac2e03509a</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message, const juce::String &amp;ok={}, const juce::String &amp;cancel={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>showYesNoCancelAlertBox</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a1fcaf5906a964466741a67f3d5b195ef</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message, const juce::String &amp;yes={}, const juce::String &amp;no={}, const juce::String &amp;cancel={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showInfoMessage</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a0c1e6f9c15e27cf3ae2d41546aed913f</anchor>
      <arglist>(const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showWarningMessage</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ac66f828f4fa8402cc1a50db4f680fc5d</anchor>
      <arglist>(const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showQuantisationLevel</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af727194e495310db5b61787867ff5bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runTaskWithProgressBar</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a65bf8e76a3b28692580993ea33fc065f</anchor>
      <arglist>(ThreadPoolJobWithProgress &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBigInputMetersMode</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a66361e940779cbe5df87164d24f20852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBigInputMetersMode</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a21993f044b7f9f0074496a355708e939</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldGenerateLiveWaveformsWhenRecording</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a346fe85e448e907fb0558dbf47fe9d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSafeRecordDialog</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aeebf3115f9fe63e43b051742cefc7a7f</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hideSafeRecordDialog</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>abfea4122062f5143353fbd81ff4d8aaf</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showProjectScreen</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a430cb0ced33ae8b7eee8635c6ce0acec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSettingsScreen</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af4a9e784c622528a923c04a19eb2e94e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showEditScreen</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a03de42c6f579bd44f6fc1843a1954e09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideVideo</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a41a6fe8cddd548f341114e3b6cb27a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideInputs</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad0f9d428a8c5ffd60bcdb458b36c90f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideOutputs</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aef19194ff056aee9c5f495d930ccc05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideMixer</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a3362502cfa6e8da7f3a424e16080490f</anchor>
      <arglist>([[maybe_unused]] bool fullscreen)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>abee935689656dcf5493d83bbfe405dc3</anchor>
      <arglist>([[maybe_unused]] bool fullscreen)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aba5d16e4055964c5f210ff6ce2f81947</anchor>
      <arglist>([[maybe_unused]] bool zoom)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideBrowser</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a43fb443dcdaa8bed4269931bab45e766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideActions</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a11bc9522a90abce8710f1240b0612481</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideAllPanes</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a6574bbf17de600ce22ffabb4127f48d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleScroll</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a5515d232ca9cda9583000bc25688a6d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isScrolling</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a678eeccf0ab2d50f26c86db063c78b8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>performUserAction</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a54d1b3c246a1ff68d4f392e64c75b3fc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksUp</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a2554057a52038134412e11f746a0cbe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksDown</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a242c77966a9bef6b631df7fe4cc0d4e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aca36c1546a6d0f20549aaeaf131daa4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksRight</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a48e609bdf91193299afd955d19b19fa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelectedClips</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a07029106274d7f64f08a857f48435002</anchor>
      <arglist>(TimecodeSnapType, const juce::String &amp;commandDesc, SelectionManager &amp;, const juce::Array&lt; Clip * &gt; &amp;, bool automationLocked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelected</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a31b943c3fce59e0ab9d699ee2e56fee3</anchor>
      <arglist>(TimecodeSnapType, const juce::String &amp;commandDesc, bool automationLocked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelected</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ab3f749b8eb881d8201638158222f4585</anchor>
      <arglist>(const juce::String &amp;commandDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopPreviewPlayback</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad882f172b82c467de68780be0b7b3575</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetOverloads</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a03dc002761f66c1c77ee64774dfda995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPeaks</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a4b2dbc350f815df355a7dbc93e0e4547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomHorizontal</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a89829c1711341fbd5b34e7f04418f306</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomVertical</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ab0f69f3cc9c8367994ea73c60af5e0a9</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToSelection</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a2792aaa384bfaad7c1fe6d5c2bb67836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aaf512f2af37f9e1f55045039b15d28d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a238b55d0b0163a7be1f36330b3f20761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getEditingPosition</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a6404871d3b8bd5ee3cdefae8f6ba51a4</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EditTimeRange</type>
      <name>getEditingRange</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad5164e49679bc292857bfdc33a834782</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Track * &gt;</type>
      <name>getEditingTracks</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad72a616542b395bc662d5700a8be2117</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectableList</type>
      <name>getAssociatedClipsToEdit</name>
      <anchorfile>classtracktion__engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aa8eb4acc27a285e652eec6bacccb7231</anchor>
      <arglist>(const SelectableList &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::UndoTransactionInhibitor</name>
    <filename>structtracktion__engine_1_1Edit_1_1UndoTransactionInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>UndoTransactionInhibitor</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>abfe7709b4769d3eef69784269a539682</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UndoTransactionInhibitor</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>ae643f05c5c5ee79c29d68411c3933e18</anchor>
      <arglist>(const UndoTransactionInhibitor &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UndoTransactionInhibitor</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>a2800e480f6d105c2724b74e7ddec884b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ValueSmoother</name>
    <filename>classtracktion__engine_1_1ValueSmoother.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>afcce6df3a2e5e597cd47fecebf557ff1</anchor>
      <arglist>(double sr, double time)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>afaf3a664624be148d3ef11df83c73e96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a012c73779ad98848ffdd6a1c6f382f52</anchor>
      <arglist>(T v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aa5eee383e2452812f8f0397ad8065e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aa6e503a763e865ffa9d526a5026c603c</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getNextValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a6881d52f901e5fbdf37305f36ad7b688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueUnsmoothed</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a9f42b35b76f0bb5ee8beba3a5f5a6502</anchor>
      <arglist>(T v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueSmoother&lt; float &gt;</name>
    <filename>classtracktion__engine_1_1ValueSmoother.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>afcce6df3a2e5e597cd47fecebf557ff1</anchor>
      <arglist>(double sr, double time)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>afaf3a664624be148d3ef11df83c73e96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a012c73779ad98848ffdd6a1c6f382f52</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aa5eee383e2452812f8f0397ad8065e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aa6e503a763e865ffa9d526a5026c603c</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextValue</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a6881d52f901e5fbdf37305f36ad7b688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueUnsmoothed</name>
      <anchorfile>classtracktion__engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a9f42b35b76f0bb5ee8beba3a5f5a6502</anchor>
      <arglist>(float v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ValueTreeAllEventListener</name>
    <filename>structtracktion__engine_1_1ValueTreeAllEventListener.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>aaf7c1c2505eb04fff614b50155339103</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>af93f6549f20e5a99a7208fe5a6a8affd</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>ae272d29af1ef5890f50819aef4560db8</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a0fc1879eb087aa2822d5564fab19bb1f</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>aed95b9b481d5899d8e450e7913a13756</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a74604ff48d9835db084d7651444538fd</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a139e0ad90060a0dfd1671c10f511de5b</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::ValueTreeComparator</name>
    <filename>structtracktion__engine_1_1ValueTreeComparator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTreeComparator</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>a5ef85e01d083309a5b0cc5ee8b70ab65</anchor>
      <arglist>(const juce::Identifier &amp;attributeToSort_, bool forwards)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>aa4690d6e4cac3e79b456211c4edcbbaf</anchor>
      <arglist>(const juce::ValueTree &amp;first, const juce::ValueTree &amp;second) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>structtracktion__engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>a9af38abc5bc33607afab3120a061cfbb</anchor>
      <arglist>(const juce::ValueTree &amp;first, const juce::ValueTree &amp;second) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::ValueTreeObjectList</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const  *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const  *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ObjectType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(ObjectType *first, ObjectType *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ObjectType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CriticalSectionType</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; ClipEffect &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipEffect *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(ClipEffect *first, ClipEffect *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; CompSection &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CompSection *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(CompSection *first, CompSection *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; CompSection * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; EventType &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EventType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(EventType *first, EventType *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; EventType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; InputDeviceDestination &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceDestination *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual InputDeviceDestination *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(InputDeviceDestination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(InputDeviceDestination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(InputDeviceDestination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(InputDeviceDestination *first, InputDeviceDestination *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; InputDeviceDestination * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Modifier &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Modifier *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(Modifier *first, Modifier *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Modifier * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; ObjectType &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ObjectType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(ObjectType *first, ObjectType *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ObjectType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Track &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Track *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(Track *first, Track *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; tracktion_engine::MidiControllerEvent &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiControllerEvent *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tracktion_engine::MidiControllerEvent *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(tracktion_engine::MidiControllerEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(tracktion_engine::MidiControllerEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(tracktion_engine::MidiControllerEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(tracktion_engine::MidiControllerEvent *first, tracktion_engine::MidiControllerEvent *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; tracktion_engine::MidiControllerEvent * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; tracktion_engine::MidiNote &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiNote *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tracktion_engine::MidiNote *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(tracktion_engine::MidiNote *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(tracktion_engine::MidiNote *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(tracktion_engine::MidiNote *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(tracktion_engine::MidiNote *first, tracktion_engine::MidiNote *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; tracktion_engine::MidiNote * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; tracktion_engine::MidiSysexEvent &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion_engine::MidiSysexEvent *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tracktion_engine::MidiSysexEvent *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(tracktion_engine::MidiSysexEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(tracktion_engine::MidiSysexEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(tracktion_engine::MidiSysexEvent *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(tracktion_engine::MidiSysexEvent *first, tracktion_engine::MidiSysexEvent *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; tracktion_engine::MidiSysexEvent * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; WarpMarker &gt;</name>
    <filename>classtracktion__engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename juce::DummyCriticalSection ::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa67ed8c378970e4b769e37c01c399b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6056d39e523fd31b5b14d23782b6befc</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>afdc4bc819d9090716ee5daf463f9d81e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a127bd3cc22bf625df7f9c67a3e8479b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae0ed9546db0ba7f93d8de7e23ffa0034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a68cb48b1e9d04e2cae06defb5aae5f4e</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>at</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a344cbdb604dc76feb8ae4896880a82c3</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a520597493a832a013a9e1cb0c59e6821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac25baec91955e05e4750e5893e25e5b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0f3a1aa1981df6c392b21fe3aa1b7120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>end</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>abc5f6ac5d8e422fab90fb1c95e819231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a302418eae93530d0ead0b121142c8ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a11553632d1f53dd10d3f204f6028752c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab8cdc1b3db34ed43a13fa3f5f1aad6c6</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WarpMarker *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a0b1033dda2127bb117ec6fbd05abbd05</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa17261b81999e1f45aefe9adcd34fc26</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a418e0f7bfe54295d7fda4af2d1a8bb79</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4856df786c517ab4ac5f0b25ec7cba1</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6c0d1f2cd769af01b6e66487afa169c6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8cc373451fe35ae81d89ef1d4c364bae</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac1b4666495f4bf7468207ff1f4fbc3cd</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6fe123a5d31f4df9e5d87225c967fd5a</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a91b77c504cd9d408efdbf6ecdf62f515</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4b7a2168c3627b306516003740f2e4cc</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aa8cce8ab85bc887121f8a861e2a2e5b0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>aae30eae7977b71aeec686ec8e78604de</anchor>
      <arglist>(WarpMarker *first, WarpMarker *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; WarpMarker * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a992ab3d196ff71dd60f9d788e96b3d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad1011525b99110bd11b7dd25abb0f672</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab040d84d6fa32ae6274208dd5726996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a98546b5d82efb22650d9024a2eca4bbe</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab633af6f1f430c0fc6c8925871afd370</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a879ae00be299cc3804a73ae832d69ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion__engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab7daae817b12421e345c992b1319c873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VSTXML::ValueType</name>
    <filename>structtracktion__engine_1_1VSTXML_1_1ValueType.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>a76f0925359da1f64b4c58954464ac46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>label</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>a1e4552263f90f63746920fbdd20b6685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Entry &gt;</type>
      <name>entries</name>
      <anchorfile>structtracktion__engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>ad34ac941886296685e1a4b8469848cf1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; Colour &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01Colour_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static Colour</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01Colour_01_4.html</anchorfile>
      <anchor>ab9dcbd16c229f6faf26844de828f9e6d</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01Colour_01_4.html</anchorfile>
      <anchor>ac50c4dd951a41dae6a5964314df05e4d</anchor>
      <arglist>(const Colour &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::AudioClipBase::AutoPitchMode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::AudioClipBase::AutoPitchMode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</anchorfile>
      <anchor>a656832c185fc8fdf96fae62c2bc59127</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</anchorfile>
      <anchor>a8b5197712efad45b20583486dd8fdc56</anchor>
      <arglist>(tracktion_engine::AudioClipBase::AutoPitchMode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::AudioClipBase::FadeBehaviour &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::AudioClipBase::FadeBehaviour</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</anchorfile>
      <anchor>aeea8a777164f7544e4dc210241303305</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</anchorfile>
      <anchor>a3b7a9d956e4e229f31b82256254f9283</anchor>
      <arglist>(tracktion_engine::AudioClipBase::FadeBehaviour v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::AudioFadeCurve::Type &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioFadeCurve_1_1Type_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::AudioFadeCurve::Type</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioFadeCurve_1_1Type_01_4.html</anchorfile>
      <anchor>a1a793e2f0d170b09e3291c2f55eb89b5</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1AudioFadeCurve_1_1Type_01_4.html</anchorfile>
      <anchor>ab33724c96ba80037c312497ae2d69451</anchor>
      <arglist>(tracktion_engine::AudioFadeCurve::Type v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::Chord::ChordType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Chord_1_1ChordType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::Chord::ChordType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Chord_1_1ChordType_01_4.html</anchorfile>
      <anchor>ab2f92c9105e7e8b21ce67a663e0e7f71</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Chord_1_1ChordType_01_4.html</anchorfile>
      <anchor>a8c6a1f0eca91c6b67845222dc47dc201</anchor>
      <arglist>(tracktion_engine::Chord::ChordType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::Clip::SyncType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Clip_1_1SyncType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::Clip::SyncType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Clip_1_1SyncType_01_4.html</anchorfile>
      <anchor>a5ee798c4cde4371c4a8ee011ceb3534d</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Clip_1_1SyncType_01_4.html</anchorfile>
      <anchor>af13bf5bb18c514e29c4f74dd0105eeaf</anchor>
      <arglist>(tracktion_engine::Clip::SyncType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::EditItemID &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1EditItemID_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::EditItemID</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1EditItemID_01_4.html</anchorfile>
      <anchor>ae69088ac9a75ca3ed9b2d6288bcd6dfb</anchor>
      <arglist>(const juce::var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1EditItemID_01_4.html</anchorfile>
      <anchor>ace44b1de811ae5a2aab6470bfe4a7c7a</anchor>
      <arglist>(const tracktion_engine::EditItemID &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::MidiClip::LoopedSequenceType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::MidiClip::LoopedSequenceType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</anchorfile>
      <anchor>ae680fc99d2ea203bf66f204a4d34b619</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</anchorfile>
      <anchor>a0936945541dc968390c42fa14a092779</anchor>
      <arglist>(tracktion_engine::MidiClip::LoopedSequenceType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::PatternGenerator::Mode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1PatternGenerator_1_1Mode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::PatternGenerator::Mode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1PatternGenerator_1_1Mode_01_4.html</anchorfile>
      <anchor>a06a602875d1603d74c3d560327a42563</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1PatternGenerator_1_1Mode_01_4.html</anchorfile>
      <anchor>a2dcf3a3b2b3fa8bb89a7ef3b85695d74</anchor>
      <arglist>(tracktion_engine::PatternGenerator::Mode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::ProjectItemID &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1ProjectItemID_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::ProjectItemID</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1ProjectItemID_01_4.html</anchorfile>
      <anchor>a94abf920718442c6ce6660b7d3823fdb</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1ProjectItemID_01_4.html</anchorfile>
      <anchor>ab493174e11505f759c264254973e3066</anchor>
      <arglist>(const tracktion_engine::ProjectItemID &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::RenderOptions::AddRenderOptions &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::RenderOptions::AddRenderOptions</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</anchorfile>
      <anchor>ae87216cb87e2321384f897bb3055b936</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</anchorfile>
      <anchor>ae1c9d3c468fef2e93040f33dff64bfc1</anchor>
      <arglist>(tracktion_engine::RenderOptions::AddRenderOptions v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::RenderOptions::RenderType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1RenderType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::RenderOptions::RenderType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1RenderType_01_4.html</anchorfile>
      <anchor>a7ebacbfbc83fdf25e7a69d45a831dc44</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1RenderType_01_4.html</anchorfile>
      <anchor>ab2145fd07909658cc46fbb040c1595da</anchor>
      <arglist>(tracktion_engine::RenderOptions::RenderType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::RenderOptions::TargetFileFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::RenderOptions::TargetFileFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</anchorfile>
      <anchor>a56f13ad00720d9daa5d4cd02e1bc9e0b</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</anchorfile>
      <anchor>ae2c933b4516d2f42a26015e46b1a8801</anchor>
      <arglist>(tracktion_engine::RenderOptions::TargetFileFormat v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::Scale::ScaleType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Scale_1_1ScaleType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::Scale::ScaleType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Scale_1_1ScaleType_01_4.html</anchorfile>
      <anchor>a4f3ef20598e735a1170cd04646d1b305</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1Scale_1_1ScaleType_01_4.html</anchorfile>
      <anchor>a9f094afcfacbb41dff1ec9cb410c8910</anchor>
      <arglist>(tracktion_engine::Scale::ScaleType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::TimecodeDisplayFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimecodeDisplayFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::TimecodeDisplayFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimecodeDisplayFormat_01_4.html</anchorfile>
      <anchor>abb36faf23dd856e428253f8c45ada398</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimecodeDisplayFormat_01_4.html</anchorfile>
      <anchor>a8f02e566ad90a0d98a02f0915e5f39a8</anchor>
      <arglist>(tracktion_engine::TimecodeDisplayFormat t)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::TimeStretcher::ElastiqueProOptions &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::TimeStretcher::ElastiqueProOptions</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</anchorfile>
      <anchor>a5ae1dd3a692d4db3a08599a7298d859b</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</anchorfile>
      <anchor>a2c3213f984c29705b546ed78ce56283c</anchor>
      <arglist>(const tracktion_engine::TimeStretcher::ElastiqueProOptions &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::TimeStretcher::Mode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1Mode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::TimeStretcher::Mode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1Mode_01_4.html</anchorfile>
      <anchor>a3dd62cf55c3d51258b7d453bc690248e</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TimeStretcher_1_1Mode_01_4.html</anchorfile>
      <anchor>a4e2d16299bcbd321f97e82d60cdbbf42</anchor>
      <arglist>(tracktion_engine::TimeStretcher::Mode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion_engine::TrackCompManager::TrackComp::TimeFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion_engine::TrackCompManager::TrackComp::TimeFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</anchorfile>
      <anchor>a00d47a8f290ee4b217e2406cca960ba6</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion__engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</anchorfile>
      <anchor>a92801532bc2397587204816b9039817a</anchor>
      <arglist>(tracktion_engine::TrackCompManager::TrackComp::TimeFormat v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::VCAPlugin</name>
    <filename>classtracktion__engine_1_1VCAPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>VCAPlugin</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a58c9a92979b759595eec7f2dd1b3f882</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VCAPlugin</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>acbab72efaa7ad7f82f88ffe7e2aa9842</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSliderPos</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a17b8cd4e5a9c13f394c00bf70bb5326b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a4725ef3243c622a91334b38579986bf0</anchor>
      <arglist>(float dB)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a3b0468a9165b108da63434dc6c5fe3f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSliderPos</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a08b129d6ad1ce477a3c0b4ee8ca6e791</anchor>
      <arglist>(float position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmute</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a0204ad7c5cccfede3d6a27aface25ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>updateAutomationStreamAndGetVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a113b30f48f3656bfa41ce7b602b97ac5</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a61f9b4cdcdfb6174c30bcf9c5bad3dae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ac4aced09af9fb0c6a57e058123d3f24f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a6b38b2eaffc4a4f0f3f16fd0b6790f93</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a8b7dff9ffdeb4444924b65ebaf949b17</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a11fec3a21252901f07072fc3c3cbed77</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a6f44d1bc951c210690995017cd7435a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ae99e4b6856dfc6a29d758872f9071eff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a9671f3759ded37bcc16d8a3ab5c989aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a4690c0069a5e33c15f6fdb57454550d1</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>af2d5c303d271cd42b7d7f3e36357422a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a9cab1f8a0deadd015e98bdd5ff8247cf</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a9295f16dea78fc6b760afe7ecd3e7f8e</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ab28cf14321ecb13860d39fc536f39920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>volumeValue</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>afbbb026fc9024843333a37caf687f995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>volParam</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a6fe5ea787c20df063c0f5acb0cda08d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a0da9bbf98225a34814c082efca3ede73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::VirtualMidiInputDevice</name>
    <filename>classtracktion__engine_1_1VirtualMidiInputDevice.html</filename>
    <base>tracktion_engine::MidiInputDevice</base>
    <member kind="function">
      <type></type>
      <name>VirtualMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a612827980b6e67146f67b4e4ba1cc977</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, DeviceType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VirtualMidiInputDevice</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ab63ea78bbfc8c2e9abc77898f1562d29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>adbfa586e16c841c4bbae2bc9c07c7b73</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ae7973c5b66635a4fdf5bb4fb16d40361</anchor>
      <arglist>(const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a5d86ee4a81373d0345cf2fdd5e4e83ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ae11aadbbd8ffda26ddb6f09c469c9f10</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>af28570cbaf5b5c3a17d0440e9486abe7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ada9d17c9d25db2f0caecbbf70d722e33</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessageFromPhysicalDevice</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a4fabb0c34019ebe23d44e372bc140f40</anchor>
      <arglist>(MidiInputDevice *, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a7e40f72ae5a56ea18a142f3c2f7c679b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a8fa8b58066791fe3c480312df275142c</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>aa717d86cb51f2748c8d14e01d1808cc9</anchor>
      <arglist>(const juce::MidiMessage &amp;)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>broadcastMessageToAllVirtualDevices</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>adeaa09e0e4c5aa1e280133a79f68c8a5</anchor>
      <arglist>(MidiInputDevice *, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshDeviceNames</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a4730594fbb04a5f4a6cb42ca012a896c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>inputDevices</name>
      <anchorfile>classtracktion__engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ad0b8a344e148024146acc48c491359bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::VirtualMidiInputDeviceDestination</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1VirtualMidiInputDeviceDestination.html</filename>
    <base>tracktion_engine::InputDeviceInstance::InputDeviceDestination</base>
    <member kind="function">
      <type></type>
      <name>VirtualMidiInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1VirtualMidiInputDeviceDestination.html</anchorfile>
      <anchor>a5dcbd9d4b3352dd92745b6b89c6097e3</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VirtualMidiInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1VirtualMidiInputDeviceDestination.html</anchorfile>
      <anchor>a822f79dd14dfb4712ae3ca78fd8d44c2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::detail::VisitNodesWithRecord</name>
    <filename>structtracktion__graph_1_1detail_1_1VisitNodesWithRecord.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structtracktion__graph_1_1detail_1_1VisitNodesWithRecord.html</anchorfile>
      <anchor>aa70d5e41e77015e86c81f4ce954802c8</anchor>
      <arglist>(std::vector&lt; Node * &gt; &amp;visitedNodes, Node &amp;visitingNode, Visitor &amp;&amp;visitor, bool preordering)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_graph::detail::VisitNodesWithRecordBFS</name>
    <filename>structtracktion__graph_1_1detail_1_1VisitNodesWithRecordBFS.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structtracktion__graph_1_1detail_1_1VisitNodesWithRecordBFS.html</anchorfile>
      <anchor>a1895b473c0981ac9155dc65dca575595</anchor>
      <arglist>(std::vector&lt; Node * &gt; &amp;visitedNodes, Node &amp;visitingNode, Visitor &amp;&amp;visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::VolumeAndPanPlugin</name>
    <filename>classtracktion__engine_1_1VolumeAndPanPlugin.html</filename>
    <base>tracktion_engine::Plugin</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; VolumeAndPanPlugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a9228e528b1ce927a4501bf9f43b0e9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeAndPanPlugin</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a73f7c1e6365be29a3c5f98d2f086a41d</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, bool isMasterVolumeNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeAndPanPlugin</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>acbb27acbac4147ac52fdde32276a8d35</anchor>
      <arglist>(PluginCreationInfo, bool isMasterVolumeNode=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VolumeAndPanPlugin</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a778262a4df8ba621f0611a21ea96929e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterVolAndPan</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a13de6d0a725c8a5b5162fe26a781a986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a409442e9750f47fa9682dd139cfc38b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a5bb900ec5f3eb45f32794a2a21285102</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSliderPos</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a8bdb78179ec0ee45193607aba8943c37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a09a010f83aa54307856361cbca3b5c82</anchor>
      <arglist>(float vol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSliderPos</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>af20af28a4a7d289e517faa504cc6986a</anchor>
      <arglist>(float pos)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>abe431fb4c7ed0f4a2e14898970f544db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a0e9b9e4be63c10b013af32d7356277c9</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPanLaw</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a3f423111d46622b886fa096a348b70ae</anchor>
      <arglist>(PanLaw newPanLaw)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getPanLaw</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a07b152e12165e4f172e8301997d05189</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppliedToMidiVolumes</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a2c5b4ee6bdad374f9e58109fce495b97</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAppliedToMidiVolumes</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>aafd6493e954015c94bb3430bcaeffe5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmute</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>af87ce80c161c50f92cfed75f876d5680</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab513750c86a31b27c2f6cf8f90bfaf41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ae2ba0105b6582638a27a5df64e0362f3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>af82cf9ae010fab6961b50015a3dca6ae</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a419c7d46b665566e5d5de65cbadd1976</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a94d602e67c8bb9583761616008b80eda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ac1ac7d254f7201fb40d10d363a58976e</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a654bb9bb9c418f4ad452386d00b51abb</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ac0e7602778057f961c0ce387c66457af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a913c70687ea3767b83482c2eea2eea17</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>abc1c589ccfaae9ef2f76560936c3068e</anchor>
      <arglist>(int numInputs) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a2a012b2e18f6eecb515f60698b4d5bca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a18e2dc34b14e79c81ca425dac6ff5c92</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a92ea7c1b3568c9731f74302a1275468d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a69832eb45d7444f79d86bdee432083a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>volume</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a911e70a218a11b1d41ad27a4511a874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pan</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a436f7632142f46d1fdfa245a8c662fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>applyToMidi</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a8d35bdf28936c1259b7f1560a9009bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>ignoreVca</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab64b1ae0ea3b45ac8b83c02c8e131978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>polarity</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a3f0ae0e8255b489ae0fe1ba822f11fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>panLaw</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>aaf6742ba3e268d164200d46d415049c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>volParam</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a257890b747ffd466fed475e339018322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>panParam</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab35072fe316a6b01ed234fce010eea8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion__engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a8fe095427f07a616ee90607234b43d33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::VolumeEffect</name>
    <filename>structtracktion__engine_1_1VolumeEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>VolumeEffect</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>ad2efccddd0cf618ccf1afd73d80a4870</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a8df7a5eb64f6c75a7e17b84d7aafe884</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>af33bcfb7375536aea1a4910ca1586e82</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a0c36b66e55fecfee0b3bbdfcab694fc8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a9974e92feff8480b270c73a992ca3f59</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a68a89628a7fffebd933c0bf01b7bd437</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>ae62ffe205b4d01c672d795a7705517b9</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a34a3d1e44525635ce6aa11e3a148985e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>adf7508fb2bd915c9df88d6b2b11551d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>VolumeAndPanPlugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a0cd7397b92166402a2e63c9238a8a8fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion__engine_1_1VolumeEffect.html</anchorfile>
      <anchor>ad7e82efeab6adcc3e3a03370acc7874f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::VSTXML</name>
    <filename>classtracktion__engine_1_1VSTXML.html</filename>
    <class kind="struct">tracktion_engine::VSTXML::Base</class>
    <class kind="struct">tracktion_engine::VSTXML::Entry</class>
    <class kind="struct">tracktion_engine::VSTXML::Group</class>
    <class kind="struct">tracktion_engine::VSTXML::Param</class>
    <class kind="struct">tracktion_engine::VSTXML::Range</class>
    <class kind="struct">tracktion_engine::VSTXML::Template</class>
    <class kind="struct">tracktion_engine::VSTXML::ValueType</class>
    <member kind="function">
      <type>const Param *</type>
      <name>getParamForID</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>a804b5720647286901b0050862bf3db67</anchor>
      <arglist>(int paramID, const Group *grp) const</arglist>
    </member>
    <member kind="function">
      <type>const ValueType *</type>
      <name>getValueType</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>acde0da36931d4d164f82b7c96d69fd71</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSTXML *</type>
      <name>createFor</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>adf3788342e56ee7895f22fb71bbbc031</anchor>
      <arglist>(const juce::XmlElement &amp;xml)</arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Base &gt;</type>
      <name>paramTree</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>ac47e21d5afe3ed5eaffb4308af2ac5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; ValueType &gt;</type>
      <name>valueTypes</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>a85dd3a9976cc42ba8610a03a61ecd063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Template &gt;</type>
      <name>templates</name>
      <anchorfile>classtracktion__engine_1_1VSTXML.html</anchorfile>
      <anchor>ae8f756ccb64fb4d36708f727c995f6c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::WarpMarker</name>
    <filename>structtracktion__engine_1_1WarpMarker.html</filename>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a58ec52490ea90029301ef72281d300a3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a2381ccdc49773138f09751ce5ac3fb5c</anchor>
      <arglist>(double s, double w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a8fcb74c95fd4f658c21e065308a36fa8</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFrom</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a44443d04b62a3705402384ad48ed4d53</anchor>
      <arglist>(const juce::ValueTree &amp;v, const juce::Identifier &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a54833cda2d7f8d7630b55d4d70fd4d1c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>abcbb68a99b06b63cc570f2e4edf11d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sourceTime</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>a6934380f938925b1b6ac31a7b00aeffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>warpTime</name>
      <anchorfile>structtracktion__engine_1_1WarpMarker.html</anchorfile>
      <anchor>aabb4b4151321f227e3766706f3dc426f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::WarpTimeEffect</name>
    <filename>structtracktion__engine_1_1WarpTimeEffect.html</filename>
    <base>tracktion_engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>WarpTimeEffect</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a153c4c82710c90f7a9f31a3457e6cc0d</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a48bced493387ec653cf3d19f7ad6b667</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a432711eaa661d3b21565108955e7cf2d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceChanged</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>aa8eef80d512c0ad8d0c037bb2b671437</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>aeeb00157d94629da0c157faceb0de342</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WarpTimeManager::Ptr</type>
      <name>warpTimeManager</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a25e731a672d5a7e1ef75f204577340ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; Edit::LoadFinishedCallback&lt; WarpTimeEffect &gt; &gt;</type>
      <name>editLoadedCallback</name>
      <anchorfile>structtracktion__engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a8e1c125b30132893d64be3a70d4cfccf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WarpTimeFactory</name>
    <filename>classtracktion__engine_1_1WarpTimeFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>WarpTimeFactory</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a3b2e523da6b584f49d9690e92a8e787a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WarpTimeFactory</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a02a49f912d603d2de8d8061928f27b60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeManager::Ptr</type>
      <name>getWarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a6e150037ac165da9f12a9e9ac3ca3b92</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a1a368f535de9a30921add07fed520f55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WarpTimeManager</name>
    <filename>classtracktion__engine_1_1WarpTimeManager.html</filename>
    <base>tracktion_engine::RenderManager::Job::Listener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WarpTimeManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a9a56c411275567b9b02f5ef50cc6317c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a99e6ef50fd89b2b70f39c4f48c7e0f7e</anchor>
      <arglist>(AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aba8143013e84756cce8ca2755d1020a9</anchor>
      <arglist>(Edit &amp;, const AudioFile &amp;sourceFile, juce::ValueTree parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WarpTimeManager</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a67903dc4fdcd1b209a994b765b007c87</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceFile</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aa2f3657fcd298222b258fe215783b127</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aa1aca34826f7281f532ba73ef79b1a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>af84c5d4f50f8bce873283f4ca8901018</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWarpEndMarkerEnabled</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>addebaf8810531f5ccbc1dcd089bf8eb4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areEndMarkersLimited</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a8245427cc7de7f631f9e7386771df16c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; WarpMarker * &gt; &amp;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ae989afdf2304c00ce621023a9b1052f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertMarker</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a8a4e9fcd7ac827343a67ad8e3d217bc8</anchor>
      <arglist>(WarpMarker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMarker</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>afbc5b41a5aced4e6b658a729d6ee41af</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllMarkers</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aea8587852cb94073f841bf2b89b6060f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>moveMarker</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a3be41ed610391a1c9a9b3834ace70ea1</anchor>
      <arglist>(int index, double newWarpTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarpEndMarkerTime</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a89ab9b7525a032c9b20197d77c8c4fe2</anchor>
      <arglist>(double endTime)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditTimeRange &gt;</type>
      <name>getWarpTimeRegions</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a80bd100befd33dbbfc4ffa0dc3cd4dd0</anchor>
      <arglist>(EditTimeRange overallTimeRegion) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, juce::Array&lt; double &gt; &gt;</type>
      <name>getTransientTimes</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>af9016dd8e82521c69f765482013ae464</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>warpTimeToSourceTime</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a352c398c66c50f731dbab63fe8bf20b2</anchor>
      <arglist>(double warpTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sourceTimeToWarpTime</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a29db82b10c49afe856bc04489ab24e55</anchor>
      <arglist>(double sourceTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getWarpedStart</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ae0f04d2dee047630148e9528c0534eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getWarpedEnd</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aed3cf695ac09c7c055f59d5e87115f31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getWarpEndMarkerTime</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a65cd54444edf600481a85d9d6ff77df6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>adee40422af9d352af41e08262ab7f281</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a1cf2ff53aa4150c210183424872a6b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aeeb60cc2f366da4c875b0aae25988f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a14678e22ed2e6f6cdf329ccb3dcb4b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WarpTimeFactory</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a9dcceb5c2cd8adb5e6089150c54ead12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WarpTimeRenderJob</name>
    <filename>classtracktion__engine_1_1WarpTimeRenderJob.html</filename>
    <base>tracktion_engine::RenderManager::Job</base>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>a2124c57eee0dba5bd3dc311709a5f2f7</anchor>
      <arglist>(AudioClipBase &amp;clip, const juce::File &amp;source, const juce::File &amp;destination)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>a7f05197dce75dd1a59e74d18454ce9b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>a1f07257a77e097397e3fad8a5f3f4bf6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion__engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>ae387603f335de0ec54090e9d970ae66a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Edit::WastedMidiMessagesListener</name>
    <filename>structtracktion__engine_1_1Edit_1_1WastedMidiMessagesListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WastedMidiMessagesListener</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1WastedMidiMessagesListener.html</anchorfile>
      <anchor>a06be739be23c512d05e481b13d700343</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>warnOfWastedMidiMessages</name>
      <anchorfile>structtracktion__engine_1_1Edit_1_1WastedMidiMessagesListener.html</anchorfile>
      <anchor>a1708987a7cd9dae1f1c767b2635078d8</anchor>
      <arglist>(InputDevice *, Track *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveAudioClip</name>
    <filename>classtracktion__engine_1_1WaveAudioClip.html</filename>
    <base>tracktion_engine::AudioClipBase</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>acedc356595121730dd1190596f920031</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveAudioClip</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ad3fdac489c6f2a3ef0878564741878cb</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveAudioClip</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aa9d9ea79f1ad2717698bf8acae9955ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a9ec898551f007c04ebf270b072a90285</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a72daf8af64d548c13d41b521a7973ebc</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aed7e04c5fab869d635cd914c22ca93f9</anchor>
      <arglist>(bool deleteSourceFiles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakesConfirmingWithUser</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aeb6af192dca8cfa6e628f82b9cf91659</anchor>
      <arglist>(bool deleteSourceFiles)</arglist>
    </member>
    <member kind="function">
      <type>WaveCompManager &amp;</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a3e1003a939e3f6a59653e2939ba17831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a155d3cd29bdea689b6b084fa8089869d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a8b34983cb386391bf61c88547c2a90df</anchor>
      <arglist>(const AudioFile &amp;destFile) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a870f5c11c829abf9db1742cc321323ef</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a7201c2e49de3fc102120bd6a8066978b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>add2f9ac5d32e5333db0b0c30fbdf892a</anchor>
      <arglist>(const AudioFile &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aadd8dbb8518649c336ae6e55cd2acb09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aa1512122f2f552087cd78e5a759192c1</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a68e732e5835fd8161538daa44877a0b1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a113c4feaf31c7bf1ebeec001699e310d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ae06dad9330019ccef6d4efd9cf446358</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>afff0d9999baf852f48f65655352540cc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ab4a9610324a92a5bbdddff68a42fa0a5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a1ebcb920c5d30e7c754fe81091712cd5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ab831dd172b5f883d7ecdcaa5011757f9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ad779c6dbb4c60102b2f3e2347cd15f84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>adcb9632b2688c53d1fe0d721a1aaeac0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>adee2ad3e328003b881d6927326bef0d6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a1504c0c81331a74e47134c18d9b2953b</anchor>
      <arglist>(bool includeComps) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>getTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aacc94fe2971b1f506a8cf31721277b4b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>adb1145fea79694101be4beb7baec832b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ae62c8a9c1c349b8f1e3f45af79e40e79</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a0316541dfdb753382d4bd39749438a68</anchor>
      <arglist>(int takeIndex) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>af81ad171237282b17318a2d0caeae720</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a4e54bad011c590f33218b507901c512b</anchor>
      <arglist>(bool toNewTracks) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a7447f8e4871f035366e850493ab0d12d</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveAudioNode</name>
    <filename>classtracktion__engine_1_1WaveAudioNode.html</filename>
    <base>tracktion_engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>WaveAudioNode</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>abaef1055d501ae0ed62e397cbe93e4bb</anchor>
      <arglist>(const AudioFile &amp;file, EditTimeRange editTime, double offset, EditTimeRange loopSection, LiveClipLevel level, double speedRatio, const juce::AudioChannelSet &amp;channelsToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveAudioNode</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ab970035d8c76462a8b1b8cce80d74135</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>aadf50b3c6c1494d328555e34828a9ad4</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a9d322be5f468b388ea1f055a554c2181</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ad7947cfb101c029fd3eaa274fa66355e</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a99c81f77e7b92ca59b71c102eb5df004</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a294dacb14b411b3a94cb76ccfa52c8ce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a4d4503888dbe459258650d47eeec303a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a4800ef0b76483e2a3c1b937f6456c72c</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a8d2143c72c495af747e91a4f4c0b9716</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>abd16f7120cf5b71ff609e25987116a23</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion__engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ac10d8f3e31c419b494662b825576f8bc</anchor>
      <arglist>(const AudioRenderContext &amp;, EditTimeRange editTime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveCompManager</name>
    <filename>classtracktion__engine_1_1WaveCompManager.html</filename>
    <base>tracktion_engine::CompManager</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveCompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aa8267ef5b03cf5676f01efac1c2c46b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveCompManager</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a224979c3d48a2cf01dc6f19dd01d86ee</anchor>
      <arglist>(WaveAudioClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveCompManager</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a98d95cd1c27f7fdd17d874b22ac2dfd8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateThumbnails</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aec65f01be00e4449898586f38e9700dc</anchor>
      <arglist>(juce::Component &amp;, juce::OwnedArray&lt; SmartThumbnail &gt; &amp;thumbnails) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getCurrentCompFile</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a460ccd0a27afdf12484806db23308f8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a6bbdca739d72a2c3060d32e697448c0e</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a6f31caae2f8067d5fa667c6bbed4d266</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ac08549ffb73cebc9a7a1e49565e80eb8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a04b12f3f217f756533de1e637dc7bd64</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a159d3fe7854856747e729aa89e610c50</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a5d67860bf51f5a9102bed93ac1f8e8e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>adcfc758647b3849e3fdf1f64db83fb60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ac83bdd01e693f5171f4204fc017214fe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a8729ce42c035cab8ed916a87ff9e5cd4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a8406fe320ab4ffe6970677f8b5df2990</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>pasteComp</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aee79defc21b899a15578786a29a8fb77</anchor>
      <arglist>(const juce::ValueTree &amp;compTree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStripToUpdate</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aa0601c89c3e6a9fbc4fda4bded72efa3</anchor>
      <arglist>(juce::Component *strip) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a4c48c3cdc5023bc405c22c7785f93150</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CompRenderContext *</type>
      <name>createRenderContext</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>af85b51bc022f08f593530dcb4349ecb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>renderTake</name>
      <anchorfile>classtracktion__engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ad2f71304b5a017c10b70ba6458f36bad</anchor>
      <arglist>(CompRenderContext &amp;, AudioFileWriter &amp;, juce::ThreadPoolJob &amp;, std::atomic&lt; float &gt; &amp;progress)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::WaveDeviceDescription</name>
    <filename>structtracktion__engine_1_1WaveDeviceDescription.html</filename>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>adfeee355107f27c8991a3738afe44386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>afa2a1e23459d47e579e0bd03ecd96d5f</anchor>
      <arglist>(const juce::String &amp;name, int leftChanIndex, int rightChanIndex, bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a715cfa471824262e461f81ef2a1072ce</anchor>
      <arglist>(const juce::String &amp;nm, const ChannelIndex *channels, int numChannels, bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>aa6a55573b0b14d00af98365c7ea92683</anchor>
      <arglist>(const WaveDeviceDescription &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>aa253ebb077739e3d1a1df63b46e4b179</anchor>
      <arglist>(const WaveDeviceDescription &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a99ca52071bb764feea20882d70acf592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ChannelIndex &gt;</type>
      <name>channels</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a2c56be73c544e84b41491a22bc70de1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>structtracktion__engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a2dae37b214c7caebbdce77d8461fe6c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveInputDevice</name>
    <filename>classtracktion__engine_1_1WaveInputDevice.html</filename>
    <base>tracktion_engine::InputDevice</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a8790d95e328e05e012b1f87e629cee39</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, const juce::String &amp;type, const std::vector&lt; ChannelIndex &gt; &amp;, DeviceType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a95b5674506335ce877c5a8886fd8e7ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRecordFormatNames</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a99faa42eb635ed41dd0748698bc73d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>af2b2f57941070e26ed13955796c80637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>abedc2d93b637b2969c6c461885b157e2</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>afd95442d54a8314dbca6888941ab94ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a67f78589d95582304325603ef3dfa9b1</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipEndToEnd</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aa9d2e80f5413cf9c78b606e537f73b4c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndToEnd</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aa043baa39a14dc0d5c867e9540297120</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordAdjustmentMs</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a2d26f262cc99d4763cb46823f8d79713</anchor>
      <arglist>(double ms)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRecordAdjustmentMs</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>adedf79dbb4b0421308b19c8856364924</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStereoPair</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>adbe4c691c2d3f7da28a482d808d7bc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStereoPair</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a47bea11d60baeba584b8d4139121c076</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getAvailableBitDepths</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a3f147ce73347547ad83e1a4058a15fd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitDepth</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a3d9b375cce170a3eac420daf5f368527</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>ab7a032c41d58f2746c501538d8e1cc79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkBitDepth</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6e0e0613fd57c9dbeec94b4013f3dade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputGainDb</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a1a8846aaba2d5e79adbc2d8c80d5a19b</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getInputGainDb</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6a90e7c536aba3bee1bd231ad2468b44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordTriggerDb</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6844a20ec463b6b8597acd2507257047</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRecordTriggerDb</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a064868f68d384d6acf06f908220c2429</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilenameMask</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aa5d1185d973f9fa7c13aeba6dcc1e361</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFilenameMask</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a74d5b7735d85cb009f6a8460fab0e0d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilenameMaskToDefault</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>af424c8700c730198b55d5cc13fbdc6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputFormat</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a25cfe0eec80ba1450113fed75f13d676</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputFormat</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a984a6ea1f91a8a271f4a55827605d2ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMergeMode</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a05a64c839eab9fac0383dfb4e0be5d7b</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getMergeMode</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a68c2d3d44edc5e032d4af6581bf1fad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ChannelIndex &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a5055c7daa38ae071297d90d113aaafd6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::AudioChannelSet &amp;</type>
      <name>getChannelSet</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6d76e41a900cd5effa2a13635d1ff45a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>acde99cf1246fccb09f63dd272345d57d</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>consumeNextAudioBlock</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a28ba8b96dc8cbf0e3fa67fc67b231083</anchor>
      <arglist>(const float **allChannels, int numChannels, int numSamples, double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>RetrospectiveRecordBuffer *</type>
      <name>getRetrospectiveRecordBuffer</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a52214fede62fa40f54f48dafc70b57a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a3421f01be0165bde915861fca79ccd23</anchor>
      <arglist>(double length) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a33c82ffda934f0d1a747e69e9a7f3f54</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getMergeModes</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aa630b65a2260c0a323a615b9e08d0037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMask</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a71cd2ee77a4074a18ef2403eb7d475de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a65c14a8b92d273f5fd1b7354d5ae9646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a84917dcae69322615218a8abef6d50f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WaveInputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>abf393b0c32d5de0dcf030c4122ed2c18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::InputDeviceInstance::WaveInputDeviceDestination</name>
    <filename>structtracktion__engine_1_1InputDeviceInstance_1_1WaveInputDeviceDestination.html</filename>
    <base>tracktion_engine::InputDeviceInstance::InputDeviceDestination</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1WaveInputDeviceDestination.html</anchorfile>
      <anchor>ae22d46f48c77e55f91f12d79972a3d95</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDeviceDestination</name>
      <anchorfile>structtracktion__engine_1_1InputDeviceInstance_1_1WaveInputDeviceDestination.html</anchorfile>
      <anchor>a4bb7269aa1b31b1663d9327867e86b0f</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveInputDeviceNode</name>
    <filename>classtracktion__engine_1_1WaveInputDeviceNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::InputDeviceInstance::Consumer</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>ac928dd856bbf6614f41a43eb29e1a8d7</anchor>
      <arglist>(InputDeviceInstance &amp;, WaveInputDevice &amp;, const juce::AudioChannelSet &amp;destChannelsToFill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDeviceNode</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a2e3de1af31a5f3bb7bf336abe2d86167</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a5bb09bc9cad9f0e28b1df14720a561b4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a94e6c7ac5b284c1bc63d6290082bf814</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a0ef289f4fce001c8265c22e70a331d4f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>aa38fe9221a7b2acf6f14ca1a91aa69b2</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptInputBuffer</name>
      <anchorfile>classtracktion__engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a3eb5df7b6c2f8a62422913345af78945</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveInputRecordingThread</name>
    <filename>classtracktion__engine_1_1WaveInputRecordingThread.html</filename>
    <class kind="struct">tracktion_engine::WaveInputRecordingThread::ScopedInitialiser</class>
    <member kind="function">
      <type></type>
      <name>WaveInputRecordingThread</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a217f2bad9c21c57133dbef8c8712377d</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputRecordingThread</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>ad4cd2b9b960e3870be84b1699bcfc006</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUser</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>aa4755c2dbcaff88857f0f43aa7f6c827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUser</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a49a588a743a786422f381a2f11c9a9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlockToRecord</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a6cec99703b6395cf6993262c20889ccf</anchor>
      <arglist>(AudioFileWriter &amp;, const juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples, const RecordingThumbnailManager::Thumbnail::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForWriterToFinish</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>ac23d919461f477a1b6c1f31c2ffe01e9</anchor>
      <arglist>(AudioFileWriter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>ad8d55209ba213aaefc7c85bd155e7119</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>af8f1a41ff3342d5a669c5e8c8aed5f2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion__engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a9a87a1987da5c45976efcb4d8f8adf16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveNode</name>
    <filename>classtracktion__engine_1_1WaveNode.html</filename>
    <base>tracktion_graph::Node</base>
    <base>tracktion_engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>WaveNode</name>
      <anchorfile>classtracktion__engine_1_1WaveNode.html</anchorfile>
      <anchor>aeb3a4920b7618003b4102321a5ae48da</anchor>
      <arglist>(const AudioFile &amp;, EditTimeRange editTime, double offset, EditTimeRange loopSection, LiveClipLevel, double speedRatio, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender)</arglist>
    </member>
    <member kind="function">
      <type>tracktion_graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion__engine_1_1WaveNode.html</anchorfile>
      <anchor>a5562ee39f8274462cad0f7d1a8d67d9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1WaveNode.html</anchorfile>
      <anchor>a54030d15d74315a6748ba8314eb4c99e</anchor>
      <arglist>(const tracktion_graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion__engine_1_1WaveNode.html</anchorfile>
      <anchor>a3cd673ad093cb2c285727bc4e6732eaf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion__engine_1_1WaveNode.html</anchorfile>
      <anchor>a38509c51138c1d2c8e18d65eeae3bc22</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveOutputDevice</name>
    <filename>classtracktion__engine_1_1WaveOutputDevice.html</filename>
    <base>tracktion_engine::OutputDevice</base>
    <member kind="function">
      <type></type>
      <name>WaveOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>addb501c32fa0c2be42ed9020241e241d</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, const std::vector&lt; ChannelIndex &gt; &amp;channels)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveOutputDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>ae376f7d815136f406810edbf396050df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a51f65f3b5526cc4c24eec4e185fe7aa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>ad794449a8139d4c496e01693202d742c</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ChannelIndex &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>afac88eb8e26757fabb755a6dc246a888</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::AudioChannelSet &amp;</type>
      <name>getChannelSet</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a29abb521f243f6e44cbafc2966bd7cd3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverseChannels</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a1befdbbb8354fa2e6ffda4b53ffdf7c1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReversed</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>aa6cdff7af414f33ceb8a4be983980589</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDithered</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a0173c726a3d8c0306c4361482d2ff66f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDithered</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a34ef43d2799c2f5f1a7e2dc6f4074a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLeftChannel</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a5b41bb881cc6f9245014b5f8fd046496</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRightChannel</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a50868ee5d6be9a50c5bfd7f9a495c237</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStereoPair</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a3ac1d76fd89e330b849fa788a8116564</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStereoPair</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>af9be2948c3fff54b94352c4568db6d4d</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a59e60b96b2a023328ca4f688c0f922ce</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a916537b8d2c7c1b26460fc272758c414</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>accdc3dcc05d37cf1da56e7457fcc25fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WaveOutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>ac1a658bfbb8131f7a30de939b11cf0aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion_engine::WaveOutputDeviceInstance</name>
    <filename>classtracktion__engine_1_1WaveOutputDeviceInstance.html</filename>
    <base>tracktion_engine::OutputDeviceInstance</base>
    <member kind="function">
      <type></type>
      <name>WaveOutputDeviceInstance</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a32f5acc423e8d7e76171ed88bf03a4cc</anchor>
      <arglist>(WaveOutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>ad486e5ce4fd6044f0caedaf2cfe65291</anchor>
      <arglist>(double sampleRate, int blockSizeSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillNextAudioBlock</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a42d1e3037b910ccc6fe121c7df6fd496</anchor>
      <arglist>(PlayHead &amp;, EditTimeRange streamTime, float **allChannels, int numSamples)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WaveOutputDevice &amp;</type>
      <name>getWaveOutput</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>af3600899ccd10cd861ebf8c63d839e33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ditherer</type>
      <name>ditherers</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a463b3691064feace84fe38a448d501fd</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiMessageArray</type>
      <name>midiBuffer</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a48894cf80e87ad28ea69a7d89d5a5195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>outputBuffer</name>
      <anchorfile>classtracktion__engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a78c33c9de6796935fe3100e467d9943c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::RackType::WindowState</name>
    <filename>structtracktion__engine_1_1RackType_1_1WindowState.html</filename>
    <base>tracktion_engine::PluginWindowState</base>
    <member kind="function">
      <type></type>
      <name>WindowState</name>
      <anchorfile>structtracktion__engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>a5cb3adb4c088dcd0c1f3a513bc4db700</anchor>
      <arglist>(RackType &amp;, juce::ValueTree windowStateTree)</arglist>
    </member>
    <member kind="variable">
      <type>RackType &amp;</type>
      <name>rack</name>
      <anchorfile>structtracktion__engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>a07c1754097df848187a10dc79aba3d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>a39de1ea6fc8f7ee0a6a509348e656b31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Plugin::WindowState</name>
    <filename>structtracktion__engine_1_1Plugin_1_1WindowState.html</filename>
    <base>tracktion_engine::PluginWindowState</base>
    <member kind="function">
      <type></type>
      <name>WindowState</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1WindowState.html</anchorfile>
      <anchor>a112c81b92ff81c4bed1562ad7ea275c9</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Plugin &amp;</type>
      <name>plugin</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1WindowState.html</anchorfile>
      <anchor>aff199e6cf342ef73eed662b405d75805</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::Plugin::Wire</name>
    <filename>structtracktion__engine_1_1Plugin_1_1Wire.html</filename>
    <member kind="function">
      <type></type>
      <name>Wire</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a5b4229b171a927ec1d746c1c30c3637f</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a14734b9a38f37621bd3c15c60c8593f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourceChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a56be586eeab530d1a9baa7750460c837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a940044f0fb34b8e4cfac5ec49a51f83a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion_engine::PatchBayPlugin::Wire</name>
    <filename>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</filename>
    <member kind="function">
      <type></type>
      <name>Wire</name>
      <anchorfile>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>ad1127b301a6bfe410ca2b868231188c7</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>aed076ba9e88b0b043fb3839c8e5b0455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourceChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a60a0a3abfc6e0f2a2f289d2372a8bbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destChannelIndex</name>
      <anchorfile>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a4cc3ad3a20536d8797cd7ffbc5337b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainDb</name>
      <anchorfile>structtracktion__engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>aa09e1fd32f830dbdc87dfdb28217bef3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>juce</name>
    <filename>namespacejuce.html</filename>
    <class kind="struct">juce::VariantConverter&lt; Colour &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioClipBase::AutoPitchMode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioClipBase::FadeBehaviour &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::AudioFadeCurve::Type &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Chord::ChordType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Clip::SyncType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::EditItemID &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::MidiClip::LoopedSequenceType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::PatternGenerator::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::ProjectItemID &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::AddRenderOptions &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::RenderType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::RenderOptions::TargetFileFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::Scale::ScaleType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimecodeDisplayFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimeStretcher::ElastiqueProOptions &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TimeStretcher::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion_engine::TrackCompManager::TrackComp::TimeFormat &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>moodycamel</name>
    <filename>namespacemoodycamel.html</filename>
    <namespace>moodycamel::details</namespace>
  </compound>
  <compound kind="namespace">
    <name>moodycamel::details</name>
    <filename>namespacemoodycamel_1_1details.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine</name>
    <filename>namespacetracktion__engine.html</filename>
    <namespace>tracktion_engine::AppFunctions</namespace>
    <namespace>tracktion_engine::benchmark_utilities</namespace>
    <namespace>tracktion_engine::Click</namespace>
    <namespace>tracktion_engine::ClipConstants</namespace>
    <namespace>tracktion_engine::IDs</namespace>
    <namespace>tracktion_engine::modifier</namespace>
    <namespace>tracktion_engine::ModifierCommon</namespace>
    <namespace>tracktion_engine::PredefinedWavetable</namespace>
    <namespace>tracktion_engine::RackNodeBuilder</namespace>
    <namespace>tracktion_engine::TracktionBinaryData</namespace>
    <class kind="class">tracktion_engine::AbletonLink</class>
    <class kind="struct">tracktion_engine::ActiveEdits</class>
    <class kind="struct">tracktion_engine::ActiveNoteList</class>
    <class kind="class">tracktion_engine::AirWindowsCallback</class>
    <class kind="class">tracktion_engine::AirWindowsPlugin</class>
    <class kind="class">tracktion_engine::AlphaTrackControlSurface</class>
    <class kind="struct">tracktion_engine::ARADocumentHolder</class>
    <class kind="class">tracktion_engine::ArrangerClip</class>
    <class kind="class">tracktion_engine::ArrangerTrack</class>
    <class kind="struct">tracktion_engine::AsyncCaller</class>
    <class kind="struct">tracktion_engine::AsyncFunctionCaller</class>
    <class kind="class">tracktion_engine::AudioBufferSnapshot</class>
    <class kind="class">tracktion_engine::AudioClipBase</class>
    <class kind="struct">tracktion_engine::AudioFadeCurve</class>
    <class kind="class">tracktion_engine::AudioFifo</class>
    <class kind="class">tracktion_engine::AudioFile</class>
    <class kind="class">tracktion_engine::AudioFileCache</class>
    <class kind="class">tracktion_engine::AudioFileFormatManager</class>
    <class kind="struct">tracktion_engine::AudioFileInfo</class>
    <class kind="class">tracktion_engine::AudioFileManager</class>
    <class kind="struct">tracktion_engine::AudioFileUtils</class>
    <class kind="class">tracktion_engine::AudioFileWriter</class>
    <class kind="class">tracktion_engine::AudioMidiFifo</class>
    <class kind="class">tracktion_engine::AudioNode</class>
    <class kind="struct">tracktion_engine::AudioNodeProperties</class>
    <class kind="class">tracktion_engine::AudioProxyGenerator</class>
    <class kind="struct">tracktion_engine::AudioRenderContext</class>
    <class kind="class">tracktion_engine::AudioScratchBuffer</class>
    <class kind="class">tracktion_engine::AudioSegmentList</class>
    <class kind="class">tracktion_engine::AudioTrack</class>
    <class kind="class">tracktion_engine::AutomatableEditItem</class>
    <class kind="class">tracktion_engine::AutomatableParameter</class>
    <class kind="class">tracktion_engine::AutomatableParameterTree</class>
    <class kind="class">tracktion_engine::AutomationCurve</class>
    <class kind="class">tracktion_engine::AutomationDragDropTarget</class>
    <class kind="struct">tracktion_engine::AutomationIterator</class>
    <class kind="class">tracktion_engine::AutomationRecordManager</class>
    <class kind="class">tracktion_engine::AutomationTrack</class>
    <class kind="class">tracktion_engine::AuxReturnPlugin</class>
    <class kind="class">tracktion_engine::AuxSendNode</class>
    <class kind="class">tracktion_engine::AuxSendPlugin</class>
    <class kind="class">tracktion_engine::BackgroundJobManager</class>
    <class kind="class">tracktion_engine::BandlimitedWaveLookupTables</class>
    <class kind="struct">tracktion_engine::BeatDetect</class>
    <class kind="class">tracktion_engine::Benchmark</class>
    <class kind="struct">tracktion_engine::BenchmarkDescription</class>
    <class kind="class">tracktion_engine::BenchmarkList</class>
    <class kind="struct">tracktion_engine::BenchmarkResult</class>
    <class kind="struct">tracktion_engine::BlockingFunction</class>
    <class kind="class">tracktion_engine::BreakpointOscillatorModifier</class>
    <class kind="struct">tracktion_engine::ChannelIndex</class>
    <class kind="class">tracktion_engine::Chord</class>
    <class kind="class">tracktion_engine::ChordClip</class>
    <class kind="class">tracktion_engine::ChordTrack</class>
    <class kind="class">tracktion_engine::ChorusPlugin</class>
    <class kind="class">tracktion_engine::ClickGenerator</class>
    <class kind="class">tracktion_engine::ClickNode</class>
    <class kind="class">tracktion_engine::Clip</class>
    <class kind="class">tracktion_engine::Clipboard</class>
    <class kind="class">tracktion_engine::ClipEffect</class>
    <class kind="class">tracktion_engine::ClipEffects</class>
    <class kind="struct">tracktion_engine::ClipLevel</class>
    <class kind="struct">tracktion_engine::ClipPosition</class>
    <class kind="class">tracktion_engine::ClipTrack</class>
    <class kind="class">tracktion_engine::CollectionClip</class>
    <class kind="class">tracktion_engine::CombiningAudioNode</class>
    <class kind="class">tracktion_engine::CombiningNode</class>
    <class kind="class">tracktion_engine::CompFactory</class>
    <class kind="class">tracktion_engine::CompManager</class>
    <class kind="class">tracktion_engine::CompressorPlugin</class>
    <class kind="class">tracktion_engine::ConstrainedCachedValue</class>
    <class kind="class">tracktion_engine::ControlSurface</class>
    <class kind="struct">tracktion_engine::CrashStackTracer</class>
    <class kind="struct">tracktion_engine::CreateAudioNodeParams</class>
    <class kind="struct">tracktion_engine::CreateNodeParams</class>
    <class kind="class">tracktion_engine::CurveEditor</class>
    <class kind="class">tracktion_engine::CurveEditorPoint</class>
    <class kind="struct">tracktion_engine::CurvePoint</class>
    <class kind="class">tracktion_engine::CustomControlSurface</class>
    <class kind="struct">tracktion_engine::DbTimePair</class>
    <class kind="struct">tracktion_engine::DeadMansPedalMessage</class>
    <class kind="struct">tracktion_engine::DelayBufferBase</class>
    <class kind="class">tracktion_engine::DelayPlugin</class>
    <class kind="class">tracktion_engine::DeviceManager</class>
    <class kind="struct">tracktion_engine::DiscreteLabelledParameter</class>
    <class kind="struct">tracktion_engine::Ditherer</class>
    <class kind="class">tracktion_engine::Edit</class>
    <class kind="class">tracktion_engine::EditClip</class>
    <class kind="struct">tracktion_engine::EditDeleter</class>
    <class kind="class">tracktion_engine::EditFileOperations</class>
    <class kind="class">tracktion_engine::EditInputDevices</class>
    <class kind="class">tracktion_engine::EditInsertPoint</class>
    <class kind="class">tracktion_engine::EditItem</class>
    <class kind="struct">tracktion_engine::EditItemCache</class>
    <class kind="struct">tracktion_engine::EditItemID</class>
    <class kind="struct">tracktion_engine::EditLimits</class>
    <class kind="struct">tracktion_engine::EditNodeBuilder</class>
    <class kind="class">tracktion_engine::EditPlaybackContext</class>
    <class kind="class">tracktion_engine::EditRenderJob</class>
    <class kind="class">tracktion_engine::EditSnapshot</class>
    <class kind="struct">tracktion_engine::EditTimecodeRemapperSnapshot</class>
    <class kind="struct">tracktion_engine::EditTimeRange</class>
    <class kind="class">tracktion_engine::Engine</class>
    <class kind="class">tracktion_engine::EngineBehaviour</class>
    <class kind="class">tracktion_engine::EnvelopeFollowerModifier</class>
    <class kind="class">tracktion_engine::EqualiserPlugin</class>
    <class kind="class">tracktion_engine::ExpEnvelope</class>
    <class kind="class">tracktion_engine::Exportable</class>
    <class kind="class">tracktion_engine::ExportJob</class>
    <class kind="class">tracktion_engine::ExternalAutomatableParameter</class>
    <class kind="class">tracktion_engine::ExternalController</class>
    <class kind="class">tracktion_engine::ExternalControllerManager</class>
    <class kind="class">tracktion_engine::ExternalPlayheadSynchroniser</class>
    <class kind="class">tracktion_engine::ExternalPlugin</class>
    <class kind="class">tracktion_engine::FadeInOutAudioNode</class>
    <class kind="struct">tracktion_engine::FadeInOutEffect</class>
    <class kind="class">tracktion_engine::FadeInOutNode</class>
    <class kind="struct">tracktion_engine::FileDragList</class>
    <class kind="class">tracktion_engine::FloatAudioFormat</class>
    <class kind="class">tracktion_engine::FolderTrack</class>
    <class kind="class">tracktion_engine::FourOscPlugin</class>
    <class kind="class">tracktion_engine::FreezePointPlugin</class>
    <class kind="class">tracktion_engine::GrooveTemplate</class>
    <class kind="class">tracktion_engine::GrooveTemplateManager</class>
    <class kind="class">tracktion_engine::HostedAudioDeviceInterface</class>
    <class kind="class">tracktion_engine::HostedMidiInputDeviceNode</class>
    <class kind="class">tracktion_engine::IconProG2</class>
    <class kind="class">tracktion_engine::ImpulseResponsePlugin</class>
    <class kind="class">tracktion_engine::InputDevice</class>
    <class kind="class">tracktion_engine::InputDeviceInstance</class>
    <class kind="struct">tracktion_engine::InputProvider</class>
    <class kind="class">tracktion_engine::InsertPlugin</class>
    <class kind="class">tracktion_engine::InsertReturnNode</class>
    <class kind="class">tracktion_engine::InsertSendNode</class>
    <class kind="class">tracktion_engine::InsertSendReturnDependencyNode</class>
    <class kind="struct">tracktion_engine::InvertEffect</class>
    <class kind="struct">tracktion_engine::KeyResult</class>
    <class kind="class">tracktion_engine::LambdaTimer</class>
    <class kind="class">tracktion_engine::LAMEManager</class>
    <class kind="class">tracktion_engine::LatencyPlugin</class>
    <class kind="class">tracktion_engine::LevelMeasurer</class>
    <class kind="class">tracktion_engine::LevelMeasurerProcessingNode</class>
    <class kind="class">tracktion_engine::LevelMeasuringNode</class>
    <class kind="class">tracktion_engine::LevelMeterPlugin</class>
    <class kind="class">tracktion_engine::LFOModifier</class>
    <class kind="class">tracktion_engine::LinEnvelope</class>
    <class kind="struct">tracktion_engine::LiveClipLevel</class>
    <class kind="class">tracktion_engine::LiveMidiInjectingNode</class>
    <class kind="class">tracktion_engine::LiveMidiOutputNode</class>
    <class kind="class">tracktion_engine::LoopInfo</class>
    <class kind="class">tracktion_engine::LowPassPlugin</class>
    <class kind="class">tracktion_engine::MackieC4</class>
    <class kind="class">tracktion_engine::MackieMCU</class>
    <class kind="class">tracktion_engine::MackieXT</class>
    <class kind="class">tracktion_engine::MacroParameter</class>
    <class kind="class">tracktion_engine::MacroParameterElement</class>
    <class kind="class">tracktion_engine::MacroParameterList</class>
    <class kind="struct">tracktion_engine::MakeMonoEffect</class>
    <class kind="class">tracktion_engine::MarkerClip</class>
    <class kind="class">tracktion_engine::MarkerManager</class>
    <class kind="struct">tracktion_engine::MarkerSetting</class>
    <class kind="class">tracktion_engine::MarkerTrack</class>
    <class kind="class">tracktion_engine::MasterTrack</class>
    <class kind="class">tracktion_engine::MelodyneFileReader</class>
    <class kind="class">tracktion_engine::MelodyneNode</class>
    <class kind="class">tracktion_engine::MessageThreadCallback</class>
    <class kind="class">tracktion_engine::MidiAssignable</class>
    <class kind="struct">tracktion_engine::MidiChannel</class>
    <class kind="class">tracktion_engine::MidiClip</class>
    <class kind="class">tracktion_engine::MidiCompManager</class>
    <class kind="class">tracktion_engine::MidiControllerEvent</class>
    <class kind="struct">tracktion_engine::MidiExpression</class>
    <class kind="class">tracktion_engine::MidiInputDevice</class>
    <class kind="class">tracktion_engine::MidiInputDeviceNode</class>
    <class kind="class">tracktion_engine::MidiLearnState</class>
    <class kind="class">tracktion_engine::MidiList</class>
    <class kind="struct">tracktion_engine::MidiMessageArray</class>
    <class kind="class">tracktion_engine::MidiModifierPlugin</class>
    <class kind="class">tracktion_engine::MidiNode</class>
    <class kind="class">tracktion_engine::MidiNote</class>
    <class kind="class">tracktion_engine::MidiNoteDispatcher</class>
    <class kind="class">tracktion_engine::MidiOutputDevice</class>
    <class kind="class">tracktion_engine::MidiOutputDeviceInstance</class>
    <class kind="class">tracktion_engine::MidiOutputDeviceInstanceInjectingNode</class>
    <class kind="class">tracktion_engine::MidiPatchBayPlugin</class>
    <class kind="class">tracktion_engine::MidiProgramManager</class>
    <class kind="class">tracktion_engine::MidiSysexEvent</class>
    <class kind="class">tracktion_engine::MIDITrackerModifier</class>
    <class kind="struct">tracktion_engine::Modifier</class>
    <class kind="class">tracktion_engine::ModifierList</class>
    <class kind="class">tracktion_engine::ModifierNode</class>
    <class kind="struct">tracktion_engine::ModifierTimer</class>
    <class kind="class">tracktion_engine::MouseHoverDetector</class>
    <class kind="struct">tracktion_engine::MPEStartTrimmer</class>
    <class kind="class">tracktion_engine::MultiThreadedNodePlayer</class>
    <class kind="class">tracktion_engine::MultiVoiceOscillator</class>
    <class kind="struct">tracktion_engine::MuteAudioNode</class>
    <class kind="class">tracktion_engine::NodeRenderContext</class>
    <class kind="struct">tracktion_engine::NormaliseEffect</class>
    <class kind="class">tracktion_engine::NovationRemoteSl</class>
    <class kind="struct">tracktion_engine::OldEditConversion</class>
    <class kind="class">tracktion_engine::Oscillator</class>
    <class kind="class">tracktion_engine::OutputDevice</class>
    <class kind="class">tracktion_engine::OutputDeviceInstance</class>
    <class kind="class">tracktion_engine::ParameterChangeHandler</class>
    <class kind="class">tracktion_engine::ParameterControlMappings</class>
    <class kind="class">tracktion_engine::ParameterisableDragDropSource</class>
    <class kind="struct">tracktion_engine::ParameterSetting</class>
    <class kind="class">tracktion_engine::PatchBayPlugin</class>
    <class kind="class">tracktion_engine::PatternGenerator</class>
    <class kind="class">tracktion_engine::PhaserPlugin</class>
    <class kind="class">tracktion_engine::PhysicalMidiInputDevice</class>
    <class kind="struct">tracktion_engine::Pitch</class>
    <class kind="class">tracktion_engine::PitchSequence</class>
    <class kind="class">tracktion_engine::PitchSetting</class>
    <class kind="struct">tracktion_engine::PitchShiftEffect</class>
    <class kind="class">tracktion_engine::PitchShiftPlugin</class>
    <class kind="struct">tracktion_engine::PlaybackInitialisationInfo</class>
    <class kind="class">tracktion_engine::PlayHead</class>
    <class kind="class">tracktion_engine::PlayHeadPositionNode</class>
    <class kind="class">tracktion_engine::Plugin</class>
    <class kind="class">tracktion_engine::PluginAudioNode</class>
    <class kind="class">tracktion_engine::PluginCache</class>
    <class kind="struct">tracktion_engine::PluginComponent</class>
    <class kind="struct">tracktion_engine::PluginCreationInfo</class>
    <class kind="struct">tracktion_engine::PluginEffect</class>
    <class kind="struct">tracktion_engine::PluginInitialisationInfo</class>
    <class kind="class">tracktion_engine::PluginList</class>
    <class kind="class">tracktion_engine::PluginManager</class>
    <class kind="class">tracktion_engine::PluginNode</class>
    <class kind="struct">tracktion_engine::PluginRenderContext</class>
    <class kind="struct">tracktion_engine::PluginWetDryAutomatableParam</class>
    <class kind="struct">tracktion_engine::PluginWindowState</class>
    <class kind="struct">tracktion_engine::ProcessState</class>
    <class kind="class">tracktion_engine::Project</class>
    <class kind="class">tracktion_engine::ProjectItem</class>
    <class kind="class">tracktion_engine::ProjectItemID</class>
    <class kind="class">tracktion_engine::ProjectManager</class>
    <class kind="class">tracktion_engine::ProjectSearchIndex</class>
    <class kind="class">tracktion_engine::PropertyStorage</class>
    <class kind="class">tracktion_engine::QuantisationType</class>
    <class kind="struct">tracktion_engine::RackConnection</class>
    <class kind="class">tracktion_engine::RackInstance</class>
    <class kind="class">tracktion_engine::RackInstanceNode</class>
    <class kind="class">tracktion_engine::RackNodePlayer</class>
    <class kind="class">tracktion_engine::RackReturnNode</class>
    <class kind="class">tracktion_engine::RackType</class>
    <class kind="class">tracktion_engine::RackTypeList</class>
    <class kind="struct">tracktion_engine::Ramp</class>
    <class kind="class">tracktion_engine::RandomModifier</class>
    <class kind="class">tracktion_engine::RecordingThumbnailManager</class>
    <class kind="class">tracktion_engine::ReferenceCountedValueTree</class>
    <class kind="class">tracktion_engine::ReferencedMaterialList</class>
    <class kind="class">tracktion_engine::RemoteSLCompact</class>
    <class kind="class">tracktion_engine::Renderer</class>
    <class kind="class">tracktion_engine::RenderManager</class>
    <class kind="class">tracktion_engine::RenderOptions</class>
    <class kind="class">tracktion_engine::ReverbPlugin</class>
    <class kind="struct">tracktion_engine::ReverseEffect</class>
    <class kind="class">tracktion_engine::ReverseRenderJob</class>
    <class kind="class">tracktion_engine::SamplerPlugin</class>
    <class kind="class">tracktion_engine::Scale</class>
    <class kind="struct">tracktion_engine::ScopedBenchmark</class>
    <class kind="struct">tracktion_engine::ScopedCpuMeter</class>
    <class kind="struct">tracktion_engine::ScopedDirectoryDeleter</class>
    <class kind="struct">tracktion_engine::ScopedPluginUnloadInhibitor</class>
    <class kind="class">tracktion_engine::ScopedSteadyLoad</class>
    <class kind="class">tracktion_engine::ScopedWaitCursor</class>
    <class kind="class">tracktion_engine::SearchOperation</class>
    <class kind="class">tracktion_engine::Selectable</class>
    <class kind="class">tracktion_engine::SelectableClass</class>
    <class kind="class">tracktion_engine::SelectableClassWithPan</class>
    <class kind="class">tracktion_engine::SelectableClassWithVolume</class>
    <class kind="struct">tracktion_engine::SelectableList</class>
    <class kind="class">tracktion_engine::SelectableListener</class>
    <class kind="class">tracktion_engine::SelectedMidiEvents</class>
    <class kind="class">tracktion_engine::SelectionManager</class>
    <class kind="class">tracktion_engine::SharedLevelMeasurer</class>
    <class kind="class">tracktion_engine::SharedLevelMeasuringNode</class>
    <class kind="class">tracktion_engine::SimpleLFO</class>
    <class kind="class">tracktion_engine::SingleInputAudioNode</class>
    <class kind="class">tracktion_engine::SmartThumbnail</class>
    <class kind="class">tracktion_engine::SoftwareMidiOutputDevice</class>
    <class kind="struct">tracktion_engine::SortedValueTreeObjectList</class>
    <class kind="class">tracktion_engine::SourceFileReference</class>
    <class kind="struct">tracktion_engine::SpeedFadeDescription</class>
    <class kind="class">tracktion_engine::SpeedRampAudioNode</class>
    <class kind="class">tracktion_engine::SpeedRampWaveNode</class>
    <class kind="struct">tracktion_engine::Spline</class>
    <class kind="class">tracktion_engine::StepClip</class>
    <class kind="class">tracktion_engine::StepModifier</class>
    <class kind="struct">tracktion_engine::StepVolumeEffect</class>
    <class kind="struct">tracktion_engine::StopwatchTimer</class>
    <class kind="class">tracktion_engine::SubSampleWaveAudioNode</class>
    <class kind="struct">tracktion_engine::SuffixedParameter</class>
    <class kind="class">tracktion_engine::TempoDetect</class>
    <class kind="class">tracktion_engine::TemporaryFileManager</class>
    <class kind="class">tracktion_engine::TempoSequence</class>
    <class kind="class">tracktion_engine::TempoSequencePosition</class>
    <class kind="class">tracktion_engine::TempoSetting</class>
    <class kind="class">tracktion_engine::TempoTrack</class>
    <class kind="class">tracktion_engine::TextPlugin</class>
    <class kind="class">tracktion_engine::ThreadPoolJobWithProgress</class>
    <class kind="struct">tracktion_engine::TimecodeDisplayFormat</class>
    <class kind="struct">tracktion_engine::TimecodeDisplayIterator</class>
    <class kind="class">tracktion_engine::TimecodeDuration</class>
    <class kind="struct">tracktion_engine::TimecodeSnapType</class>
    <class kind="class">tracktion_engine::TimedMutingAudioNode</class>
    <class kind="class">tracktion_engine::TimedMutingNode</class>
    <class kind="class">tracktion_engine::TimeSigSetting</class>
    <class kind="class">tracktion_engine::TimeStretcher</class>
    <class kind="class">tracktion_engine::TimeStretchingWaveNode</class>
    <class kind="class">tracktion_engine::ToneGeneratorPlugin</class>
    <class kind="class">tracktion_engine::Track</class>
    <class kind="struct">tracktion_engine::TrackAutomationSection</class>
    <class kind="class">tracktion_engine::TrackCompManager</class>
    <class kind="struct">tracktion_engine::TrackInsertPoint</class>
    <class kind="class">tracktion_engine::TrackItem</class>
    <class kind="struct">tracktion_engine::TrackList</class>
    <class kind="class">tracktion_engine::TrackMidiInputDeviceNode</class>
    <class kind="class">tracktion_engine::TrackMuteState</class>
    <class kind="class">tracktion_engine::TrackMutingNode</class>
    <class kind="class">tracktion_engine::TrackOutput</class>
    <class kind="struct">tracktion_engine::TrackSection</class>
    <class kind="class">tracktion_engine::TracktionArchiveFile</class>
    <class kind="class">tracktion_engine::TracktionEngineNode</class>
    <class kind="class">tracktion_engine::TracktionNodePlayer</class>
    <class kind="class">tracktion_engine::TracktionThumbnail</class>
    <class kind="class">tracktion_engine::TrackWaveInputDeviceNode</class>
    <class kind="struct">tracktion_engine::TransparentToMouseInTrackItemComp</class>
    <class kind="class">tracktion_engine::TransportControl</class>
    <class kind="class">tracktion_engine::TranzportControlSurface</class>
    <class kind="class">tracktion_engine::UIBehaviour</class>
    <class kind="class">tracktion_engine::ValueSmoother</class>
    <class kind="struct">tracktion_engine::ValueTreeAllEventListener</class>
    <class kind="struct">tracktion_engine::ValueTreeComparator</class>
    <class kind="class">tracktion_engine::ValueTreeObjectList</class>
    <class kind="class">tracktion_engine::VCAPlugin</class>
    <class kind="class">tracktion_engine::VirtualMidiInputDevice</class>
    <class kind="class">tracktion_engine::VolumeAndPanPlugin</class>
    <class kind="struct">tracktion_engine::VolumeEffect</class>
    <class kind="class">tracktion_engine::VSTXML</class>
    <class kind="struct">tracktion_engine::WarpMarker</class>
    <class kind="struct">tracktion_engine::WarpTimeEffect</class>
    <class kind="class">tracktion_engine::WarpTimeFactory</class>
    <class kind="class">tracktion_engine::WarpTimeManager</class>
    <class kind="class">tracktion_engine::WarpTimeRenderJob</class>
    <class kind="class">tracktion_engine::WaveAudioClip</class>
    <class kind="class">tracktion_engine::WaveAudioNode</class>
    <class kind="class">tracktion_engine::WaveCompManager</class>
    <class kind="struct">tracktion_engine::WaveDeviceDescription</class>
    <class kind="class">tracktion_engine::WaveInputDevice</class>
    <class kind="class">tracktion_engine::WaveInputDeviceNode</class>
    <class kind="class">tracktion_engine::WaveInputRecordingThread</class>
    <class kind="class">tracktion_engine::WaveNode</class>
    <class kind="class">tracktion_engine::WaveOutputDevice</class>
    <class kind="class">tracktion_engine::WaveOutputDeviceInstance</class>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SampleCount</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af6e78e734757e52f0c102915ff0e31af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::Range&lt; SampleCount &gt;</type>
      <name>SampleRange</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7ea280cde41080ecb2a991c485b516a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>HashCode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adb3c6f33fbcba4c6e5d7cfd390aecbec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CloseGap</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a16c1e3b7c9024479b819754ccca67617</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a16c1e3b7c9024479b819754ccca67617a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a16c1e3b7c9024479b819754ccca67617aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MoveClipAction</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acd25807c96b4f856485e08678a4725fb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba689bf948adf5d301d601b677fe1d95a9">moveToEndOfLast</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fbad98c519c261eac28a987e2cd523d2efb">moveToStartOfNext</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba6c946346c9811d724e9aabb70d992aac">moveStartToCursor</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="acd25807c96b4f856485e08678a4725fba76fc3972a4183c47e5f8cebdc5371526">moveEndToCursor</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimecodeType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4f395d9883e2e8cd69c9468c77cbd4bb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba89e893579b272eb562aa17cb401ac7b7">millisecs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba77c84d786e6839a25295c0e73b3342c9">barsBeats</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bbaa2dc2407a46ee1b7331225183f4b34c0">fps24</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba745ffcdd19b34f7d8d4028a0380f7808">fps25</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a4f395d9883e2e8cd69c9468c77cbd4bba51b0fa64094004b47e32034da78f7a75">fps30</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawDefault</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caac3b3ee588b7aca7018001352dd62dd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawLinear</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa53ea4741bc00eabe00cbabf82ed11c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw2point5dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa77e3ee143e29fa13dfcd9b377ef865f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw3dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa052bb90f622c73ae79755b370e1fe1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw4point5dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caa1bcdec0af35c06ae926519471764ac88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw6dBCenter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa66979ba0d42f3a7acd9b009ad4726caacff9d2cd6c027f7aa876c6112e885ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SettingID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a621c43a54efb4eb950c0b1cad5e97eac</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafedb2d84cafe20862cb4399751a8a7e3">invalid</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf4a6dd1d859d0c75be53bdd8e10903e6">addAntiDenormalNoise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabae1d66bf6e7bd077603dd923ab3ef3c">audio_device_setup</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca36ff6680f35223d9a37377f7e849d82c">audiosettings</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab570b65e1f142172d29d10553384b1ba">autoFreeze</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaabdbefcb7beb917dea85d1ce8acedb14">autoTempoMatch</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49d0b9d90b866b75dd141d2c139eeb82">autoTempoDetect</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca415ada9d2d71ce32a632151ae7131d33">automapVst</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae0caca9a9974a0eb4e76cc511f42293f">automapNative</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8abed3d089b4528c2023ebd418b934ba">automapGuids1</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacada19f4cd43cb28828063fcb18bee2a69">automapGuids2</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca146bdabbf35fb3c93ba9780757a03ef3">cacheSizeSamples</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa8360068305889e0630dbea1c25fd008">compCrossfadeMs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca64c13455dd1fe041ad15987c09caaaf9">countInMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf9ceba609737c6c58f0ee7c4179db4a1">clickTrackMidiNoteBig</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae126f9e6072e4c7b39fc46ac354a3922">clickTrackMidiNoteLittle</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae4cb99e059e6526c7dd0bc4647ca6cdc">clickTrackSampleSmall</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca07fd0fba07d9b1098131ba5689befcd0">clickTrackSampleBig</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca33317b96a63f7c2c075553f62c40c988">crossfadeBlock</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad9747e2da342bdb995f6389533ad1a3d">cpu</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5b28355506754f09c1aefddd2b83ed0b">customMidiControllers</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca732b8be068c98a77b3b321705c16c9c4">deadMansPedal</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa62e6a9b96a5a46ca1e8df8bdf61f22a">defaultMidiOutDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca015769f76c6033c69d783a89b0afedf3">defaultWaveOutDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafea66fb91cbf2d78d2bace53a399d84f">defaultMidiInDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8873e2c579f6e0cdad6bf53c14440209">defaultWaveInDevice</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaab5dbffa8d328b4ee3c038b03db636a9">externControlIn</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca15b23b93b04ee1f66a8e853395711d8b">externControlOut</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad3b6c594a822b4858b52daef222f5921">externControlNum</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadb759e79468893b2baaf9556d47bf22d">externControlMain</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca31b14445c2b17c9d967b7319d731a1a8">externControlShowSelection</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1918ff077a302b29d9bac97cc5eb70cc">externControlSelectionColour</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf37db2cd80d1ec81f8201a888987e99e">externControlEnable</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca386ac11ab2989a84b771e586cb83ef80">externOscInputPort</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8b69d1116ebfb1e0a04d282b51214bc8">externOscOutputPort</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6c0181cbf07dc90e143aa5dabbee22d8">externOscOutputAddr</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3a2da2036002bcc377f599727cf771d5">filterControlMappingPresets</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca93f5564cc510d197a37af4fae5acd88c">filterGui</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca133823cfadbff75b8d9d7b3c4f4fdaf4">fitClipsToRegion</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6a7d0e75a9396fcc5c73218ffd2f1e6a">findExamples</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaea96cab3cbe5d21dbdc9f8834885a71e">freezePoint</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1ef2784670057be89a5320f13bfcbca4">hasEnabledMidiDefaultDevs</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca13cdced4c5e7c68ee57a6667491a2fa4">glideLength</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacacb2c1d30fff1f26672afd4f682e279fe">grooveTemplates</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad4be0f64bf0d12c19719d73ee2e7dd2a">knownPluginList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca8f618cf8b9d6f75493e756fe3e742d40">knownPluginList64</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0852db5a857dd043f95d3af0bb73fac9">lameEncoder</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae35835e50542993db63c630df92d181f">lastClickTrackLevel</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca69eb61fb57e7ffd44f2b08134080f334">lastEditRender</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadf6f056bd22d8a4e86d91b964bcb7163">lowLatencyBuffer</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca08742b9203bf4d5ffb9c20ee2111866f">MCUoneTouchRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca7829fddc435afb7d958bdde7713394b1">maxLatency</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3f76e19b8be570ab42fa74157fd3c8af">midiin</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2e68786ada734ce9728d1738fb0b21d4">midiout</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae492cd4c2633cc4beba787942b8d55c1">midiEditorOctaves</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa77620469659abf39ab038d1a96cfd20">midiProgramManager</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5cbf4c22d5264f26fe59bc8c4962f8b3">newMarker</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5c055d665fa2b6d747d438549bb2b336">numThreadsForPluginScanning</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaab3be0baacb19d5b398e3ad4e760e2d5">projectList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca35a2864c314e4367eb1684bfe126a967">projects</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1c2daf6d2feb296a59ff633379d58480">recentProjects</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaff8ed4f53819dcf20438b964fec10fa2">renameClipRenamesSource</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2cdbd15b771628de0256bab7909a8046">renameMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca4f0f5be4892f3fd7fe272df168c73857">renderRecentFilesList</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacacd1c9a0f8b4bc4d561b5be14b040a19e">resetCursorOnStop</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6118d3bbbb834510d5533f4d2b721cf0">retrospectiveRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca51c42b14b1831fc29eec3a15c27b5f41">reWireEnabled</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0cc34e5dab44f5677beb8606ddbd364e">safeRecord</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca4575629cfb51fb2d9487ee2d907ee1b8">sendControllerOffMessages</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab2743c7f7477f7d812ecf5ad60fddd2b">simplifyAfterRecording</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab25669aa29c4de54cf3e79e75630600e">snapCursor</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca7065a657acc31d03990ae857307cb984">tempDirectory</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf20e670bd4b44c06095587c42c059a57">trackExpansionMode</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca117764216c0ac64c6b8db535df3eac30">use64Bit</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa5d51cbdfb33b9d96114dd79348a8a0e">xFade</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca87154d5531917a96b35bae4993259a37">xtCount</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49b2d1e2befcd40dfea67e1daf091dc4">xtIndices</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadc17b81e0fcc4244d653e30e5552af7f">virtualmididevices</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca30c1138f8420913e5253a0fd215212f4">virtualmidiin</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae09c5665396629f42adc7c8fd637137b">useSeparateProcessForScanning</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca060c0316a269e325c58b3984fec89e7a">useRealtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacac733e4221d487351d76843e7d172fa06">wavein</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca33871eeb66dd165b9d0482fb8585ab32">waveout</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacae044eeed17ec4bc3c3258fe518fa6460">windowsDoubleClick</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca0a161e311b986d94825458f8e192e54b">renderFormat</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabfe9884d29a1bc6c20535b21feb81fcc">trackRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca1b874b9100170a2bfc595c462997355e">trackRenderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca32dc181ee9a3989f69390fd115610849">bypassFilters</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacab3d70f37909a1657efd2efeae8f95d86">markedRegion</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca82f6a120d0d01ec5ba611f8a4493d581">editClipRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca67d48752bee2d7b159258294f638226f">editClipRenderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca102baf00f489b06c966ec93503af4bdc">editClipRenderDither</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2501b72cee1761c35c2e8b90d2741be3">editClipRealtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacac064c494b752ea8be2d4289a9c9c2fdf">editClipRenderStereo</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca71ca533d7470e635df1021f64cd6bf26">editClipRenderNormalise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca2e6f92476054e669cc36cb60887a82ab">editClipRenderRMS</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaa9d038283f7b683fc08b5bd90c9d58c9">editClipRenderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaff89a6921c18e2d9a340be45b0c8c7e2">editClipRenderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca13e9ee05f30bd1994fa972300ba96f5a">editClipPassThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaf2632d3ae14c6bc38a44a524a1c3bfde">exportFormat</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacafba022231b903d6edb8fe1ee5b50c442">renderOnlySelectedClips</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6355d6a086c29f993cf48fccab4b09bd">renderOnlyMarked</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca3e63b09d6c9384cf6189ae1cde6288cf">renderNormalise</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca08e87b5239d6cf0be149b139f3cb1836">renderRMS</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5a4a44cc3a53ec31714031bf8801dc45">renderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca49439ce96bbe5130e3c5573993eb2a3f">renderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad8de6460b5cb7402a2feef9655663462">renderTrimSilence</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacabd3bdf946b94629a735ee2e5cd30e44e">renderSampRate</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacadc32e81c91da85b1a1e87f4206aa8993">renderStereo</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca5d87425648c90ff47bb1d8b70a4c82be">renderBits</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca6a2c3de0c23697686dbcbd562dccc46e">renderDither</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacad66636b253cb346dbb6240e30def3618">quality</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eacaebf43e996821d24d05eda0d2450c1b0c">addId3Info</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca37e2a166d3ab28426a1d1a481d356d33">realtime</enumvalue>
      <enumvalue file="namespacetracktion__engine.html" anchor="a621c43a54efb4eb950c0b1cad5e97eaca01372905495e6c5db01a5baa92da0d98">passThroughFilters</enumvalue>
    </member>
    <member kind="function">
      <type>juce::Array&lt; KeyResult &gt;</type>
      <name>determineKeyOfNotes</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abe0e1401ed2f8667c2e6988872e7752e</anchor>
      <arglist>(const juce::Array&lt; MidiNote * &gt; &amp;notes)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adda4384b57ce315f1ea0988f45bacb43</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierType * &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa851f05562d4dd8233c0129d6922edb0</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParameter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a47f3f5e0016ed1e31b7092f74326ecae</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsForSource</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0ad3afe1679b36c30be67c62739d739a</anchor>
      <arglist>(Edit &amp;edit, const ModifierSourceType &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierSource *</type>
      <name>getSourceForAssignment</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ff95a135ac99b3125d82fd0da04b18e</anchor>
      <arglist>(const AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getAllParametersBeingModifiedBy</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a15b394752734cdc911dc3fee440a1c96</anchor>
      <arglist>(Edit &amp;, AutomatableParameter::ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getParameter</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a21aea0d368133be8e80537c3029f1f14</anchor>
      <arglist>(AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae178fff17ebb08839f891aabb46675fc</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBoolParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8d9684c9b1f5dff29d24ef094c93bb69</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getTypedParamValue</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1ff3e509fb281eb1b6870e11b0a5f1d</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>simplify</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adbd7afa493000198de35c53a092969dd</anchor>
      <arglist>(AutomationCurve &amp;, int strength, EditTimeRange range)</arglist>
    </member>
    <member kind="function">
      <type>MacroParameter::Ptr</type>
      <name>getMacroParameterForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a612b719ecf107aedd3d17e56a651549e</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getOwnerPlugin</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd04601f5ef5adc173288bd0cb827b1b</anchor>
      <arglist>(MacroParameterList *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierType &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a98e603ac34b5295a1f841caafbc75ff0</anchor>
      <arglist>(const ModifierList &amp;ml)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e7932644221356e289f5830bfa8e929</anchor>
      <arglist>(ModifierList &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3f693a481bd0c76efaef9918f318a86c</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a57bb0d4a9fa1223d3c5bd184d08a5214</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromProjectManager</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5942543dc42901e4ebf512d0a928ef68</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>add7837b714ace371f92271e9e260dc07</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2acb0714054805da01e82681b8ce804a</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae829e0bdd800bba532ba110250ba8ed5</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41b3c93e6fdada6b4a73f2d70a9b70e0</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFileFromProjectManager</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a201d51dad3a8a5fc6001bd4eab159cd4</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>referencesProjectItem</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad58248d85c9cbf4edaadfa446e137232</anchor>
      <arglist>(Edit &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aded9016c1e855cf3b433d415a91c091b</anchor>
      <arglist>(Edit &amp;, EditTimeRange timeRangeToInsert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEditFromBeatRange</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4fd8bbb659561b7b0e9721cff256c738</anchor>
      <arglist>(Edit &amp;, juce::Range&lt; double &gt; beatRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a04f8888ce9f6913699a26f4a15763e82</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTopLevelTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a674eb24c20bec405b0dd5ffbdfacb2a1</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackType * &gt;</type>
      <name>getTracksOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a37b29ab862276f4d614c9b1ccaf7b049</anchor>
      <arglist>(const Edit &amp;, bool recursive)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAudioTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1b39d27168c744769f2d02b915fdb4dc</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipTrack * &gt;</type>
      <name>getClipTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adab91a0ea0b6248a5c31edf35610571a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a35ab08dd7c4adeaf859822a0debdedce</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af69e9acaf974750bf4dbc190bc1fb12d</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findTracksForIDs</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0f93e4e56a96b4f3a9eb78c3ce8ae34d</anchor>
      <arglist>(const Edit &amp;, const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a702ee37377fa4873a23c34a799e7d22f</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getFirstAudioTrack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a96f274ba7fbe7325dacd85c18c0a5b28</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findAllTracksContainingSelectedItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adf7cd95c6d7256605d1bef41892f4824</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>findFirstClipTrackFromSelection</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9c77bcf35161a773416cf1103b7714b0</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsTrack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab3c522db2cc41e383e1e30bd41108036</anchor>
      <arglist>(const Edit &amp;, const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getTrackOutput</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7033a1faea6142e518c41bd22bb5f008</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>toBitSet</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad3809a51a3d9acf54db53ecd8b50a2c7</anchor>
      <arglist>(const juce::Array&lt; Track * &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>toTrackArray</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab0bb7f50e26236388eb6e3d20031dea1</anchor>
      <arglist>(Edit &amp;, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a36a43a86cc2163099817239083d31a91</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5f5a31d85366304b18e8dba7fa149d66</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af026eaa414d01c232126e5a9660ca318</anchor>
      <arglist>(const Edit &amp;, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>duplicateClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aee5976171d65806059b5f5b72b442142</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTrackItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6ee10fe6f1ee97b1e7262fd526d6a335</anchor>
      <arglist>(const Edit &amp;, std::function&lt; bool(TrackItem &amp;)&gt;)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getTimeRangeForSelectedItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a265a532d87e3c0b50ff1f42a7c10e2e1</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfTracks</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ef3ea472870a7582131ea2342772007</anchor>
      <arglist>(Edit &amp;, EditTimeRange rangeToDelete, bool onlySelectedTracks, CloseGap, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6f48b51569119e3f9c08c1c812651347</anchor>
      <arglist>(Clip &amp;, EditTimeRange rangeToDelete)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfSelectedClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5d3451d88b981e83401afff10f680673</anchor>
      <arglist>(SelectionManager &amp;, EditTimeRange rangeToDelete, CloseGap, bool moveAllSubsequentClipsOnTrack)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>splitClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a771010933d121c8104ecf3eb0dad4199</anchor>
      <arglist>(const SelectableList &amp;clips, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSelectedClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7014d899eb008d11d8f788355926d765</anchor>
      <arglist>(const SelectableList &amp;, Edit &amp;, MoveClipAction mode, bool alsoMoveAutomation)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>getClipSelectionWithCollectionClipContents</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1fbb7899ea7b5ac9b0720504303d44df</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>getAllClipEffects</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aebcd977354b0044d278b7b6bf1644630</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>findNoteForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab06afe5c8c12e06674689b9328f6d0c1</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>mergeMidiClips</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9c0d9c51fe09f53456b7eddebbca9b9b</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a310594e88e7f82014b58a55b441d074e</anchor>
      <arglist>(const Edit &amp;, bool includeMasterVolume)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForState</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a53da2b27ef4d50daa4dc9ab7426c87b9</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingPlugin</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6a1f7e916f2402cfb7c05565a03a41ad</anchor>
      <arglist>(const Edit &amp;, const Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyPluginsMissing</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a896b6c807f0762c9b60b66d5ab6aa91b</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; RackInstance * &gt;</type>
      <name>getRackInstancesInEditForType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2b31433906d1db535c89642733f3ccb8</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmuteAllPlugins</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9380a7766bcc02c44b426cdec3922a25</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa12269863fd0fb62e5a916cf070b8e54</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomation</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae8300c8e382149ab28c3dc95e22125ce</anchor>
      <arglist>(const SelectableList &amp;selectedClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter::ModifierSource * &gt;</type>
      <name>getAllModifierSources</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a064c3b7d6b18491d387115889567916b</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getAllModifiers</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6b9276e52d1bf4d75ab261c1acef2d55</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType::Ptr</type>
      <name>findModifierTypeForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a23dd12c98f230adfbee935cb0da4f464</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad993f96fec112ba4e60909cfe34afc55</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a08c4d4f51efbf2fe73bd55e676734af5</anchor>
      <arglist>(const RackType &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingModifier</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a91d0ead7bbf6d5f15b1314ce3d18bf</anchor>
      <arglist>(const Edit &amp;, const Modifier::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterList * &gt;</type>
      <name>getAllMacroParameterLists</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85cb0f773d4760ce522a1334330975d6</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterElement * &gt;</type>
      <name>getAllMacroParameterElements</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a51effcef8fc664123a228207e61c269d</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8d25b5c44c43a506ae054ed0b792f0b8</anchor>
      <arglist>(const PitchSetting &amp;p1, const PitchSetting &amp;p2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAutomation</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5aa8cd25f0f5bf20949d68e146ab537e</anchor>
      <arglist>(const juce::Array&lt; TrackAutomationSection &gt; &amp;, double offset, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findIndexOfNextItemAt</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7617f7f67cc68a5311c1f4e341f4473c</anchor>
      <arglist>(const ArrayType &amp;items, double time)</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>findUnionOfEditTimeRanges</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa18dbb33ea905a1cae8f222f8cf1045c</anchor>
      <arglist>(const ArrayType &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae43e0fba3266cff6627babe771df8dc9</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; EditTimeRange &gt; &amp;muteTimes, const juce::Array&lt; EditTimeRange &gt; &amp;nonMuteTimes, double crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createAudioNode</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a51d1259877ffef33280720695eea7517</anchor>
      <arglist>(TrackCompManager::TrackComp &amp;trackComp, Track &amp;t, AudioNode *input)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>createDescriptionOfChannels</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa7ab31ffc0d6806ae6b966e1f28d25da</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>createChannelSet</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ada4e8ec6d3c75ae3058e88fa06f6f1af</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channelTypeFromAbbreviatedName</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a582ff235c909d633d529ffeb3597857e</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>channelSetFromSpeakerArrangmentString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a474276631b9684875b75cd10bd1a964c</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac6e65fdde0ac537152023a63b570c5ca</anchor>
      <arglist>(EditPlaybackContext &amp;, std::atomic&lt; double &gt; &amp;audibleTimeToUpdate, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa96aea0640e39d77eedec89fe6519dd9</anchor>
      <arglist>(Edit &amp;, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toStart</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a81a933955774e6d8535d4d9297791858</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toEnd</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a87656783d8e57aaf57299212edcecbe4</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a033e50a5e7ed514dc3096c64860f92f4</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa7915202ce156fd9aa7f8d5092ddfa81</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a30d9eebc4e9fc212499bf9787f3c6bed</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a64bc52bc5f057669e03b2409dfb40e35</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrub</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa540e1a553250d9b10d1e0a86120ea13</anchor>
      <arglist>(TransportControl &amp;, double unitsForwards)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContextIfNotRecording</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5633f63fe294ecb018e52318c705ff54</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad1a4019b7d3e3c0a61eb54540cc2585a</anchor>
      <arglist>(AirWindowsADClip7, &quot;ADClip 7&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af0219a3bd1fd01ebad5c0bd39e316a3e</anchor>
      <arglist>(AirWindowsADT, &quot;ADT&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb9012ae7574d02676cd049b76349bed</anchor>
      <arglist>(AirWindowsAQuickVoiceClip, &quot;A Quick Voice Clip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a701fefd7269cbd60985548aed96fa2c5</anchor>
      <arglist>(AirWindowsAcceleration, &quot;Acceleration&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a012f20690dd855ea0935bce48ceb820a</anchor>
      <arglist>(AirWindowsAir, &quot;Air&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5a8f3ad8616c21d9b067920a4f4eb7ab</anchor>
      <arglist>(AirWindowsAtmosphereBuss, &quot;Atmosphere Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3c520830da760540fef03be0d7f7ec4f</anchor>
      <arglist>(AirWindowsAtmosphereChannel, &quot;Atmosphere Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9315c1d01a70fe1a287b3a8f1e8293e</anchor>
      <arglist>(AirWindowsAura, &quot;Aura&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aba37134f6f63b66d915741fa1825cba7</anchor>
      <arglist>(AirWindowsAverage, &quot;Average&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1e94b93dbb2cd5b9ddb14e10ab4623f1</anchor>
      <arglist>(AirWindowsBassDrive, &quot;Bass Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af2e984837655a86b31572262e678928c</anchor>
      <arglist>(AirWindowsBassKit, &quot;Bass Kit&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a04739ce328285829acf2c9e9a6150c8a</anchor>
      <arglist>(AirWindowsBiquad, &quot;Biquad&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24053541bce6c8633a76009859f5c0c9</anchor>
      <arglist>(AirWindowsBiquad2, &quot;Biquad 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab6c55b39411d4d62dcb6c5876922fd5a</anchor>
      <arglist>(AirWindowsBitGlitter, &quot;Bit Glitter&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7e66f8684f57a5eade3d30a71b7d9292</anchor>
      <arglist>(AirWindowsBitShiftGain, &quot;Bit Shift Gain&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0023ac9bb0de3bd0387caaee4456c797</anchor>
      <arglist>(AirWindowsBite, &quot;Bite&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5dbe84395ced54b75259b23837286213</anchor>
      <arglist>(AirWindowsBlockParty, &quot;Block Party&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a32af09593c6b98e61b44c3a22ebd2d52</anchor>
      <arglist>(AirWindowsBrassRider, &quot;Brass Rider&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acfc58cf49bf6d430650d0b156f1ed71f</anchor>
      <arglist>(AirWindowsBuildATPDF, &quot;Build ATPDF&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1f14e34b29a0bb16d0e3e626eec234ae</anchor>
      <arglist>(AirWindowsBussColors4, &quot;Buss Colors 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae3b254c59475122dc840323d869894fc</anchor>
      <arglist>(AirWindowsButterComp, &quot;Butter Comp&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e614fb9d46cb17e6ca361cd1340ddb9</anchor>
      <arglist>(AirWindowsButterComp2, &quot;Butter Comp 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6de046a614a0befd7163c145457389ba</anchor>
      <arglist>(AirWindowsC5RawBuss, &quot;C5 Raw Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27f513294231f46ea257cbf388398204</anchor>
      <arglist>(AirWindowsC5RawChannel, &quot;C5 Raw Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a254e2a955f56c5870291f945d4f89839</anchor>
      <arglist>(AirWindowsCStrip, &quot;C Strip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af925fd720b6e2a94add2ebcee1c56e4b</anchor>
      <arglist>(AirWindowsCapacitor, &quot;Capacitor&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab4bcfed2e3017e0a1ddf280e464632a1</anchor>
      <arglist>(AirWindowsChannel4, &quot;Channel 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a676c840fa5f2941d337472c49f55e5b8</anchor>
      <arglist>(AirWindowsChannel5, &quot;Channel 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac822681a6475cc422b3e188eaaae278f</anchor>
      <arglist>(AirWindowsChannel6, &quot;Channel 6&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a65d52e25b98869c19809fcce771a391b</anchor>
      <arglist>(AirWindowsChannel7, &quot;Channel 7&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a93d8363cb99267414abf1e61c1ee1d2c</anchor>
      <arglist>(AirWindowsChorus, &quot;Chorus&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>adeb559a31d09465eba7dd12b0aac92c9</anchor>
      <arglist>(AirWindowsChorusEnsemble, &quot;Chorus Ensemble&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7444c2e5f5c6bf5d286412f4222ce6d5</anchor>
      <arglist>(AirWindowsClipOnly, &quot;Clip Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab5b6a8b0a65094ab60eb6e2ffec301e4</anchor>
      <arglist>(AirWindowsCoils, &quot;Coils&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27a6090cbf7345945e281c14770f9cd5</anchor>
      <arglist>(AirWindowsCojones, &quot;Cojones&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>add68bed41847f14eae49b0209f1fbce7</anchor>
      <arglist>(AirWindowsCompresaturator, &quot;Compresaturator&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e00baa3a83118a765aa2511e4ea611d</anchor>
      <arglist>(AirWindowsConsole4Buss, &quot;Console 4 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24f70698c45da420f7a1ff2ff0de0237</anchor>
      <arglist>(AirWindowsConsole4Channel, &quot;Console 4 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1e5ae287e3cfe3e90d5499d5f929896f</anchor>
      <arglist>(AirWindowsConsole5Buss, &quot;Console 5 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41e2d37829ea7935dcb8ee9cc55d0e7c</anchor>
      <arglist>(AirWindowsConsole5Channel, &quot;Console 5 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8c3045783a0de2caf4120b1a146072ac</anchor>
      <arglist>(AirWindowsConsole5DarkCh, &quot;Console 5 Dark Ch&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0db2a41a8844252fd3bf91c7dae49577</anchor>
      <arglist>(AirWindowsConsole6Buss, &quot;Console 6 Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a99e376c16262fcadebfba02b45563a0e</anchor>
      <arglist>(AirWindowsConsole6Channel, &quot;Console 6 Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aee141eff4e6ac17367c1fb4ee97c2123</anchor>
      <arglist>(AirWindowsCrunchyGrooveWear, &quot;Crunchy Groove Wear&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abe69e29be0c73818241b311bf679fc8c</anchor>
      <arglist>(AirWindowsCrystal, &quot;Crystal&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeabbd1c61c7538fa2b35c37a38a881f9</anchor>
      <arglist>(AirWindowsDCVoltage, &quot;DC Voltage&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afdc54f20b92c2567001fb27de6ab85e4</anchor>
      <arglist>(AirWindowsDeBess, &quot;De Bess&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac89f4e396be441a462f665132d0b0791</anchor>
      <arglist>(AirWindowsDeEss, &quot;De Ess&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3df44dde517d1d7b24fb2a51f013b091</anchor>
      <arglist>(AirWindowsDeHiss, &quot;De Hiss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab90aca1f9c0b848181b12ce5aa4f2bf9</anchor>
      <arglist>(AirWindowsDeRez, &quot;De Rez&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9cd69b5846de80fd269876bfbae2918b</anchor>
      <arglist>(AirWindowsDeRez2, &quot;De Rez 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac6bfbc956fab1bc4022c42c29bf29605</anchor>
      <arglist>(AirWindowsDeckwrecka, &quot;Deckwrecka&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a41be53a354f6bac9848ad93dcc0a7840</anchor>
      <arglist>(AirWindowsDensity, &quot;Density&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a416e1f8425b04aaae636cb9197af01a4</anchor>
      <arglist>(AirWindowsDesk, &quot;Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad3fc9dc9226c6f92b18f53eeca360859</anchor>
      <arglist>(AirWindowsDesk4, &quot;Desk 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8e7c043f8306222c91a4305b8127c687</anchor>
      <arglist>(AirWindowsDistance, &quot;Distance&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad50ff3917774838469eb9085852b6025</anchor>
      <arglist>(AirWindowsDistance2, &quot;Distance 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a87ed4b693abe1685e2cc91ed329da74b</anchor>
      <arglist>(AirWindowsDitherFloat, &quot;Dither Float&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a927cd7071ff91064ccad1eaffc125b41</anchor>
      <arglist>(AirWindowsDitherMeDiskers, &quot;Dither Me Diskers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab5d90640c3102013a8fda0afe3b5742</anchor>
      <arglist>(AirWindowsDitherMeTimbers, &quot;Dither Me Timbers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad273a60e1f4b687b25e75bd54449e7ab</anchor>
      <arglist>(AirWindowsDitherbox, &quot;Ditherbox&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad78d8e810c6f19f1bd345cb6cb79e091</anchor>
      <arglist>(AirWindowsDoublePaul, &quot;Double Paul&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab83368b2a143e913431e18ee77b45a6</anchor>
      <arglist>(AirWindowsDrive, &quot;Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0f0d268deb4442f01809c9e6760b1121</anchor>
      <arglist>(AirWindowsDrumSlam, &quot;Drum Slam&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a82350bb54f4192c1fb3d69f56f7c20ae</anchor>
      <arglist>(AirWindowsDubCenter, &quot;Dub Center&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1c42bd4ae52acb1be5702fcf472c7eb5</anchor>
      <arglist>(AirWindowsDubSub, &quot;Dub Sub&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a84a13b90ae9d41d248057aa6cab5cb40</anchor>
      <arglist>(AirWindowsDustBunny, &quot;Dust Bunny&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a879d5f5de94daf0339c8caab17253e3a</anchor>
      <arglist>(AirWindowsDyno, &quot;Dyno&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb381ceffd831fbbca4b635d30eac594</anchor>
      <arglist>(AirWindowsEQ, &quot;EQ&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac4f714f1598999d6aad0fd7417de4540</anchor>
      <arglist>(AirWindowsEdIsDim, &quot;Ed Is Dim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a53cc1f62512d3c9a5460d1f471e013</anchor>
      <arglist>(AirWindowsElectroHat, &quot;Electro Hat&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ada5755c75aa586aaba8d323bc806be</anchor>
      <arglist>(AirWindowsEnergy, &quot;Energy&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1ee4ecdab3d170be598cc850699900a</anchor>
      <arglist>(AirWindowsEnsemble, &quot;Ensemble&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9511c2f38737447b3b88ad9e7016eca4</anchor>
      <arglist>(AirWindowsEveryTrim, &quot;Every Trim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8ce6ebb7ac290ed1ec9e526ce73ae889</anchor>
      <arglist>(AirWindowsFacet, &quot;Facet&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1376c7c5d59c1cb326c268f044b8ed02</anchor>
      <arglist>(AirWindowsFathomFive, &quot;Fathom Five&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab9c21fdab88918393594f941cc626ada</anchor>
      <arglist>(AirWindowsFloor, &quot;Floor&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a35176fb5e072fcd8a8103f3fd16bef79</anchor>
      <arglist>(AirWindowsFocus, &quot;Focus&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aecfe732d5685ce453a930b54f8a66846</anchor>
      <arglist>(AirWindowsFracture, &quot;Fracture&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af27b9adf41c57963b73d2d2d912eaafd</anchor>
      <arglist>(AirWindowsFromTape, &quot;From Tape&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a53959dc0379a06d5067a0b5602b191d6</anchor>
      <arglist>(AirWindowsGatelope, &quot;Gatelope&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa102a80a2fc5c719e8a8ebd9f37ee339</anchor>
      <arglist>(AirWindowsGolem, &quot;Golem&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abfb2834333db34dc0b3331b410815dd7</anchor>
      <arglist>(AirWindowsGringer, &quot;Gringer&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aab9ce5e03b3e4d4e2869e4afc4b8a9bc</anchor>
      <arglist>(AirWindowsGrooveWear, &quot;Groove Wear&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9f96548243d3c4d879b68f3b0924e889</anchor>
      <arglist>(AirWindowsGuitarConditioner, &quot;Guitar Conditioner&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad768456e5a132b7fff4c6b4270371750</anchor>
      <arglist>(AirWindowsHardVacuum, &quot;Hard Vacuum&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1a2592ab74d74473f57498c08f3e612</anchor>
      <arglist>(AirWindowsHermeTrim, &quot;Herme Trim&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a261f85a75acdc636cf84fac377a048e8</anchor>
      <arglist>(AirWindowsHermepass, &quot;Hermepass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae1113904548a7a2e87e5cbdd11f8ff82</anchor>
      <arglist>(AirWindowsHighGlossDither, &quot;High Gloss Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a190fffb7c5a8f6ae6c07d0beff868e88</anchor>
      <arglist>(AirWindowsHighImpact, &quot;High Impact&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab7892e0c7b6f93fba9ab3c73cbbf8438</anchor>
      <arglist>(AirWindowsHighpass, &quot;Highpass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a753cf48c731f548cc993ffcfa305878c</anchor>
      <arglist>(AirWindowsHighpass2, &quot;Highpass 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afb3a977e2a73b9158f456682846d9082</anchor>
      <arglist>(AirWindowsHolt, &quot;Holt&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a42059b4ae4a3c516c7c99fc8c1d84f99</anchor>
      <arglist>(AirWindowsHombre, &quot;Hombre&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9a3fadd7c6d50668f6299447c4fcfef4</anchor>
      <arglist>(AirWindowsInterstage, &quot;Interstage&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2a64203cf43c965a6b850ad252862ef8</anchor>
      <arglist>(AirWindowsIronOxide5, &quot;Iron Oxide 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5b1f119f1d62f7214111a5a1f3dd9227</anchor>
      <arglist>(AirWindowsIronOxideClassic, &quot;Iron Oxide Classic&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7f55220784a5088c8822f92f37394223</anchor>
      <arglist>(AirWindowsLeftoMono, &quot;Lefto Mono&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0a46e654ea2a6cdb85295a9e8f9b35e3</anchor>
      <arglist>(AirWindowsLogical4, &quot;Logical 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a21001ccd4f6c277f64a3342c5cef2511</anchor>
      <arglist>(AirWindowsLoud, &quot;Loud&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad6961460104579d04f685d163fe50825</anchor>
      <arglist>(AirWindowsLowpass, &quot;Lowpass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac25072732b637316dd75eaa370bc7bfd</anchor>
      <arglist>(AirWindowsLowpass2, &quot;Lowpass 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae5e6c988bdb85a594b086e0bdf3e872e</anchor>
      <arglist>(AirWindowsMV, &quot;MV&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa2ea9859ec6b144351cd8b193004e4c7</anchor>
      <arglist>(AirWindowsMelt, &quot;Melt&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a46c9cb53ce43842d48a8bd855def540e</anchor>
      <arglist>(AirWindowsMidSide, &quot;Mid Side&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a968a589e9ecb38b9a1fdbaced8e5c1b0</anchor>
      <arglist>(AirWindowsMoNoam, &quot;Mo Noam&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a70b89ead318e60fd731a7103d9094012</anchor>
      <arglist>(AirWindowsMojo, &quot;Mojo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e7d70d20838917ce9c5153c2a692af2</anchor>
      <arglist>(AirWindowsMonitoring, &quot;Monitoring&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acdcabbdaae3eaf9297e75d10ee112db1</anchor>
      <arglist>(AirWindowsNCSeventeen, &quot;NC-17&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7f5c4b7b9552bbaba6a94670b91d833a</anchor>
      <arglist>(AirWindowsNaturalizeDither, &quot;Naturalize Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a7cdaae0742122cbd3c10596a2ffaa6</anchor>
      <arglist>(AirWindowsNodeDither, &quot;Node Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa4f16dae2488602a716a2062497b9197</anchor>
      <arglist>(AirWindowsNoise, &quot;Noise&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acddc17e5781504b676f8e7afab778fe7</anchor>
      <arglist>(AirWindowsNonlinearSpace, &quot;Nonlinear Space&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aebb0b084b5075c2377f277398872786c</anchor>
      <arglist>(AirWindowsNotJustAnotherCD, &quot;Not Just Another CD&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad9be4f8e2cecf6a0b67a10a36c9b7107</anchor>
      <arglist>(AirWindowsNotJustAnotherDither, &quot;Not Just Another Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1be3d6b5e26cbe2c809a02de70fc27a7</anchor>
      <arglist>(AirWindowsOneCornerClip, &quot;One Corner Clip&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85e17e20f3d3139a15be0783019324a1</anchor>
      <arglist>(AirWindowsPDBuss, &quot;PD Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeafa39f71736b786d05a1045e78de5d5</anchor>
      <arglist>(AirWindowsPDChannel, &quot;PD Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a58520b2f2ad7ef06715bcf9128c1179e</anchor>
      <arglist>(AirWindowsPafnuty, &quot;Pafnuty&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a494f9b8b11a66e9adf83f0c300f3261a</anchor>
      <arglist>(AirWindowsPaulDither, &quot;Paul Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5a7a6d474af6b31a9a7df9e3d6cb8aed</anchor>
      <arglist>(AirWindowsPeaksOnly, &quot;Peaks Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a377f294c486a55679d06334a8096dedc</anchor>
      <arglist>(AirWindowsPhaseNudge, &quot;Phase Nudge&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fa13e1af113acf6947eb2c6e89130b0</anchor>
      <arglist>(AirWindowsPocketVerbs, &quot;Pocket Verbs&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ded2cf30c59e99791a46f8edfce7f6e</anchor>
      <arglist>(AirWindowsPodcast, &quot;Podcast&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0060d9bcfdc2fb8dda8b961843add07b</anchor>
      <arglist>(AirWindowsPodcastDeluxe, &quot;Podcast Deluxe&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4095a87e28c2180d0675d118dbc15aac</anchor>
      <arglist>(AirWindowsPoint, &quot;Point&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a85b37c4b9e7a2461c0ee8fb52940b4a9</anchor>
      <arglist>(AirWindowsPop, &quot;Pop&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a24e0fc13493a55d8786ffb77ecf512e7</anchor>
      <arglist>(AirWindowsPowerSag, &quot;Power Sag&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a80f325fb7529029fd68dadd481ae4978</anchor>
      <arglist>(AirWindowsPowerSag2, &quot;Power Sag 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1dd3517e94b95a6cf08eeb0b30c405a</anchor>
      <arglist>(AirWindowsPressure4, &quot;Pressure 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aad0b6c4cf0b5a6f32822e980be2dde50</anchor>
      <arglist>(AirWindowsPurestAir, &quot;Purest Air&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7c16bf2d33d4673d51b864d4a927547b</anchor>
      <arglist>(AirWindowsPurestConsoleBuss, &quot;Purest Console Buss&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2e1ece3001d95873e1f175da4184a040</anchor>
      <arglist>(AirWindowsPurestConsoleChannel, &quot;Purest Console Channel&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa8b0c58fd7ee4f3021084a8132352ea4</anchor>
      <arglist>(AirWindowsPurestDrive, &quot;Purest Drive&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a27193ee39b861bd3f9d9dc6f1a93a50a</anchor>
      <arglist>(AirWindowsPurestEcho, &quot;Purest Echo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a49aa72993698293ca72898d13e3c37e8</anchor>
      <arglist>(AirWindowsPurestGain, &quot;Purest Gain&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a562e298876ef2f519d5029bf681ce8b3</anchor>
      <arglist>(AirWindowsPurestSquish, &quot;Purest Squish&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aaed04ade4915ee832d761b8a0a0775df</anchor>
      <arglist>(AirWindowsPurestWarm, &quot;Purest Warm&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a833de75faac4bbf0885ecca77d279ba1</anchor>
      <arglist>(AirWindowsPyewacket, &quot;Pyewacket&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8a42aad9581b00710c9af1fab28bc6cb</anchor>
      <arglist>(AirWindowsRawGlitters, &quot;Raw Glitters&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a057ddb7a3b0b4f9636092641d0259bbc</anchor>
      <arglist>(AirWindowsRawTimbers, &quot;Raw Timbers&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a29e0505b4ea905f3e19d2ebd1aaad25c</anchor>
      <arglist>(AirWindowsRecurve, &quot;Recurve&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a64723d7d5e0a44872b50ff953dcbfa37</anchor>
      <arglist>(AirWindowsRemap, &quot;Remap&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab4badd1d33ec00e3fbf0e57f103239c9</anchor>
      <arglist>(AirWindowsResEQ, &quot;ResEQ&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a667903b206834a9d2d0414682e8fedc1</anchor>
      <arglist>(AirWindowsRighteous4, &quot;Righteous 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a60511e14dea1117bb0c8c10548eae331</anchor>
      <arglist>(AirWindowsRightoMono, &quot;Righto Mono&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a653d2a1e0f10b9542e13a887e178d864</anchor>
      <arglist>(AirWindowsSideDull, &quot;Side Dull&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3beae870d6105a33db4914ddbf2d8f22</anchor>
      <arglist>(AirWindowsSidepass, &quot;Sidepass&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6982c9ea08bc76c23a7c623e22e23152</anchor>
      <arglist>(AirWindowsSingleEndedTriode, &quot;Single Ended Triode&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a509f8356f8c9baee41402265627e46cc</anchor>
      <arglist>(AirWindowsSlew, &quot;Slew&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab85e16d2abc2853dfa506e743b8ce597</anchor>
      <arglist>(AirWindowsSlew2, &quot;Slew 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>afa2673c0a2d3a0e00cd41630051eaeb3</anchor>
      <arglist>(AirWindowsSlewOnly, &quot;Slew Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9ee54af712ada7eb491acd0f8f902d5</anchor>
      <arglist>(AirWindowsSmooth, &quot;Smooth&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae28a73b6437ab99ec9babf7867d7df72</anchor>
      <arglist>(AirWindowsSoftGate, &quot;Soft Gate&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad95bc0225a13e03a3246e1908b6901e8</anchor>
      <arglist>(AirWindowsSpatializeDither, &quot;Spatialize Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9cca3b9ebdeda2fcecb4cee1f48f00c0</anchor>
      <arglist>(AirWindowsSpiral, &quot;Spiral&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af9a81513e3811d1fc9ee898a1e68a173</anchor>
      <arglist>(AirWindowsSpiral2, &quot;Spiral 2&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a42dec9905b4c83f901fec73397d68767</anchor>
      <arglist>(AirWindowsStarChild, &quot;Star Child&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5d5d0e578f94ab19d7a9abbd11a9432b</anchor>
      <arglist>(AirWindowsStereoFX, &quot;Stereo FX&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a99d9882db673a2c1c9f977dd1fc802e6</anchor>
      <arglist>(AirWindowsStudioTan, &quot;Studio Tan&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0eecd2103eea85727d7434accd8c5a0c</anchor>
      <arglist>(AirWindowsSubsOnly, &quot;Subs Only&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aeb350c17aba0feaeed4ad4b08b852f3f</anchor>
      <arglist>(AirWindowsSurge, &quot;Surge&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd6bde2bb23212f6a46899cf650b1585</anchor>
      <arglist>(AirWindowsSurgeTide, &quot;Surge Tide&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ab2e296ed291c251c39c8efc835181a</anchor>
      <arglist>(AirWindowsSwell, &quot;Swell&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a92f3cbcda9139d271fa970fae375c601</anchor>
      <arglist>(AirWindowsTPDFDither, &quot;TPDF Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a652f3ef2628744da30ee7ef16e62d26f</anchor>
      <arglist>(AirWindowsTapeDelay, &quot;Tape Delay&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a25b07d696fb3b12516c2126664d9aaee</anchor>
      <arglist>(AirWindowsTapeDither, &quot;Tape Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ebc260a1597ca861d6b06ade351c3d2</anchor>
      <arglist>(AirWindowsTapeDust, &quot;Tape Dust&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4b6d1843492d4f1f1f8cffaca3dca925</anchor>
      <arglist>(AirWindowsTapeFat, &quot;Tape Fat&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad2b3b3e07570d6b764356dc663c34475</anchor>
      <arglist>(AirWindowsThunder, &quot;Thunder&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a31b1a5bf858b21ce72a60e9f7b4c7d86</anchor>
      <arglist>(AirWindowsToTape5, &quot;To Tape 5&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a693acadcb0bd3e2e21fdd9972ed78c7d</anchor>
      <arglist>(AirWindowsToVinyl4, &quot;To Vinyl 4&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa2f9c46b23129653b65f14cf5a7f45a6</anchor>
      <arglist>(AirWindowsToneSlant, &quot;Tone Slant&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a34ebd2055683a27d6c4b670eb2bbb134</anchor>
      <arglist>(AirWindowsTransDesk, &quot;Trans Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a18167e34c01645fe20b3fe3ac2cc1879</anchor>
      <arglist>(AirWindowsTremolo, &quot;Tremolo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a7987ca0b8df1912075cf60e176cd8398</anchor>
      <arglist>(AirWindowsTubeDesk, &quot;Tube Desk&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abd0cefcca29ba74b846a4ba8abbcd53e</anchor>
      <arglist>(AirWindowsUnBox, &quot;Un Box&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a11f6d531f6a06e490349a58f81174f21</anchor>
      <arglist>(AirWindowsVariMu, &quot;Vari Mu&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abbf56dc4e0b411cb43f1c520876e8621</anchor>
      <arglist>(AirWindowsVibrato, &quot;Vibrato&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9473fe942249e82e76ed22c286983893</anchor>
      <arglist>(AirWindowsVinylDither, &quot;Vinyl Dither&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a61e67dd5696218e64c3692f937e546ac</anchor>
      <arglist>(AirWindowsVoiceOfTheStarship, &quot;Voice Of The Starship&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad92ecbe431e93147e8837e1b3b3bce22</anchor>
      <arglist>(AirWindowsVoiceTrick, &quot;Voice Trick&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa278417101fa6892169a9e45ff51aa7f</anchor>
      <arglist>(AirWindowsWider, &quot;Wider&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac1d1fc108e711957e34a15657a958eb8</anchor>
      <arglist>(AirWindowscurve, &quot;curve&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a22cc3f9d3d5d83267b4b3ea8f4a5afb0</anchor>
      <arglist>(AirWindowsuLawDecode, &quot;u Law Decode&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a2adc1072c617f36b322aea1b7f7d9d0d</anchor>
      <arglist>(AirWindowsuLawEncode, &quot;u Law Encode&quot;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>createIdentifierString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af125d311021702fca985886c5e30ec8a</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SearchOperation *</type>
      <name>createSearchForKeywords</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3ec6bb41c93ced265b8b232149d08eff</anchor>
      <arglist>(const juce::String &amp;keywords)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callBlocking</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a36fa404fa7ceb671453f5e6b45f2703e</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae1c423cc7ccdaad85c712081b25010d1</anchor>
      <arglist>(float db) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToDb</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a143c735ba0228cfe2fd5719290734cf3</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>gainToDbString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a697c9f3496d855c11f21fb5694196ded</anchor>
      <arglist>(float gain, float infLevel=-96.0f, int decPlaces=2)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToDb</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e9d27f3d341b5ef346c33920cce824c</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae0532a08faabf915b9aa91e8b6a3e351</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPanString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af126f65cc0aa991767873d3ca14b9b1a</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSemitonesAsString</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac40ece8c1b582c521912469986e6aacd</anchor>
      <arglist>(double semitones)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>midiNoteToFrequency</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a50517dc5925211490cb5adb46af52f2a</anchor>
      <arglist>(FloatType midiNote)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>frequencyToMidiNote</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab2c07208710726b179bdb696c42e9430</anchor>
      <arglist>(FloatType freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitiseValues</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9a79566f4e48fc7737a428cdd98dbf88</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, float maxAbsValue, float minAbsThreshold=1.0f/262144.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a538d145931f667bfbde58da8ea90cf72</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFP</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9ecd185ea918b28b304832e50a8667da</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFloatingPointDenormaliseOccurred</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae9b1b8dfcfda921ac33e963c4187f3bd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroDenormalisedValuesIfNeeded</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae75c6e02b4f6be441df79fd91c7cda6b</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioDataAlmostSilent</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ae8ce2422e3357ed0fa6653040d6718d3</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAudioDataMagnitude</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa1aa6718203370f54431e5d2e1844f51</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertIntsToFloats</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e0fc8f0e12774f82c5019a49bcfbcbd</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatsToInts</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad22234a677ce3422674e80642749abb9</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yieldGUIThread</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4ead844eb8c187a5d115c11788ecc5ec</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af4e496a2205420f7f6e648dfd6c18a50</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getDefaultPanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0138d2a30c34c0bf44692f5651957d4b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPanLaw</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a820a37dab131e7130ee9b5182b9422df</anchor>
      <arglist>(PanLaw)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPanLawChoices</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a56d64c056664de878302dd6bb5f4bd9b</anchor>
      <arglist>(bool includeDefault) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>decibelsToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a58308d33d186486cd47cb0a300076105</anchor>
      <arglist>(float dB) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToDB</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3beff862ead2138b97f8eeb294d7615c</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToGain</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab9a9695293210668a57d88ba57c31344</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3d22fb5177e06244d6ab9ef59d6fed38</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGainsFromVolumeFaderPositionAndPan</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a70006fc24f494e9a22ce619a4099b02a</anchor>
      <arglist>(float volSliderPos, float pan, PanLaw lawToUse, float &amp;leftGain, float &amp;rightGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannels</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac45ec036579fdbc82aca62e64195200d</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startChannel, int endChannel=-1, int startSample=0, int endSample=-1)</arglist>
    </member>
    <member kind="function">
      <type>BenchmarkDescription</type>
      <name>createBenchmarkDescription</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af5016b50a11a4abfddbc7af1e38e6b96</anchor>
      <arglist>(std::string category, std::string name, std::string description)</arglist>
    </member>
    <member kind="function">
      <type>BenchmarkResult</type>
      <name>createBenchmarkResult</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ad6ccf735e781f881a9b99d92f562c5a9</anchor>
      <arglist>(BenchmarkDescription description, const tracktion_graph::PerformanceMeasurement::Statistics &amp;stats)</arglist>
    </member>
    <member kind="function">
      <type>juce::PropertiesFile *</type>
      <name>getApplicationSettings</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3f5f5c62e1a76f90a34824b155b07431</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getCurrentPositionInfo</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a22d08eb9a1ef454631e2c7b7b819013b</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchroniseEditPosition</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a78f5d36619a5ede7eb7b3ae2ed24c91f</anchor>
      <arglist>(Edit &amp;, const juce::AudioPlayHead::CurrentPositionInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4cc7d9f59ec1e6d864ccbc3509dc3055</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionEditFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac528f3b11631a4520d55bd58563f44a9</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionArchiveFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a97f32b983a6517f2484c72bd62248d0d</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionProjectFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a81be78e519f29dfda99415910aeeb319</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionPresetFile</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a88e9a898fdf6fbaf4a5f8f8cef6795d2</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getNonExistentSiblingWithIncrementedNumberSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a9bc5e7b6eea256c056a9aac4eef652fc</anchor>
      <arglist>(const juce::File &amp;, bool addHashSymbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSortedListToMenu</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>abb2bc1f74eb33833d289e3ba3b61ea96</anchor>
      <arglist>(juce::PopupMenu &amp;m, juce::StringArray names, int startID)</arglist>
    </member>
    <member kind="function">
      <type>juce::AffineTransform</type>
      <name>getScaleAroundCentre</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6cf0952ed85db2d3062d27a3e904dbc5</anchor>
      <arglist>(juce::Rectangle&lt; float &gt; r, float numPixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfFirstFoundInSecond</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a25a34ee6a35670221d531aa7c66cb052</anchor>
      <arglist>(const juce::StringArray &amp;array1, const juce::StringArray &amp;array2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allFirstFoundInSecond</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aa07fe8dc182b19bf4574c37ee4d3fab1</anchor>
      <arglist>(const juce::StringArray &amp;array1, const juce::StringArray &amp;array2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveXMLAttributeToStart</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a811ce76a66e23b5e61d770bcb0b43113</anchor>
      <arglist>(juce::XmlElement &amp;xml, juce::StringRef att)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeIf</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3b57ac300e0cf11039dc6c8b76669aaf</anchor>
      <arglist>(Vector &amp;v, Predicate &amp;&amp;pred)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>almostEqual</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af2dfc2c9e980592af894b374f7a1b546</anchor>
      <arglist>(FloatingPointType firstValue, FloatingPointType secondValue, FloatingPointType precision=(FloatingPointType) 0.00001)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matchesAnyOf</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3403c5eb22c108deac19ee9dbe8ce88c</anchor>
      <arglist>(const Type &amp;needle, const std::initializer_list&lt; Type &gt; &amp;haystack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachItem</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8a4248d69aa8f9522309589a788c0e92</anchor>
      <arglist>(const juce::Array&lt; Type * &gt; &amp;items, const UnaryFunction &amp;fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValueTreeProperties</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6153a647eb9f98533e8d7bdac0ace58e</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;name, const juce::var &amp;value, Others &amp;&amp;... others)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createValueTree</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a15e6767b73449f729b81f97897cfadf8</anchor>
      <arglist>(const juce::Identifier &amp;name, Properties &amp;&amp;... properties)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt; &amp;</type>
      <name>removeInvalidValueTrees</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6bb76837fe34851c3737ab48cf5b7038</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;trees)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt;</type>
      <name>getTreesOfType</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a56d2ebf2b22d1ae50762234aac31df1f</anchor>
      <arglist>(const juce::Array&lt; juce::ValueTree &gt; &amp;trees, const juce::Identifier &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChildTreesRecursive</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a0db9e32e639e4331a73fc411f80214d7</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;result, const juce::ValueTree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renamePropertyRecursive</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4e0ca09cf05a38c308f0c2544f8ed3a3</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;oldName, const juce::Identifier &amp;newName, juce::UndoManager *um)</arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>projectFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a6c51c15f862c97bd71e62f8d415ad729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>editFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a4f66cc093fc405207b012d3621944316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>legacyEditFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3437c7eecf9987c3e1f9fa9faa9b2849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>archiveFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af8546479c4b95ebc374d45a3dd97d253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>af85c3c2369fa3b3bce6b35a032ce1d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fcf8fd5039990f8e507091f22ad9890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1a08535eb30f0e3fde7d80d4985d45f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fdd3fccbea05237183536945d6e4cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ab3c09093e9404a4ba516e4f8998234b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customControllerFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>aae85e5c6c68b1037a8095d50b5da4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetWildcard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a8fbc317ee6d66d147b71fdfc018256d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a3055a80f3662ed562787da646ff0a009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>presetFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>ac7d20c8b49acbd3addbc606482fb9141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>rackFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a5978a61767c22cf27a05508a2c2fe64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>scriptFileSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>acaa32ee11ba121ef7c8f35150d411a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateSuffix</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a1958484f78b8f13461a9c8053479b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateWildCard</name>
      <anchorfile>namespacetracktion__engine.html</anchorfile>
      <anchor>a34e51d83e1d049e828d1f2595e297b76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::AppFunctions</name>
    <filename>namespacetracktion__engine_1_1AppFunctions.html</filename>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab8c2b7adbf3615848453ca8a57b3e779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7461e01845c2c4a60c340d68d2973c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8e21d638dc4730ab7bb1183ef728a8ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa243d06fc4a176ed0a357db32291b7a2</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPaste</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6ed0e376c47e7c2001cb406582d97db8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0627ed317829f0448430df39d6f788f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac450dca2bf2e2a8723a42eda1f2bc98e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGapFromSelected</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1dd7b4762808dfd4132c675b5ed3d2ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGap</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab6aed13711244d4782513784e3f35811</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToStart</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1363143b0b7b37d262b2b1000d126ec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToEnd</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac73a600025a6647990af9c8d4022a2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae21cb759b384ba7d540ae5c4e3a974dc</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9f23a08dbc698125c665beb8392b4788</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a72362b3125d26a477f04a2e95b997972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a38ac4277ac57eeb9ae1fc24f1d8f3bd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startStopPlay</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a929561f878669bc7306ca5fbc0d5b944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aeb4e13e3d84d47004cc5325e0067f243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a399c608715c078c58fbd60d6181fbcb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleLoop</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2071a06436eaf792c82b162b527dd72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>togglePunch</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3dd7cf6c8d299f34caf3108f73e7497c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSnap</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4a8c81bc6f286320e32cfd4613d43c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleClick</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a07d95c05cac12d26a709b7f2023e5283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleMidiChase</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a93d3f930c33324e268df9001ba8d36bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3a7b8f49ad71b7d77036116df8345708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa00324d87303a7565088c4d44fbe5531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeUp</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a37e792fbc3be6ef115dea80eed8c0ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeDown</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a08d2b99486eb2174d365309f642a1335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a76688ebf56db79ad0560da4ad7bb6b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2f4c3524ece172711933e9a65964619a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac5577778cf5a1a1cd958d616ce376c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a364524070f57766a482a8f3e4c8b21b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksUp</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ef42c45f58339e10881e3ab4d3ffc6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksDown</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a561d25f1d617b7b1c0dab7789d454cbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae9d9ee4fd893d0aec69bbaafa8e25ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksRight</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>adfcdeb63794d70ef8d719f5f80727e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleEndToEnd</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a08c9363a534305c0b624a5a9d6245f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEdit</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a69bea45c2b90ce45bcc2808aa5e2e5be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditAs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9e36ed21d7fbcf8b3c289224dc47dc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>armOrDisarmAllInputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aded83e7bb70d40146862c61b6b73f27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a284aa0d55a584233eb7993bedecb9eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad024adb2e317d03595b62dd3a49bb924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksIn</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaa84ae335f5229b0812094a635e8973b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksOut</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>abdad282d9bb311d5cdc995d064bcdf17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a432de53e33095c95886b18e9bd91eef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af6462b701880351906ded20f35d72bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitAll</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a55457a6b823fca3efd22e476b4d0d3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToSelection</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0b986e3078c7625dc13ef0e2444aa304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToNextMarker</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>acfdc658c820df13a5641082e0a7bded9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToPrevMarker</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2a21d4db5c390f592c3f6c9ee960e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad9aa132b5bb2fca8533a83a24656a8d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0f7feec0d1bc5c1027248ea25d8f9fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleScroll</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5299bc81ba6a7ab32b03b6f7f50fd390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScrolling</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a35fa0e799a499684532f926aa0a4e1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndDiscard</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a785124e0eb7d8878043fbea27a2f1f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndRestart</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ab60a69d58e7d178cd64a44e5ce5ae956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTempoChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae6cc772f8222b1f6063d37cb05d1d9d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPitchChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5d9673c2c0a8df1d55a6344a63cf86e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTimeSigChange</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1eb6590ebea4925a7586f3e5f8406eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChord</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>afd20b0125505fd2feb4a116504817395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideVideo</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a84f565b649f8f5b47019b819a2eb236d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMixer</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad2ac9582916a04d79d5b53407686b464</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a287af2650b0442b677735e4c2b5f363d</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2f4cd63dfdd53ebaa56a7f9facefc85b</anchor>
      <arglist>(bool zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBrowser</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a69a3319bc6754b9fb978cc8af2a33771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideActions</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af2dd5a9f56049c862f6ce28832e19586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performUserAction</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a011a171565e7cbf194b61bc41cd4079a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideAllPanes</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a48de0ff8907ffd1bebed45cd262979f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>af61613f4d3266bdfe81ec8b834455166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationReadMode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae6342d84820ae34982a84bbc967b42d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationWriteMode</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ac19a9735510fa9464daf75219148df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBigMeters</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7ee64233139ee153df53375367b79e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideInputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a45898d5731d359fb0988db089c996375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideOutputs</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a837716ab7934dd04e3286efd1aaf10f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showProjectScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a535183d98b49666f0c0347040effb42a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSettingsScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>aee35b96828ebe8da38bc6c24871f954e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showEditScreen</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a634660b556fc94b4200fde79fea5cd67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOverloads</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a165f60ab1c5991a5eec1d31fa6510135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPeaks</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3062751be4bdd33ce43fc8e600010610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTrackFreeze</name>
      <anchorfile>namespacetracktion__engine_1_1AppFunctions.html</anchorfile>
      <anchor>adcc143e17ea322df071590a63913e800</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::benchmark_utilities</name>
    <filename>namespacetracktion__engine_1_1benchmark__utilities.html</filename>
    <class kind="struct">tracktion_engine::benchmark_utilities::BenchmarkOptions</class>
    <member kind="enumeration">
      <type></type>
      <name>MultiThreaded</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a9e1f609633d3a31cb10d2da031eda07b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a9e1f609633d3a31cb10d2da031eda07ba7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a9e1f609633d3a31cb10d2da031eda07baa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFree</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1e76217117ac020df92f9e10f26fae40</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a1e76217117ac020df92f9e10f26fae40a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a1e76217117ac020df92f9e10f26fae40aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PoolMemoryAllocations</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a516991ef908c48542b44f860913ac712</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a516991ef908c48542b44f860913ac712a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1benchmark__utilities.html" anchor="a516991ef908c48542b44f860913ac712aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aac90b0fc08be7e11e796786e6b5b84ec</anchor>
      <arglist>(const BenchmarkOptions &amp;opts)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createNode</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a8e45f554b0542c7a0889ad49e51e4aee</anchor>
      <arglist>(Edit &amp;edit, ProcessState &amp;processState, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareRenderAndDestroy</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>ac4c432535481e420e46cc12b86124f61</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, juce::String description, tracktion_graph::test_utilities::TestProcess&lt; NodePlayerType &gt; &amp;testContext, tracktion_graph::PlayHeadState &amp;playHeadState, MultiThreaded isMultiThreaded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a2332c73042ad7aa49efabb8053d510e4</anchor>
      <arglist>(juce::UnitTest &amp;ut, BenchmarkOptions opts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>ad2fd83dfc4859d85a9a07f6766a4a8a0</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, Edit &amp;edit, tracktion_graph::test_utilities::TestSetup ts, MultiThreaded isMultiThreaded, LockFree isLockFree, tracktion_graph::ThreadPoolStrategy poolType)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditfromArchiveData</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aaf4565bda7d5749b1e9e8ac5abf10dd4</anchor>
      <arglist>(Engine &amp;engine, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromValueTree</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aff4bc630924efb5ad474df35229bb513</anchor>
      <arglist>(Engine &amp;engine, const juce::ValueTree &amp;editState)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditFromZipData</name>
      <anchorfile>namespacetracktion__engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>aa3bd8b4937ddf91f1de58b7045133479</anchor>
      <arglist>(Engine &amp;engine, const void *data, size_t numBytes)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::Click</name>
    <filename>namespacetracktion__engine_1_1Click.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getMidiClickNote</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>aa08ad8ecaab6f6ac6bf17508e2f3155c</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickWaveFile</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a21323165061c32f21f6c6264d1853d88</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiClickNote</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a0a2a772bfc04e53637f97b98a1f52edd</anchor>
      <arglist>(Engine &amp;, bool big, int noteNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickWaveFile</name>
      <anchorfile>namespacetracktion__engine_1_1Click.html</anchorfile>
      <anchor>a7da757e9b543e59ae87e6a7dd4e42b35</anchor>
      <arglist>(Engine &amp;, bool big, const juce::String &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::ClipConstants</name>
    <filename>namespacetracktion__engine_1_1ClipConstants.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMin</name>
      <anchorfile>namespacetracktion__engine_1_1ClipConstants.html</anchorfile>
      <anchor>a3e034df4438ba08025e95d43a0bac193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMax</name>
      <anchorfile>namespacetracktion__engine_1_1ClipConstants.html</anchorfile>
      <anchor>ad386b81827c66f2b15a03a6a936cb026</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::IDs</name>
    <filename>namespacetracktion__engine_1_1IDs.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::modifier</name>
    <filename>namespacetracktion__engine_1_1modifier.html</filename>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getEnabledNames</name>
      <anchorfile>namespacetracktion__engine_1_1modifier.html</anchorfile>
      <anchor>a399368eca27461bd32302c89897c222f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::ModifierCommon</name>
    <filename>namespacetracktion__engine_1_1ModifierCommon.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>RateType</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hertz</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a618bfd594a87f2fa1109a53c8b7886cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourBars</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a85305dcb4f218d8074da1b028470d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>twoBars</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a7ad1aaca9d27d66353e3de3dd7202419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bar</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a52baa52c043175aa3657c084803ef596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a4d9ba3fef19fdbac70d0eae576422078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>half</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a9eb3cc23e9fec87ec91b316bb0e95a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a4f3001df62e2ce487cd3153831d8c1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a8dddc724e0647a7280c2751c6621a2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarter</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac16bd3eb7df019855c4fd5ea4bf63d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813af3acf74a5e005e20fb2f08b81f5e94f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813afd2f0e8f38c51aad55f2f3557f868c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813af42e9ddc7023f04c26500420fe3fc6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813abf9f8e73a5f0be892665d3ec988b4460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a97137788488f8cf1d580082658e2a136</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813aba89df4dcd02c4db4c41d4c0ec5089fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813aff6a301581de9392e977200b12846871</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ad155c663939f85b756817def30d33b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecond</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a0399f392921d23ae740e63d37c58e708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac38f7a0955738c9c96f4ff849678d073</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthT</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813a5aff7e8a52e6ff49bb6e9d30c21d996e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourth</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ac99cf90e80a4bb5e3fd26b15ab0633ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthD</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5c2031bd5c73a8a84414be138b141813ae0a5823c4aa0ed05a55d9de38c10ae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>free</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3a768f178f25812a4295abc3ed875b5746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transport</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3ad6a8e179c28466b8ed5c12fc4518a76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>note</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a6f3d847fb87438e114ddac3f989d0bc3aea446b706c051f0b96df073e964befc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRateTypeChoices</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>af7fa20670b2c1d731f2c542f7aee6dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBarFraction</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a322c7488feeb733dc6d82f9c87bc81ba</anchor>
      <arglist>(RateType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSyncTypeChoices</name>
      <anchorfile>namespacetracktion__engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a678174eace66c33c6129f095f6758f2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::PredefinedWavetable</name>
    <filename>namespacetracktion__engine_1_1PredefinedWavetable.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::RackNodeBuilder</name>
    <filename>namespacetracktion__engine_1_1RackNodeBuilder.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Algorithm</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>ae02e342ca0780f356dbc00753b33c460</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__engine_1_1RackNodeBuilder.html" anchor="ae02e342ca0780f356dbc00753b33c460a56345a2ea3e821c40921950a7912e781">remappingNode</enumvalue>
      <enumvalue file="namespacetracktion__engine_1_1RackNodeBuilder.html" anchor="ae02e342ca0780f356dbc00753b33c460a202794f32e79bb82cb46fca36b6c8900">connectedNode</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a150b225d887609ddc8021f7508777ff9</anchor>
      <arglist>(Algorithm, tracktion_engine::RackType &amp;, double sampleRate, int blockSize, std::shared_ptr&lt; InputProvider &gt;, tracktion_graph::PlayHeadState *playHeadState=nullptr, bool isRendering=true)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion_graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion__engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a4f382f04480493b5441075570b83cf01</anchor>
      <arglist>(Algorithm, tracktion_engine::RackType &amp;, double sampleRate, int blockSize, std::unique_ptr&lt; tracktion_graph::Node &gt;, tracktion_graph::PlayHeadState &amp;, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_engine::TracktionBinaryData</name>
    <filename>namespacetracktion__engine_1_1TracktionBinaryData.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>getNamedResource</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a48ac0559210ca50b35c1d5bab75c0cce</anchor>
      <arglist>(const char *resourceNameUTF8, int &amp;dataSizeInBytes) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>patchnames_zip</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a21add71f33114105b52c97ad6442b6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>patchnames_zipSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a4719ab312311970245916468d60d211f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>bigclick_wav</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a4f4cd8014941348555eca49d647516a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>bigclick_wavSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a6cc0974d13b6504e994a203c431b2029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>littleclick_wav</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a12c1d424facc52eef91c8960c345c32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>littleclick_wavSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>aa16e77bb7cca75ac20a1ae656a2f1c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_xml</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a2bc4f474a4f4eb90af23b6603fc71867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_xmlSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>acd572f9eadedf913805c56474b560b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_2_xml</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a89426c808396997d714a72176d26d0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_2_xmlSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a9f5b0a9152fc894907cdb4bdc0d13865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>namedResourceList</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a47004962c065153b20c8b30d05a23c42</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>namedResourceListSize</name>
      <anchorfile>namespacetracktion__engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a900418240ce8edcc5548f834f772a123</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_graph</name>
    <filename>namespacetracktion__graph.html</filename>
    <namespace>tracktion_graph::detail</namespace>
    <namespace>tracktion_graph::node_player_utils</namespace>
    <namespace>tracktion_graph::test_utilities</namespace>
    <class kind="class">tracktion_graph::AudioBufferPool</class>
    <class kind="class">tracktion_graph::AudioBufferStack</class>
    <class kind="class">tracktion_graph::AudioFifo</class>
    <class kind="class">tracktion_graph::BasicSummingNode</class>
    <class kind="struct">tracktion_graph::ChannelConnection</class>
    <class kind="class">tracktion_graph::ChannelRemappingNode</class>
    <class kind="class">tracktion_graph::ConnectedNode</class>
    <class kind="class">tracktion_graph::ForwardingNode</class>
    <class kind="class">tracktion_graph::FunctionNode</class>
    <class kind="class">tracktion_graph::GainNode</class>
    <class kind="class">tracktion_graph::LatencyNode</class>
    <class kind="struct">tracktion_graph::LatencyProcessor</class>
    <class kind="class">tracktion_graph::LightweightSemaphore</class>
    <class kind="class">tracktion_graph::LockFreeMultiThreadedNodePlayer</class>
    <class kind="class">tracktion_graph::MidiNode</class>
    <class kind="class">tracktion_graph::MultiThreadedNodePlayer</class>
    <class kind="class">tracktion_graph::Node</class>
    <class kind="struct">tracktion_graph::NodeBuffer</class>
    <class kind="struct">tracktion_graph::NodeOptimisations</class>
    <class kind="class">tracktion_graph::NodePlayer</class>
    <class kind="struct">tracktion_graph::NodeProperties</class>
    <class kind="class">tracktion_graph::PerformanceMeasurement</class>
    <class kind="struct">tracktion_graph::PlaybackInitialisationInfo</class>
    <class kind="class">tracktion_graph::PlayHead</class>
    <class kind="class">tracktion_graph::PlayHeadState</class>
    <class kind="class">tracktion_graph::RealTimeSpinLock</class>
    <class kind="class">tracktion_graph::ReturnNode</class>
    <class kind="class">tracktion_graph::ScopedPerformanceMeasurement</class>
    <class kind="struct">tracktion_graph::ScopedSignpost</class>
    <class kind="class">tracktion_graph::Semaphore</class>
    <class kind="class">tracktion_graph::SendNode</class>
    <class kind="class">tracktion_graph::SilentNode</class>
    <class kind="class">tracktion_graph::SimpleNodePlayer</class>
    <class kind="class">tracktion_graph::SinkNode</class>
    <class kind="class">tracktion_graph::SinNode</class>
    <class kind="struct">tracktion_graph::SplitTimelineRange</class>
    <class kind="class">tracktion_graph::SummingNode</class>
    <member kind="enumeration">
      <type></type>
      <name>ClearBuffers</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a8f75f3ff4488c522b757e48e94f129b3</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a8f75f3ff4488c522b757e48e94f129b3a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a8f75f3ff4488c522b757e48e94f129b3aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AllocateAudioBuffer</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a7b0f2f3ab8bb6d8f8de4c151e4edc7e7</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a7b0f2f3ab8bb6d8f8de4c151e4edc7e7a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a7b0f2f3ab8bb6d8f8de4c151e4edc7e7aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VertexOrdering</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a184300edcc70de77310266edbee53aa4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4ac9a7dcee6c8867427cad06075090ea8c">preordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4aa594bbe6c0bebbd5e0ac45a054a7ea19">postordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4aae32c07adc26714e62b0e2cd5f77f72d">reversePreordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4afe1fe1181a7b661c316a10925c500c9e">reversePostordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4a867d33f817886982c81cc3934e489e24">bfsPreordering</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a184300edcc70de77310266edbee53aa4a25f364f7adcbbf7a7cc5874f97ae1f12">bfsReversePreordering</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPoolStrategy</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a10337f019803d1cc6738fe931011dfef</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa1c6ad0e53f832c22dd2da6ab1b03c14d">conditionVariable</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa9bfda1f9ada0dd18d1aacb35e1ac4e1e">realTime</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefaf7befc67e4b1ddf3a03d496537760671">hybrid</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfeface1bc7755b9332cfacdf8ee58ef2e3c1">semaphore</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa86073a83d32632d6993e1dd75ff62947">lightweightSemaphore</enumvalue>
      <enumvalue file="namespacetracktion__graph.html" anchor="a10337f019803d1cc6738fe931011dfefa8af14eb3725884652791f95d6016b355">lightweightSemHybrid</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>makeNode</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a70160bf762a45db8470e801a964254df</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a628d15d4a6b61b204cf1103799d923c5</anchor>
      <arglist>(Node &amp;, Visitor &amp;&amp;, bool preordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodesBFS</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a8e0b66cc695290098bf9125f159de667</anchor>
      <arglist>(Node &amp;node, Visitor &amp;&amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>LockFreeMultiThreadedNodePlayer::ThreadPoolCreator</type>
      <name>getPoolCreatorFunction</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ae63400db226e032c326cf5910a2996ea</anchor>
      <arglist>(ThreadPoolStrategy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hash_combine</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a3341633309cf681a469c4e0a125ee616</anchor>
      <arglist>(size_t &amp;seed, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>hash_range</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab222ac4a9ddafa244c8756eee180d43f</anchor>
      <arglist>(It first, It last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hash_range</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a132ffd98f6fad38b25e0deea64ff0c88</anchor>
      <arglist>(std::size_t &amp;seed, It first, It last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>hash</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>acdbd470502b43f0bd3994eb4d5e4031a</anchor>
      <arglist>(size_t seed, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a5ee639a5e7d4339dc212105eb1099654</anchor>
      <arglist>(IntType samplePosition, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>afa4aa243e49c9113a21f00ebae9886d4</anchor>
      <arglist>(double timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; double &gt;</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab0aa1737af5c1896d9b40bf9168d6767</anchor>
      <arglist>(juce::Range&lt; IntType &gt; sampleRange, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a262237c25a6e015c4cdb265039319c91</anchor>
      <arglist>(juce::Range&lt; double &gt; timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a2790080555ade150fcfc142b83824bdc</anchor>
      <arglist>(RangeType timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>toAudioBuffer</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ab71a7d0b07097dacbf48f51f35ab7f4f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>af5275a8f2c1c841e673e4fa90eebb246</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyBy</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a1eea41247582004c7fe8968402572d97</anchor>
      <arglist>(BufferViewType &amp;view, juce::SmoothedValue&lt; SampleType, SmoothingType &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>frameRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a0a906c43b10f8d4281761df063bbd4d4</anchor>
      <arglist>(choc::buffer::FrameCount start, choc::buffer::FrameCount length)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelRange</type>
      <name>channelRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a4af9987141067c848f11ed0f494ec353</anchor>
      <arglist>(choc::buffer::ChannelCount start, choc::buffer::ChannelCount length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckView</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>a78cac2100462a011bb2e728d52c95380</anchor>
      <arglist>(const choc::buffer::BufferView&lt; SampleType, LayoutType &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setThreadPriority</name>
      <anchorfile>namespacetracktion__graph.html</anchorfile>
      <anchor>ae3b5edf1e709bed61da5f896c3898451</anchor>
      <arglist>(std::thread &amp;, int priority)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_graph::detail</name>
    <filename>namespacetracktion__graph_1_1detail.html</filename>
    <class kind="struct">tracktion_graph::detail::VisitNodesWithRecord</class>
    <class kind="struct">tracktion_graph::detail::VisitNodesWithRecordBFS</class>
  </compound>
  <compound kind="namespace">
    <name>tracktion_graph::node_player_utils</name>
    <filename>namespacetracktion__graph_1_1node__player__utils.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reserveAudioBufferPool</name>
      <anchorfile>namespacetracktion__graph_1_1node__player__utils.html</anchorfile>
      <anchor>a8aa91d85f0fb1987c75b618423d6a738</anchor>
      <arglist>(Node *rootNode, const std::vector&lt; Node * &gt; &amp;allNodes, AudioBufferPool &amp;audioBufferPool, size_t numThreads, int blockSize)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion_graph::test_utilities</name>
    <filename>namespacetracktion__graph_1_1test__utilities.html</filename>
    <class kind="struct">tracktion_graph::test_utilities::SineOscillator</class>
    <class kind="struct">tracktion_graph::test_utilities::TestContext</class>
    <class kind="struct">tracktion_graph::test_utilities::TestProcess</class>
    <class kind="struct">tracktion_graph::test_utilities::TestSetup</class>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>aed97ccb88dfa8204a9ec8d765489d02b</anchor>
      <arglist>(ThreadPoolStrategy type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ThreadPoolStrategy &gt;</type>
      <name>getThreadPoolStrategies</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>a8864a4a7318e010378fc7efa8a91f098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGraph</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>a35253f1f5d0c08e738f7afa29aca8cad</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createGraphDescription</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>aff2181079e49f8b2c8de5c9ca1d28147</anchor>
      <arglist>(Node &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSinFile</name>
      <anchorfile>namespacetracktion__graph_1_1test__utilities.html</anchorfile>
      <anchor>ab3a3074138a390667b2e8434b6a98c25</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-3rd_party</name>
    <title>3rd_party</title>
    <filename>group__tracktion__graph-3rd__party.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-3rd_party</name>
    <title>3rd_party</title>
    <filename>group__tracktion__engine-3rd__party.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-audio_files</name>
    <title>audio_files</title>
    <filename>group__tracktion__engine-audio__files.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-control_surfaces</name>
    <title>control_surfaces</title>
    <filename>group__tracktion__engine-control__surfaces.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-docs</name>
    <title>docs</title>
    <filename>group__tracktion__graph-docs.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-midi</name>
    <title>midi</title>
    <filename>group__tracktion__engine-midi.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-model</name>
    <title>model</title>
    <filename>group__tracktion__engine-model.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-playback</name>
    <title>playback</title>
    <filename>group__tracktion__engine-playback.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-plugins</name>
    <title>plugins</title>
    <filename>group__tracktion__engine-plugins.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-project</name>
    <title>project</title>
    <filename>group__tracktion__engine-project.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-selection</name>
    <title>selection</title>
    <filename>group__tracktion__engine-selection.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-timestretch</name>
    <title>timestretch</title>
    <filename>group__tracktion__engine-timestretch.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine</name>
    <title>tracktion_engine</title>
    <filename>group__tracktion__engine.html</filename>
    <subgroup>tracktion_engine-3rd_party</subgroup>
    <subgroup>tracktion_engine-audio_files</subgroup>
    <subgroup>tracktion_engine-control_surfaces</subgroup>
    <subgroup>tracktion_engine-midi</subgroup>
    <subgroup>tracktion_engine-model</subgroup>
    <subgroup>tracktion_engine-playback</subgroup>
    <subgroup>tracktion_engine-plugins</subgroup>
    <subgroup>tracktion_engine-project</subgroup>
    <subgroup>tracktion_engine-selection</subgroup>
    <subgroup>tracktion_engine-timestretch</subgroup>
    <subgroup>tracktion_engine-utilities</subgroup>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-tracktion_graph</name>
    <title>tracktion_graph</title>
    <filename>group__tracktion__graph-tracktion__graph.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph</name>
    <title>tracktion_graph</title>
    <filename>group__tracktion__graph.html</filename>
    <subgroup>tracktion_graph-3rd_party</subgroup>
    <subgroup>tracktion_graph-docs</subgroup>
    <subgroup>tracktion_graph-tracktion_graph</subgroup>
    <subgroup>tracktion_graph-utilities</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_PLAYHEAD</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gacabe18ee431d873a112a29f59da11b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_PLAYHEADSTATE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaf959ccae3ea17be5b66c7d2190bbd5da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_NODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gab5b0aa341cd192ca4261cd9955b448a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_NODEVISITING</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gadd94939092c9411e2eb6429b95d66d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_SAMPLECONVERSION</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga97a819995616a87a71b042e33f7fac20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_CONNECTEDNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gacb5b94db2339b78e1337cab190df173c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_AUDIOBUFFERPOOL</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaca23f64f4f8e5ff3c8968d3c06ca8de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_SEMAPHORE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga5d0f38ee8a621419762a0151efa61c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_ALLOCATION</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gaf7a354e7136789903f00bb8ecec56e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_WAVENODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga0de2a4536c0c9621921e352c83e476f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_MIDINODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga6de34a9ad8790d362f3a9836a8e3c018</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_RACKNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>ga077dcb24ba220e4ffb76794baf1abe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPH_UNIT_TESTS_EDITNODE</name>
      <anchorfile>group__tracktion__graph.html</anchorfile>
      <anchor>gae3e5970d378b2f2f040f436880b586c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-utilities</name>
    <title>utilities</title>
    <filename>group__tracktion__graph-utilities.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-utilities</name>
    <title>utilities</title>
    <filename>group__tracktion__engine-utilities.html</filename>
  </compound>
</tagfile>
